{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/entreprise/entrepriseView.container.js\";\nimport React from 'react';\nimport { Card, Grid, Container } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport EntrepriseAttribute from '../../components/entrepriseAttribute.component';\nimport VisiteComponent from './visite.component';\nimport MyActivityIndicator from '../../components/myActivityIndicator.component';\nimport { changeNameOfPage, changeBackUrl, changeActivePage } from '../navbar/actions';\nimport { connect } from 'react-redux';\nimport config from '../../config';\nimport axios from 'axios';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: newName => dispatch(changeNameOfPage(newName)),\n    changeBackUrl: newBackUrl => dispatch(changeBackUrl(newBackUrl)),\n    changeActivePage: value => dispatch(changeActivePage('etablissements', value))\n  };\n}\n\nclass EntrepriseViewComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visites: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.changeBackUrl('/etablissements');\n    this.setState({\n      isLoading: true\n    });\n    axios.get(config.backend.base_url + '/entreprise/' + this.props.match.params.id).then(({\n      data\n    }) => {\n      this.setState(data);\n      this.props.changeNameOfPage('Établissement ' + data.ETOB_RAISON_SOCIALE);\n      this.props.changeActivePage('/etablissement/' + data.ETOB_IDENT);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentDidUpdate(prevprops) {\n    if (prevprops.match.params.id != this.props.match.params.id) {\n      this.setState({\n        isLoading: true\n      });\n      axios.get(config.backend.base_url + '/entreprise/' + this.props.match.params.id).then(({\n        data\n      }) => {\n        this.setState(data);\n        this.props.changeNameOfPage('Établissement ' + data.ETOB_ENSEIGNE_LIB);\n        this.props.changeActivePage('/etablissement/' + data.ETOB_IDENT);\n        this.setState({\n          isLoading: false\n        });\n      });\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) return React.createElement(MyActivityIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n    return React.createElement(Container, {\n      style: {\n        padding: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Card, {\n      centered: true,\n      raised: true,\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Informations\")), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(EntrepriseAttribute, {\n      name: \"Enseigne :\",\n      icon: \"building\",\n      value: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.ETOB_ENSEIGNE_LIB),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(EntrepriseAttribute, {\n      name: \"Raison Sociale :\",\n      icon: \"address card\",\n      value: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.ETOB_RAISON_SOCIALE),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(EntrepriseAttribute, {\n      name: \"SIRET :\",\n      icon: \"text cursor\",\n      value: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.ETOB_SIRET),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(EntrepriseAttribute, {\n      name: \"NAF :\",\n      icon: \"clipboard\",\n      value: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.state.NAF_LIBELLE),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(EntrepriseAttribute, {\n      name: \"Adresse :\",\n      icon: \"address book\",\n      value: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.state.ETOB_ADR1, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), this.state.ETOB_ADR2 && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.state.ETOB_ADR2, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), this.state.ETOB_ADR3 && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.ETOB_ADR3, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), this.state.ETOB_ADRCP, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \" \"), this.state.ETOB_ADRVILLE),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })))), React.createElement(Card, {\n      centered: true,\n      raised: true,\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Visites\")), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.visites.map(visite => React.createElement(VisiteComponent, {\n      key: visite.VISITE_IDENT,\n      visite: visite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nEntrepriseViewComponent.propTypes = {\n  location: PropTypes.any.isRequired,\n  match: PropTypes.any.isRequired,\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EntrepriseViewComponent);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/entreprise/entrepriseView.container.js"],"names":["React","Card","Grid","Container","PropTypes","EntrepriseAttribute","VisiteComponent","MyActivityIndicator","changeNameOfPage","changeBackUrl","changeActivePage","connect","config","axios","mapStateToProps","mapDispatchToProps","dispatch","newName","newBackUrl","value","EntrepriseViewComponent","Component","constructor","props","state","visites","componentDidMount","setState","isLoading","get","backend","base_url","match","params","id","then","data","ETOB_RAISON_SOCIALE","ETOB_IDENT","componentDidUpdate","prevprops","ETOB_ENSEIGNE_LIB","render","padding","ETOB_SIRET","NAF_LIBELLE","ETOB_ADR1","ETOB_ADR2","ETOB_ADR3","ETOB_ADRCP","ETOB_ADRVILLE","map","visite","VISITE_IDENT","propTypes","location","any","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Grid, Container } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport EntrepriseAttribute from '../../components/entrepriseAttribute.component';\nimport VisiteComponent from './visite.component';\nimport MyActivityIndicator from '../../components/myActivityIndicator.component';\nimport {\n  changeNameOfPage,\n  changeBackUrl,\n  changeActivePage\n} from '../navbar/actions';\nimport { connect } from 'react-redux';\nimport config from '../../config';\nimport axios from 'axios';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: newName => dispatch(changeNameOfPage(newName)),\n    changeBackUrl: newBackUrl => dispatch(changeBackUrl(newBackUrl)),\n    changeActivePage: value =>\n      dispatch(changeActivePage('etablissements', value))\n  };\n}\n\nclass EntrepriseViewComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visites: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.changeBackUrl('/etablissements');\n    this.setState({ isLoading: true });\n    axios\n      .get(\n        config.backend.base_url + '/entreprise/' + this.props.match.params.id\n      )\n      .then(({ data }) => {\n        this.setState(data);\n        this.props.changeNameOfPage(\n          'Établissement ' + data.ETOB_RAISON_SOCIALE\n        );\n        this.props.changeActivePage('/etablissement/' + data.ETOB_IDENT);\n        this.setState({ isLoading: false });\n      });\n  }\n  componentDidUpdate(prevprops) {\n    if (prevprops.match.params.id != this.props.match.params.id) {\n      this.setState({ isLoading: true });\n\n      axios\n        .get(\n          config.backend.base_url + '/entreprise/' + this.props.match.params.id\n        )\n        .then(({ data }) => {\n          this.setState(data);\n          this.props.changeNameOfPage(\n            'Établissement ' + data.ETOB_ENSEIGNE_LIB\n          );\n          this.props.changeActivePage('/etablissement/' + data.ETOB_IDENT);\n          this.setState({ isLoading: false });\n        });\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) return <MyActivityIndicator />;\n    return (\n      <Container style={{ padding: '1rem' }}>\n        <Card centered raised fluid>\n          <Card.Content>\n            <Card.Header textAlign=\"center\">Informations</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Grid>\n              <EntrepriseAttribute\n                name=\"Enseigne :\"\n                icon=\"building\"\n                value={<span>{this.state.ETOB_ENSEIGNE_LIB}</span>}\n              />\n\n              <EntrepriseAttribute\n                name=\"Raison Sociale :\"\n                icon=\"address card\"\n                value={<span>{this.state.ETOB_RAISON_SOCIALE}</span>}\n              />\n              <EntrepriseAttribute\n                name=\"SIRET :\"\n                icon=\"text cursor\"\n                value={<span>{this.state.ETOB_SIRET}</span>}\n              />\n              <EntrepriseAttribute\n                name=\"NAF :\"\n                icon=\"clipboard\"\n                value={<span>{this.state.NAF_LIBELLE}</span>}\n              />\n              <EntrepriseAttribute\n                name=\"Adresse :\"\n                icon=\"address book\"\n                value={\n                  <span>\n                    {this.state.ETOB_ADR1} <br />\n                    {this.state.ETOB_ADR2 && (\n                      <span>\n                        {this.state.ETOB_ADR2} <br />\n                      </span>\n                    )}\n                    {this.state.ETOB_ADR3 && (\n                      <span>\n                        {this.state.ETOB_ADR3} <br />\n                      </span>\n                    )}\n                    {this.state.ETOB_ADRCP}\n                    <span> </span>\n                    {this.state.ETOB_ADRVILLE}\n                  </span>\n                }\n              />\n            </Grid>\n          </Card.Content>\n        </Card>\n        <Card centered raised fluid>\n          <Card.Content>\n            <Card.Header textAlign=\"center\">Visites</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Grid>\n              {this.state.visites.map(visite => (\n                <VisiteComponent key={visite.VISITE_IDENT} visite={visite} />\n              ))}\n            </Grid>\n          </Card.Content>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nEntrepriseViewComponent.propTypes = {\n  location: PropTypes.any.isRequired,\n  match: PropTypes.any.isRequired,\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EntrepriseViewComponent);\n"]},"metadata":{},"sourceType":"module"}