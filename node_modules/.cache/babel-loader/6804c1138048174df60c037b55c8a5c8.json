{"ast":null,"code":"import _slicedToArray from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/components/visites/trameSelectionModal.js\";\nimport React, { useState } from 'react';\nimport { Modal, Header, List, Button } from 'semantic-ui-react';\nimport PouchDbService from '../../services/index';\nimport PropTypes from 'prop-types';\n\nfunction TrameSelectionModal(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedTrame = _useState2[0],\n        setSelectedTrame = _useState2[1];\n\n  async function selectTrame() {\n    await PouchDbService.services.visite.associateTrame(props.visite, selectedTrame);\n    props.close();\n    props.history.push('/visite/' + props.visite.visiteData.VISITE_IDENT);\n  }\n\n  return React.createElement(Modal, {\n    closeIcon: true,\n    open: props.opened,\n    onClose: () => {\n      props.close();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Pas de trame associ\\xE9e \\xE0 cette visite.\"), React.createElement(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Veuillez associer une trame \\xE0 cette visite.\"), React.createElement(List, {\n    divided: true,\n    relaxed: true,\n    verticalAlign: \"middle\",\n    style: {\n      maxHeight: 200,\n      overflow: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.trames.map((trame, i) => React.createElement(List.Item, {\n    onClick: () => setSelectedTrame(trame),\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      padding: 15,\n      cursor: 'pointer',\n      backgroundColor: selectedTrame === trame && '#f2f2f2'\n    },\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, trame.name))))), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      marginTop: 10,\n      justifyContent: 'flex-end'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"green\",\n    disabled: selectedTrame.length === 0,\n    onClick: () => selectTrame(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"S\\xE9lectionner\"))));\n}\n\nTrameSelectionModal.propTypes = {\n  history: PropTypes.any,\n  visite: PropTypes.object,\n  close: PropTypes.func,\n  opened: PropTypes.bool,\n  trames: PropTypes.array\n};\nexport default TrameSelectionModal;","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/components/visites/trameSelectionModal.js"],"names":["React","useState","Modal","Header","List","Button","PouchDbService","PropTypes","TrameSelectionModal","props","selectedTrame","setSelectedTrame","selectTrame","services","visite","associateTrame","close","history","push","visiteData","VISITE_IDENT","opened","maxHeight","overflow","trames","map","trame","i","display","justifyContent","padding","cursor","backgroundColor","name","marginTop","length","propTypes","any","object","func","bool","array"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { Modal, Header, List, Button } from 'semantic-ui-react';\nimport PouchDbService from '../../services/index';\n\nimport PropTypes from 'prop-types';\n\nfunction TrameSelectionModal(props) {\n  const [selectedTrame, setSelectedTrame] = useState([]);\n\n  async function selectTrame() {\n    await PouchDbService.services.visite.associateTrame(\n      props.visite,\n      selectedTrame\n    );\n    props.close();\n    props.history.push('/visite/' + props.visite.visiteData.VISITE_IDENT);\n  }\n\n  return (\n    <Modal\n      closeIcon={true}\n      open={props.opened}\n      onClose={() => {\n        props.close();\n      }}\n    >\n      <Modal.Header>Pas de trame associée à cette visite.</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <Header as=\"h5\">Veuillez associer une trame à cette visite.</Header>\n\n          <List\n            divided\n            relaxed\n            verticalAlign=\"middle\"\n            style={{\n              maxHeight: 200,\n              overflow: 'auto'\n            }}\n          >\n            {props.trames.map((trame, i) => (\n              <List.Item\n                onClick={() => setSelectedTrame(trame)}\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  padding: 15,\n                  cursor: 'pointer',\n                  backgroundColor: selectedTrame === trame && '#f2f2f2'\n                }}\n                key={i}\n              >\n                <Header as=\"h5\">{trame.name}</Header>\n              </List.Item>\n            ))}\n          </List>\n        </Modal.Description>\n        <div\n          style={{ display: 'flex', marginTop: 10, justifyContent: 'flex-end' }}\n        >\n          <Button\n            color=\"green\"\n            disabled={selectedTrame.length === 0}\n            onClick={() => selectTrame()}\n          >\n            Sélectionner\n          </Button>\n        </div>\n      </Modal.Content>\n    </Modal>\n  );\n}\n\nTrameSelectionModal.propTypes = {\n  history: PropTypes.any,\n  visite: PropTypes.object,\n  close: PropTypes.func,\n  opened: PropTypes.bool,\n  trames: PropTypes.array\n};\n\nexport default TrameSelectionModal;\n"]},"metadata":{},"sourceType":"module"}