{"ast":null,"code":"import PouchDB from 'pouchdb';\nimport PouchDBFind from 'pouchdb-find';\nimport config from '../config';\nPouchDB.plugin(PouchDBFind);\n\nclass pouchDbService {\n  constructor(pouchDbUrl) {\n    this.db = new PouchDB('mes-dossiers');\n    var opts = {\n      live: true,\n      retry: true\n    };\n    this.db.replicate.from(pouchDbUrl, opts);\n    this.db.createIndex({\n      index: {\n        fields: ['DOSSIER_IDENT']\n      }\n    });\n    this.db.createIndex({\n      index: {\n        fields: ['ACDG_CODE_ACTION']\n      }\n    });\n  } //call the callback on db changes\n\n\n  onChanges(cb) {\n    this.db.changes({\n      since: 'now',\n      live: true\n    }).on('change', cb);\n  } //getAllDocsOfTheDB\n\n\n  getAllDocs() {\n    return this.db.allDocs({\n      include_docs: true,\n      descending: true\n    }).then(table => table.rows.map(item => item.doc).filter(item => !(item._id.split('/')[0] == \"_design\")));\n  }\n\n  getAllActionCode() {\n    return this.getAllDocs().then(array => array.map(item => item.ACDG_CODE_ACTION).filter((value, index, self) => self.indexOf(value) === index));\n  }\n\n  getDossierIdFromActionCode(actionCode) {\n    return this.db.find({\n      selector: {\n        ACDG_CODE_ACTION: actionCode\n      }\n    }).then(items => items.docs[0].DOSSIER_IDENT);\n  }\n\n  getDossierById(dossier) {\n    return this.db.find({\n      selector: {\n        DOSSIER_IDENT: parseInt(dossier)\n      }\n    }).then(res => res.docs[0]);\n  }\n\n}\n\nexport default new pouchDbService(config.couchDb.url_dossiers);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/services/dossier.service.js"],"names":["PouchDB","PouchDBFind","config","plugin","pouchDbService","constructor","pouchDbUrl","db","opts","live","retry","replicate","from","createIndex","index","fields","onChanges","cb","changes","since","on","getAllDocs","allDocs","include_docs","descending","then","table","rows","map","item","doc","filter","_id","split","getAllActionCode","array","ACDG_CODE_ACTION","value","self","indexOf","getDossierIdFromActionCode","actionCode","find","selector","items","docs","DOSSIER_IDENT","getDossierById","dossier","parseInt","res","couchDb","url_dossiers"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEAF,OAAO,CAACG,MAAR,CAAeF,WAAf;;AACA,MAAMG,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKC,EAAL,GAAU,IAAIP,OAAJ,CAAY,cAAZ,CAAV;AACA,QAAIQ,IAAI,GAAG;AACPC,MAAAA,IAAI,EAAE,IADC;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAAX;AAIA,SAAKH,EAAL,CAAQI,SAAR,CAAkBC,IAAlB,CAAuBN,UAAvB,EAAmCE,IAAnC;AACA,SAAKD,EAAL,CAAQM,WAAR,CAAoB;AAChBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,CAAC,eAAD;AAAV;AADS,KAApB;AAGA,SAAKR,EAAL,CAAQM,WAAR,CAAoB;AAChBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,CAAC,kBAAD;AAAV;AADS,KAApB;AAGH,GAdgB,CAgBjB;;;AACAC,EAAAA,SAAS,CAACC,EAAD,EAAK;AACV,SAAKV,EAAL,CACKW,OADL,CACa;AACLC,MAAAA,KAAK,EAAE,KADF;AAELV,MAAAA,IAAI,EAAE;AAFD,KADb,EAKKW,EALL,CAKQ,QALR,EAKkBH,EALlB;AAMH,GAxBgB,CA0BjB;;;AACAI,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKd,EAAL,CAAQe,OAAR,CAAgB;AAAEC,MAAAA,YAAY,EAAE,IAAhB;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KAAhB,EACFC,IADE,CACGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAeC,IAAI,IAAIA,IAAI,CAACC,GAA5B,EAAiCC,MAAjC,CAAwCF,IAAI,IAAI,EAAEA,IAAI,CAACG,GAAL,CAASC,KAAT,CAAe,GAAf,EAAoB,CAApB,KAA0B,SAA5B,CAAhD,CADZ,CAAP;AAEH;;AAEDC,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAKb,UAAL,GACFI,IADE,CACGU,KAAK,IAAIA,KAAK,CAACP,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACO,gBAAvB,EAAyCL,MAAzC,CAAgD,CAACM,KAAD,EAAQvB,KAAR,EAAewB,IAAf,KAAwBA,IAAI,CAACC,OAAL,CAAaF,KAAb,MAAwBvB,KAAhG,CADZ,CAAP;AAEH;;AAED0B,EAAAA,0BAA0B,CAACC,UAAD,EAAa;AACnC,WAAO,KAAKlC,EAAL,CAAQmC,IAAR,CAAa;AAChBC,MAAAA,QAAQ,EAAE;AACNP,QAAAA,gBAAgB,EAAEK;AADZ;AADM,KAAb,EAIJhB,IAJI,CAICmB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAW,CAAX,EAAcC,aAJxB,CAAP;AAKH;;AAEDC,EAAAA,cAAc,CAACC,OAAD,EAAU;AACpB,WAAO,KAAKzC,EAAL,CACFmC,IADE,CACG;AACFC,MAAAA,QAAQ,EAAE;AACNG,QAAAA,aAAa,EAAEG,QAAQ,CAACD,OAAD;AADjB;AADR,KADH,EAMFvB,IANE,CAMGyB,GAAG,IAAIA,GAAG,CAACL,IAAJ,CAAS,CAAT,CANV,CAAP;AAOH;;AArDgB;;AAwDrB,eAAe,IAAIzC,cAAJ,CAAmBF,MAAM,CAACiD,OAAP,CAAeC,YAAlC,CAAf","sourcesContent":["import PouchDB from 'pouchdb';\nimport PouchDBFind from 'pouchdb-find';\nimport config from '../config';\n\nPouchDB.plugin(PouchDBFind);\nclass pouchDbService {\n    constructor(pouchDbUrl) {\n        this.db = new PouchDB('mes-dossiers');\n        var opts = {\n            live: true,\n            retry: true\n        };\n        this.db.replicate.from(pouchDbUrl, opts);\n        this.db.createIndex({\n            index: { fields: ['DOSSIER_IDENT'] }\n        });\n        this.db.createIndex({\n            index: { fields: ['ACDG_CODE_ACTION'] }\n        });\n    }\n\n    //call the callback on db changes\n    onChanges(cb) {\n        this.db\n            .changes({\n                since: 'now',\n                live: true\n            })\n            .on('change', cb);\n    }\n\n    //getAllDocsOfTheDB\n    getAllDocs() {\n        return this.db.allDocs({ include_docs: true, descending: true })\n            .then(table => table.rows.map(item => item.doc).filter(item => !(item._id.split('/')[0] == \"_design\")));\n    }\n\n    getAllActionCode() {\n        return this.getAllDocs()\n            .then(array => array.map(item => item.ACDG_CODE_ACTION).filter((value, index, self) => self.indexOf(value) === index))\n    }\n\n    getDossierIdFromActionCode(actionCode) {\n        return this.db.find({\n            selector: {\n                ACDG_CODE_ACTION: actionCode\n            }\n        }).then(items => items.docs[0].DOSSIER_IDENT)\n    }\n\n    getDossierById(dossier) {\n        return this.db\n            .find({\n                selector: {\n                    DOSSIER_IDENT: parseInt(dossier)\n                }\n            })\n            .then(res => res.docs[0]);\n    }\n}\n\nexport default new pouchDbService(config.couchDb.url_dossiers);\n"]},"metadata":{},"sourceType":"module"}