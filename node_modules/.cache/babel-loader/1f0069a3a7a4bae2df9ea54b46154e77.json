{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/trame.js\";\nimport React, { Component } from 'react';\nimport { List, Icon, Dropdown, TextArea, Form, Button } from 'semantic-ui-react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport PropTypes from 'prop-types';\n\nclass TrameComponent extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.fileInputRef = React.createRef();\n\n    this.handleDoubleClick = document => {\n      this.editName(document);\n    };\n\n    this.state = {\n      taskEdited: null,\n      taskName: null,\n      activeDropdowns: []\n    };\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.clickCount = null;\n    this.singleClickTimer = '';\n  }\n\n  handleTextChange(e, data, task) {\n    this.props.handleTextChange(task, data.value);\n  }\n\n  handleClicks(document) {\n    this.clickCount++;\n\n    if (this.clickCount === 1) {\n      this.singleClickTimer = setTimeout(function () {\n        this.clickCount = 0;\n      }.bind(this), 300);\n    } else if (this.clickCount === 2) {\n      clearTimeout(this.singleClickTimer);\n      this.clickCount = 0;\n      this.handleDoubleClick(document);\n    }\n  }\n\n  fileChange(e) {\n    console.log(e.target.files[0]);\n  }\n\n  handleChangeName(event) {\n    this.setState({\n      taskName: event.target.value.toUpperCase()\n    });\n  }\n\n  handleClick(index) {\n    const i = this.state.activeDropdowns.indexOf(index);\n    i === -1 ? this.setState({\n      activeDropdowns: [...this.state.activeDropdowns, index]\n    }) : this.setState({\n      activeDropdowns: this.state.activeDropdowns.filter(e => e !== index)\n    });\n  }\n\n  validateName(task, name) {\n    this.props.validateName(task, name);\n    this.setState({\n      taskEdited: null,\n      taskName: null\n    });\n  }\n\n  editName(task) {\n    this.setState({\n      taskEdited: task,\n      taskName: task.title.toUpperCase()\n    });\n  }\n\n  render() {\n    return React.createElement(List, {\n      className: \"responsivepadding\",\n      relaxed: true,\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.props.taskList.map((task, i) => React.createElement(Draggable, {\n      key: task.id.toString(),\n      draggableId: task.id.toString(),\n      index: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n      ref: provided.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        borderRadius: 3,\n        borderBottom: '3px solid #c0c1c4',\n        margin: 15,\n        boxShadow: '6px 1px 12px 2px #cfcfcf',\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      style: {\n        borderTopLeftRadius: 3,\n        borderTopRightRadius: 3,\n        padding: 15,\n        backgroundColor: '#4286f4'\n      },\n      key: task.title // onClick={() => task.documentToFill && this.handleClick(i)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"times circle\",\n      style: {\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        color: 'red',\n        cursor: 'pointer',\n        fontSize: '1em'\n      },\n      onClick: () => this.props.deleteTask(task),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        flex: 8,\n        color: 'white',\n        flexDirection: 'row',\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: () => {\n        this.handleClicks(task);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      disabled: task != this.state.taskEdited,\n      type: \"text\",\n      style: {\n        background: 'transparent',\n        border: '0',\n        outline: 'none',\n        color: 'white'\n      },\n      value: task != this.state.taskEdited ? task.title.toUpperCase() : this.state.taskName,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), task != this.state.taskEdited ? React.createElement(Icon, {\n      style: {\n        marginLeft: 10,\n        cursor: 'pointer'\n      },\n      onClick: () => this.editName(task),\n      name: \"pencil\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }) : React.createElement(Icon, {\n      style: {\n        marginLeft: 10,\n        cursor: 'pointer'\n      },\n      onClick: () => this.validateName(task, this.state.taskName),\n      name: \"check\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        flex: 1,\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, task.type === 'basic' ? React.createElement(Icon, {\n      name: \"ellipsis horizontal\",\n      style: {\n        cursor: 'pointer',\n        color: 'white'\n      },\n      onClick: () => this.props.changeType(task, 'text'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }) : task.type === 'text' ? React.createElement(Icon, {\n      name: \"text cursor\",\n      style: {\n        cursor: 'pointer',\n        color: 'white'\n      },\n      onClick: () => this.props.changeType(task, 'document'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }) : React.createElement(Icon, {\n      name: \"file\",\n      style: {\n        cursor: 'pointer',\n        color: 'white'\n      },\n      onClick: () => this.props.changeType(task, 'basic'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), task.type === 'text' || task.type === 'document' ? this.state.activeDropdowns.includes(task.index) ? React.createElement(List.Icon, {\n      onClick: () => this.handleClick(task.index),\n      name: \"caret up\",\n      style: {\n        color: 'white',\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }) : React.createElement(List.Icon, {\n      onClick: () => this.handleClick(task.index),\n      name: \"caret down\",\n      style: {\n        color: 'white',\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }) : React.createElement(List.Icon, {\n      color: \"grey\",\n      name: \"caret down\",\n      style: {\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    })))), React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, this.state.activeDropdowns.includes(task.index) && React.createElement(\"div\", {\n      style: {\n        padding: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, task.type === 'text' ? React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      value: task.innerContent,\n      onChange: (e, data) => this.handleTextChange(e, data, task),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })) : React.createElement(React.Fragment, null, React.createElement(Button, {\n      style: {\n        background: '#3C4586',\n        color: 'white'\n      },\n      content: \"Ajouter un fichier\",\n      labelPosition: \"left\",\n      icon: \"file\",\n      onClick: () => this.fileInputRef.current.click(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      ref: this.fileInputRef,\n      type: \"file\",\n      hidden: true,\n      onChange: this.fileChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nTrameComponent.propTypes = {\n  taskList: PropTypes.array,\n  changeType: PropTypes.func,\n  validateName: PropTypes.func,\n  deleteTask: PropTypes.func\n};\nexport default TrameComponent;","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/trame.js"],"names":["React","Component","List","Icon","Dropdown","TextArea","Form","Button","Draggable","PropTypes","TrameComponent","constructor","props","context","fileInputRef","createRef","handleDoubleClick","document","editName","state","taskEdited","taskName","activeDropdowns","handleChangeName","bind","clickCount","singleClickTimer","handleTextChange","e","data","task","value","handleClicks","setTimeout","clearTimeout","fileChange","console","log","target","files","event","setState","toUpperCase","handleClick","index","i","indexOf","filter","validateName","name","title","render","textAlign","taskList","map","id","toString","provided","draggableProps","dragHandleProps","innerRef","borderRadius","borderBottom","margin","boxShadow","position","borderTopLeftRadius","borderTopRightRadius","padding","backgroundColor","top","left","color","cursor","fontSize","deleteTask","display","width","flex","flexDirection","background","border","outline","marginLeft","type","changeType","includes","innerContent","justifyContent","marginTop","current","click","propTypes","array","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  List,\n  Icon,\n  Dropdown,\n  TextArea,\n  Form,\n  Button\n} from 'semantic-ui-react';\n\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport PropTypes from 'prop-types';\n\nclass TrameComponent extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      taskEdited: null,\n      taskName: null,\n      activeDropdowns: []\n    };\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.clickCount = null;\n    this.singleClickTimer = '';\n  }\n\n  fileInputRef = React.createRef();\n\n  handleTextChange(e, data, task) {\n    this.props.handleTextChange(task, data.value);\n  }\n\n  handleDoubleClick = document => {\n    this.editName(document);\n  };\n  handleClicks(document) {\n    this.clickCount++;\n    if (this.clickCount === 1) {\n      this.singleClickTimer = setTimeout(\n        function() {\n          this.clickCount = 0;\n        }.bind(this),\n        300\n      );\n    } else if (this.clickCount === 2) {\n      clearTimeout(this.singleClickTimer);\n      this.clickCount = 0;\n      this.handleDoubleClick(document);\n    }\n  }\n\n  fileChange(e) {\n    console.log(e.target.files[0]);\n  }\n\n  handleChangeName(event) {\n    this.setState({ taskName: event.target.value.toUpperCase() });\n  }\n\n  handleClick(index) {\n    const i = this.state.activeDropdowns.indexOf(index);\n    i === -1\n      ? this.setState({\n          activeDropdowns: [...this.state.activeDropdowns, index]\n        })\n      : this.setState({\n          activeDropdowns: this.state.activeDropdowns.filter(e => e !== index)\n        });\n  }\n\n  validateName(task, name) {\n    this.props.validateName(task, name);\n    this.setState({ taskEdited: null, taskName: null });\n  }\n\n  editName(task) {\n    this.setState({\n      taskEdited: task,\n      taskName: task.title.toUpperCase()\n    });\n  }\n\n  render() {\n    return (\n      <List className=\"responsivepadding\" relaxed style={{ textAlign: 'left' }}>\n        {this.props.taskList.map((task, i) => (\n          <Draggable\n            key={task.id.toString()}\n            draggableId={task.id.toString()}\n            index={i}\n          >\n            {provided => (\n              <div\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n              >\n                <div\n                  style={{\n                    borderRadius: 3,\n                    borderBottom: '3px solid #c0c1c4',\n\n                    margin: 15,\n                    boxShadow: '6px 1px 12px 2px #cfcfcf',\n                    position: 'relative'\n                  }}\n                >\n                  <List.Item\n                    style={{\n                      borderTopLeftRadius: 3,\n                      borderTopRightRadius: 3,\n                      padding: 15,\n                      backgroundColor: '#4286f4'\n                    }}\n                    key={task.title}\n                    // onClick={() => task.documentToFill && this.handleClick(i)}\n                  >\n                    <Icon\n                      name=\"times circle\"\n                      style={{\n                        position: 'absolute',\n                        top: '0',\n                        left: '0',\n\n                        color: 'red',\n                        cursor: 'pointer',\n                        fontSize: '1em'\n                      }}\n                      onClick={() => this.props.deleteTask(task)}\n                    ></Icon>\n                    <div\n                      style={{\n                        display: 'flex',\n                        width: '100%'\n                      }}\n                    >\n                      <div style={{ flex: 1 }}>\n                        {/* {this.getIconFromStatus(task.status)} */}\n                      </div>\n                      <div\n                        style={{\n                          flex: 8,\n                          color: 'white',\n                          flexDirection: 'row',\n                          display: 'flex'\n                        }}\n                      >\n                        <div\n                          onClick={() => {\n                            this.handleClicks(task);\n                          }}\n                        >\n                          <input\n                            disabled={task != this.state.taskEdited}\n                            type=\"text\"\n                            style={{\n                              background: 'transparent',\n                              border: '0',\n                              outline: 'none',\n                              color: 'white'\n                            }}\n                            value={\n                              task != this.state.taskEdited\n                                ? task.title.toUpperCase()\n                                : this.state.taskName\n                            }\n                            onChange={this.handleChangeName}\n                          ></input>\n                        </div>\n                        {task != this.state.taskEdited ? (\n                          <Icon\n                            style={{ marginLeft: 10, cursor: 'pointer' }}\n                            onClick={() => this.editName(task)}\n                            name=\"pencil\"\n                            color=\"white\"\n                          ></Icon>\n                        ) : (\n                          <Icon\n                            style={{ marginLeft: 10, cursor: 'pointer' }}\n                            onClick={() =>\n                              this.validateName(task, this.state.taskName)\n                            }\n                            name=\"check\"\n                            color=\"white\"\n                          ></Icon>\n                        )}\n                      </div>\n                      <div\n                        style={{\n                          flex: 1,\n                          textAlign: 'right'\n                        }}\n                      >\n                        {task.type === 'basic' ? (\n                          <Icon\n                            name=\"ellipsis horizontal\"\n                            style={{ cursor: 'pointer', color: 'white' }}\n                            onClick={() => this.props.changeType(task, 'text')}\n                          ></Icon>\n                        ) : task.type === 'text' ? (\n                          <Icon\n                            name=\"text cursor\"\n                            style={{ cursor: 'pointer', color: 'white' }}\n                            onClick={() =>\n                              this.props.changeType(task, 'document')\n                            }\n                          ></Icon>\n                        ) : (\n                          <Icon\n                            name=\"file\"\n                            style={{ cursor: 'pointer', color: 'white' }}\n                            onClick={() => this.props.changeType(task, 'basic')}\n                          ></Icon>\n                        )}\n\n                        {task.type === 'text' || task.type === 'document' ? (\n                          this.state.activeDropdowns.includes(task.index) ? (\n                            <List.Icon\n                              onClick={() => this.handleClick(task.index)}\n                              name=\"caret up\"\n                              style={{ color: 'white', cursor: 'pointer' }}\n                            ></List.Icon>\n                          ) : (\n                            <List.Icon\n                              onClick={() => this.handleClick(task.index)}\n                              name=\"caret down\"\n                              style={{ color: 'white', cursor: 'pointer' }}\n                            ></List.Icon>\n                          )\n                        ) : (\n                          <List.Icon\n                            color=\"grey\"\n                            name=\"caret down\"\n                            style={{ cursor: 'pointer' }}\n                          ></List.Icon>\n                        )}\n                      </div>\n                    </div>\n                  </List.Item>\n                  <List.Item>\n                    {this.state.activeDropdowns.includes(task.index) && (\n                      <div style={{ padding: 15 }}>\n                        {task.type === 'text' ? (\n                          <Form>\n                            <TextArea\n                              value={task.innerContent}\n                              onChange={(e, data) =>\n                                this.handleTextChange(e, data, task)\n                              }\n                            />\n                            <div\n                              style={{\n                                width: '100%',\n                                display: 'flex',\n                                justifyContent: 'flex-end',\n                                marginTop: 10\n                              }}\n                            ></div>\n                          </Form>\n                        ) : (\n                          <>\n                            <Button\n                              style={{\n                                background: '#3C4586',\n                                color: 'white'\n                              }}\n                              content=\"Ajouter un fichier\"\n                              labelPosition=\"left\"\n                              icon=\"file\"\n                              onClick={() => this.fileInputRef.current.click()}\n                            />\n                            <input\n                              ref={this.fileInputRef}\n                              type=\"file\"\n                              hidden\n                              onChange={this.fileChange}\n                            />\n                          </>\n                        )}\n                      </div>\n                    )}\n                  </List.Item>\n                </div>\n              </div>\n            )}\n          </Draggable>\n        ))}\n      </List>\n    );\n  }\n}\n\nTrameComponent.propTypes = {\n  taskList: PropTypes.array,\n  changeType: PropTypes.func,\n  validateName: PropTypes.func,\n  deleteTask: PropTypes.func\n};\n\nexport default TrameComponent;\n"]},"metadata":{},"sourceType":"module"}