{"ast":null,"code":"import PouchDB from 'pouchdb';\nimport PouchDBFind from 'pouchdb-find';\nimport config from '../../config';\nimport replicateFromSQL from '../replicationHandler';\nPouchDB.plugin(PouchDBFind);\n\nclass ActiviteService {\n  constructor() {\n    let pouchDbUrl = config.couchDb.url_activite;\n    this.db = new 'activite'();\n    var opts = {\n      batch_size: 1000,\n      live: true,\n      retry: true\n    };\n    this.replication = replicateFromSQL(this.db, config.backend.base_url + '/fulldata/activite/', 'activite_date');\n\n    this.resetDb = () => undefined; // no need to reset activite\n\n  } //getAllDocsOfTheDB\n\n\n  getAllDocs() {\n    return this.db.allDocs({\n      include_docs: true,\n      descending: true\n    }).then(table => table.rows.map(item => item.doc).filter(item => !(item._id.split('/')[0] == '_design')));\n  }\n\n  getActiviteById(codeActivite) {\n    return this.db.find({\n      selector: {\n        ACDG_IDENT: parseInt(codeActivite)\n      }\n    }).then(res => res.docs[0]);\n  }\n\n}\n\nexport default ActiviteService;","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/services/subservices/activite.service.js"],"names":["PouchDB","PouchDBFind","config","replicateFromSQL","plugin","ActiviteService","constructor","pouchDbUrl","couchDb","url_activite","db","opts","batch_size","live","retry","replication","backend","base_url","resetDb","undefined","getAllDocs","allDocs","include_docs","descending","then","table","rows","map","item","doc","filter","_id","split","getActiviteById","codeActivite","find","selector","ACDG_IDENT","parseInt","res","docs"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AAEAH,OAAO,CAACI,MAAR,CAAeH,WAAf;;AACA,MAAMI,eAAN,CAAsB;AACpBC,EAAAA,WAAW,GAAG;AACZ,QAAIC,UAAU,GAAGL,MAAM,CAACM,OAAP,CAAeC,YAAhC;AACA,SAAKC,EAAL,GAAU,IAAK,UAAL,EAAV;AACA,QAAIC,IAAI,GAAG;AACTC,MAAAA,UAAU,EAAE,IADH;AAETC,MAAAA,IAAI,EAAE,IAFG;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAX;AAMA,SAAKC,WAAL,GAAmBZ,gBAAgB,CACjC,KAAKO,EAD4B,EAEjCR,MAAM,CAACc,OAAP,CAAeC,QAAf,GAA0B,qBAFO,EAGjC,eAHiC,CAAnC;;AAKA,SAAKC,OAAL,GAAe,MAAMC,SAArB,CAdY,CAcoB;;AACjC,GAhBmB,CAkBpB;;;AACAC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKV,EAAL,CACJW,OADI,CACI;AAAEC,MAAAA,YAAY,EAAE,IAAhB;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KADJ,EAEJC,IAFI,CAECC,KAAK,IACTA,KAAK,CAACC,IAAN,CACGC,GADH,CACOC,IAAI,IAAIA,IAAI,CAACC,GADpB,EAEGC,MAFH,CAEUF,IAAI,IAAI,EAAEA,IAAI,CAACG,GAAL,CAASC,KAAT,CAAe,GAAf,EAAoB,CAApB,KAA0B,SAA5B,CAFlB,CAHG,CAAP;AAOD;;AACDC,EAAAA,eAAe,CAACC,YAAD,EAAe;AAC5B,WAAO,KAAKxB,EAAL,CACJyB,IADI,CACC;AACJC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,UAAU,EAAEC,QAAQ,CAACJ,YAAD;AADZ;AADN,KADD,EAMJV,IANI,CAMCe,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAAS,CAAT,CANR,CAAP;AAOD;;AApCmB;;AAuCtB,eAAenC,eAAf","sourcesContent":["import PouchDB from 'pouchdb';\nimport PouchDBFind from 'pouchdb-find';\nimport config from '../../config';\nimport replicateFromSQL from '../replicationHandler';\n\nPouchDB.plugin(PouchDBFind);\nclass ActiviteService {\n  constructor() {\n    let pouchDbUrl = config.couchDb.url_activite;\n    this.db = new ('activite');\n    var opts = {\n      batch_size: 1000,\n      live: true,\n      retry: true\n    };\n\n    this.replication = replicateFromSQL(\n      this.db,\n      config.backend.base_url + '/fulldata/activite/',\n      'activite_date'\n    );\n    this.resetDb = () => undefined; // no need to reset activite\n  }\n\n  //getAllDocsOfTheDB\n  getAllDocs() {\n    return this.db\n      .allDocs({ include_docs: true, descending: true })\n      .then(table =>\n        table.rows\n          .map(item => item.doc)\n          .filter(item => !(item._id.split('/')[0] == '_design'))\n      );\n  }\n  getActiviteById(codeActivite) {\n    return this.db\n      .find({\n        selector: {\n          ACDG_IDENT: parseInt(codeActivite)\n        }\n      })\n      .then(res => res.docs[0]);\n  }\n}\n\nexport default ActiviteService;\n"]},"metadata":{},"sourceType":"module"}