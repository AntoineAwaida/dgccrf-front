{"ast":null,"code":"import PouchDB from 'pouchdb';\nimport PouchDBFind from 'pouchdb-find';\nimport config from '../config';\nPouchDB.plugin(PouchDBFind);\n\nclass pouchDbService {\n  constructor(pouchDbUrl) {\n    this.db = new PouchDB('mes-dossiers');\n    var opts = {\n      live: true,\n      retry: true\n    };\n    this.db.replicate.to(pouchDbUrl, opts);\n    this.db.replicate.from(pouchDbUrl, opts);\n    this.db.createIndex({\n      index: {\n        fields: ['DOSSIER_IDENT']\n      }\n    });\n  } //call the callback on db changes\n\n\n  onChanges(cb) {\n    this.db.changes({\n      since: 'now',\n      live: true\n    }).on('change', cb);\n  } //getAllDocsOfTheDB\n\n\n  getAllDocs() {\n    return this.db.allDocs({\n      include_docs: true,\n      descending: true\n    }).then(table => table.rows.map(item => item.doc));\n  }\n\n  getDossierById(dossier) {\n    return this.db.find({\n      selector: {\n        DOSSIER_IDENT: parseInt(dossier)\n      }\n    }).then(res => res.docs[0]);\n  }\n\n}\n\nexport default new pouchDbService(config.couchDb.url_dossiers);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/services/dossier.service.js"],"names":["PouchDB","PouchDBFind","config","plugin","pouchDbService","constructor","pouchDbUrl","db","opts","live","retry","replicate","to","from","createIndex","index","fields","onChanges","cb","changes","since","on","getAllDocs","allDocs","include_docs","descending","then","table","rows","map","item","doc","getDossierById","dossier","find","selector","DOSSIER_IDENT","parseInt","res","docs","couchDb","url_dossiers"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEAF,OAAO,CAACG,MAAR,CAAeF,WAAf;;AACA,MAAMG,cAAN,CAAqB;AACnBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACtB,SAAKC,EAAL,GAAU,IAAIP,OAAJ,CAAY,cAAZ,CAAV;AACA,QAAIQ,IAAI,GAAG;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAX;AAIA,SAAKH,EAAL,CAAQI,SAAR,CAAkBC,EAAlB,CAAqBN,UAArB,EAAiCE,IAAjC;AACA,SAAKD,EAAL,CAAQI,SAAR,CAAkBE,IAAlB,CAAuBP,UAAvB,EAAmCE,IAAnC;AACA,SAAKD,EAAL,CAAQO,WAAR,CAAoB;AAClBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,CAAC,eAAD;AAAV;AADW,KAApB;AAGD,GAZkB,CAcnB;;;AACAC,EAAAA,SAAS,CAACC,EAAD,EAAK;AACZ,SAAKX,EAAL,CACGY,OADH,CACW;AACPC,MAAAA,KAAK,EAAE,KADA;AAEPX,MAAAA,IAAI,EAAE;AAFC,KADX,EAKGY,EALH,CAKM,QALN,EAKgBH,EALhB;AAMD,GAtBkB,CAwBnB;;;AACAI,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKf,EAAL,CACJgB,OADI,CACI;AAAEC,MAAAA,YAAY,EAAE,IAAhB;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KADJ,EAEJC,IAFI,CAECC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAeC,IAAI,IAAIA,IAAI,CAACC,GAA5B,CAFV,CAAP;AAGD;;AAEDC,EAAAA,cAAc,CAACC,OAAD,EAAU;AACtB,WAAO,KAAK1B,EAAL,CACJ2B,IADI,CACC;AACJC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,aAAa,EAAEC,QAAQ,CAACJ,OAAD;AADf;AADN,KADD,EAMJP,IANI,CAMCY,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAAS,CAAT,CANR,CAAP;AAOD;;AAvCkB;;AA0CrB,eAAe,IAAInC,cAAJ,CAAmBF,MAAM,CAACsC,OAAP,CAAeC,YAAlC,CAAf","sourcesContent":["import PouchDB from 'pouchdb';\nimport PouchDBFind from 'pouchdb-find';\nimport config from '../config';\n\nPouchDB.plugin(PouchDBFind);\nclass pouchDbService {\n  constructor(pouchDbUrl) {\n    this.db = new PouchDB('mes-dossiers');\n    var opts = {\n      live: true,\n      retry: true\n    };\n    this.db.replicate.to(pouchDbUrl, opts);\n    this.db.replicate.from(pouchDbUrl, opts);\n    this.db.createIndex({\n      index: { fields: ['DOSSIER_IDENT'] }\n    });\n  }\n\n  //call the callback on db changes\n  onChanges(cb) {\n    this.db\n      .changes({\n        since: 'now',\n        live: true\n      })\n      .on('change', cb);\n  }\n\n  //getAllDocsOfTheDB\n  getAllDocs() {\n    return this.db\n      .allDocs({ include_docs: true, descending: true })\n      .then(table => table.rows.map(item => item.doc));\n  }\n\n  getDossierById(dossier) {\n    return this.db\n      .find({\n        selector: {\n          DOSSIER_IDENT: parseInt(dossier)\n        }\n      })\n      .then(res => res.docs[0]);\n  }\n}\n\nexport default new pouchDbService(config.couchDb.url_dossiers);\n"]},"metadata":{},"sourceType":"module"}