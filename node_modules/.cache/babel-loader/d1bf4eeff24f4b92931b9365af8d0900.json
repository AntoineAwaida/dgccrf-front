{"ast":null,"code":"import _objectSpread from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/components/swipeTabs.component.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Tab } from 'semantic-ui-react';\nimport { useSwipeable } from 'react-swipeable';\nimport './swipeTabs.css';\n\nclass SwipeTabsComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    let swipeConfig = {\n      delta: 10,\n      // min distance(px) before a swipe starts\n      preventDefaultTouchmoveEvent: true,\n      // preventDefault on touchmove, *See Details*\n      trackTouch: true,\n      // track touch input\n      trackMouse: true,\n      // track mouse input\n      rotationAngle: 0 // set a rotation angle\n\n    };\n    let swipeHandlers = useSwipeable(_objectSpread({\n      onSwipedRight: () => this.setState({\n        activeIndex: this.state.activeIndex > 0 ? this.state.activeIndex - 1 : 0\n      }),\n      onSwipedLeft: () => this.setState({\n        activeIndex: this.state.activeIndex < this.state.panes.length - 1 ? this.state.activeIndex + 1 : this.state.panes.length - 1\n      })\n    }, swipeConfig));\n    this.state = {\n      activeIndex: 0,\n      panes: props.tabs.map(({\n        menuItem,\n        component\n      }) => ({\n        menuItem,\n        render: () => React.createElement(Swipeable, {\n          style: {\n            height: \"100 %\",\n            width: \"100 %\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, component)\n      }))\n    };\n  }\n\n  render() {\n    return React.createElement(Tab, {\n      menu: {\n        secondary: true,\n        pointing: true\n      },\n      panes: this.state.panes //style={{ display: \"flex\", flex: 1, justifyContent: \"center\" }}\n      ,\n      activeIndex: this.state.activeIndex,\n      onTabChange: (e, data) => this.setState({\n        activeIndex: data.activeIndex\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n}\n\nSwipeTabsComponent.propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    menuItem: PropTypes.string,\n    component: PropTypes.node\n  })).isRequired\n};\nexport default SwipeTabsComponent;","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/components/swipeTabs.component.js"],"names":["React","PropTypes","Grid","Tab","useSwipeable","SwipeTabsComponent","Component","constructor","props","swipeConfig","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","swipeHandlers","onSwipedRight","setState","activeIndex","state","onSwipedLeft","panes","length","tabs","map","menuItem","component","render","height","width","secondary","pointing","e","data","propTypes","arrayOf","shape","string","node","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,mBAA1B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,iBAAP;;AAGA,MAAMC,kBAAN,SAAiCL,KAAK,CAACM,SAAvC,CAAiD;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,QAAIC,WAAW,GAAG;AACdC,MAAAA,KAAK,EAAE,EADO;AACyB;AACvCC,MAAAA,4BAA4B,EAAE,IAFhB;AAEwB;AACtCC,MAAAA,UAAU,EAAE,IAHE;AAGyB;AACvCC,MAAAA,UAAU,EAAE,IAJE;AAIwB;AACtCC,MAAAA,aAAa,EAAE,CALD,CAKyB;;AALzB,KAAlB;AAOA,QAAIC,aAAa,GAAGX,YAAY;AAC5BY,MAAAA,aAAa,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAAX,GAAyB,CAAzB,GAA6B,KAAKC,KAAL,CAAWD,WAAX,GAAyB,CAAtD,GAA0D;AAAzE,OAAd,CADO;AAE5BE,MAAAA,YAAY,EAAE,MAAM,KAAKH,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAAX,GAA0B,KAAKC,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,GAA0B,CAApD,GAAyD,KAAKH,KAAL,CAAWD,WAAX,GAAyB,CAAlF,GAAuF,KAAKC,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,GAA0B;AAAhI,OAAd;AAFQ,OAGzBb,WAHyB,EAAhC;AAKA,SAAKU,KAAL,GAAa;AACTD,MAAAA,WAAW,EAAE,CADJ;AAETG,MAAAA,KAAK,EAAEb,KAAK,CAACe,IAAN,CAAWC,GAAX,CAAe,CAAC;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAD,MAA8B;AAChDD,QAAAA,QADgD;AAEhDE,QAAAA,MAAM,EAAE,MACJ,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE,OAAV;AAAmBC,YAAAA,KAAK,EAAE;AAA1B,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGKH,SAHL;AAH4C,OAA9B,CAAf;AAFE,KAAb;AAaH;;AACDC,EAAAA,MAAM,GAAG;AAEL,WACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE;AAAEG,QAAAA,SAAS,EAAE,IAAb;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAX;AAAgD,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWE,KAAlE,CACI;AADJ;AAEI,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWD,WAF5B;AAGI,MAAA,WAAW,EAAE,CAACc,CAAD,EAAIC,IAAJ,KAAa,KAAKhB,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEe,IAAI,CAACf;AAApB,OAAd,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH;;AArC4C;;AAwCjDb,kBAAkB,CAAC6B,SAAnB,GAA+B;AAC3BX,EAAAA,IAAI,EAAEtB,SAAS,CAACkC,OAAV,CAAkBlC,SAAS,CAACmC,KAAV,CAAgB;AACpCX,IAAAA,QAAQ,EAAExB,SAAS,CAACoC,MADgB;AAEpCX,IAAAA,SAAS,EAAEzB,SAAS,CAACqC;AAFe,GAAhB,CAAlB,EAGFC;AAJuB,CAA/B;AAOA,eAAelC,kBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Tab } from 'semantic-ui-react';\nimport { useSwipeable } from 'react-swipeable';\nimport './swipeTabs.css'\n\n\nclass SwipeTabsComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        let swipeConfig = {\n            delta: 10,                             // min distance(px) before a swipe starts\n            preventDefaultTouchmoveEvent: true,   // preventDefault on touchmove, *See Details*\n            trackTouch: true,                      // track touch input\n            trackMouse: true,                     // track mouse input\n            rotationAngle: 0,                      // set a rotation angle\n        };\n        let swipeHandlers = useSwipeable({\n            onSwipedRight: () => this.setState({ activeIndex: this.state.activeIndex > 0 ? this.state.activeIndex - 1 : 0 }),\n            onSwipedLeft: () => this.setState({ activeIndex: this.state.activeIndex < (this.state.panes.length - 1) ? this.state.activeIndex + 1 : (this.state.panes.length - 1) }),\n            ...swipeConfig\n        });\n        this.state = {\n            activeIndex: 0,\n            panes: props.tabs.map(({ menuItem, component }) => ({\n                menuItem,\n                render: () => (\n                    <Swipeable style={{ height: \"100 %\", width: \"100 %\" }}\n\n                    >\n                        {component}\n                    </Swipeable>\n                )\n            }))\n        }\n    }\n    render() {\n\n        return (\n            <Tab menu={{ secondary: true, pointing: true }} panes={this.state.panes}\n                //style={{ display: \"flex\", flex: 1, justifyContent: \"center\" }}\n                activeIndex={this.state.activeIndex}\n                onTabChange={(e, data) => this.setState({ activeIndex: data.activeIndex })} />\n        );\n    }\n}\n\nSwipeTabsComponent.propTypes = {\n    tabs: PropTypes.arrayOf(PropTypes.shape({\n        menuItem: PropTypes.string,\n        component: PropTypes.node\n    })).isRequired\n};\n\nexport default SwipeTabsComponent;\n"]},"metadata":{},"sourceType":"module"}