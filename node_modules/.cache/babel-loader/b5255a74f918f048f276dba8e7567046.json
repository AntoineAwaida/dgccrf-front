{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/AddDocs.js\";\nimport React from 'react';\nimport './App.css';\nimport PouchDB from 'pouchdb';\nexport class AddDocs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      list: []\n    };\n    this.db = new PouchDB('my_database');\n    var remoteCouch = 'http://Admin:pass@127.0.0.1:5984/test';\n    this.db.changes({\n      since: 'now',\n      live: true\n    }).on('change', this.updateTodos.bind(this));\n    var opts = {\n      live: true,\n      filter: 'filter/by_agent',\n      query_params: {\n        \"agent\": this.props.user\n      }\n    };\n    this.db.replicate.to(remoteCouch, {\n      live: true\n    }, console.log);\n    this.db.replicate.from(remoteCouch, opts, console.log);\n    this.updateTodos();\n    this.updateTodos = this.updateTodos.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  updateTodos() {\n    this.db.allDocs({\n      include_docs: true,\n      descending: true\n    }, (err, doc) => {\n      this.setState({\n        list: doc.rows.map(row => row.doc)\n      });\n    });\n  }\n\n  addTodo(text, user) {\n    var todo = {\n      _id: new Date().toISOString(),\n      text: text,\n      user: user\n    };\n    this.db.put(todo, function callback(err, result) {\n      if (!err) {\n        console.log('Successfully posted a todo!');\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: e => this.setState({\n        text: e.target.value\n      }),\n      placeholder: \"Text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.addTodo(this.state.text, this.props.user),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Ajouter\"), React.createElement(\"button\", {\n      onClick: () => this.getTodos(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"refresh\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, JSON.stringify(this.state.list)));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/AddDocs.js"],"names":["React","PouchDB","AddDocs","Component","constructor","props","state","text","list","db","remoteCouch","changes","since","live","on","updateTodos","bind","opts","filter","query_params","user","replicate","to","console","log","from","addTodo","allDocs","include_docs","descending","err","doc","setState","rows","map","row","todo","_id","Date","toISOString","put","callback","result","render","e","target","value","getTodos","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport PouchDB from 'pouchdb';\n\n\nexport class AddDocs extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      text : '',\n      list:[]\n    }\n\n    this.db = new PouchDB('my_database');\n    var remoteCouch = 'http://Admin:pass@127.0.0.1:5984/test';\n\n    this.db.changes({\n      since: 'now',\n      live: true\n    }).on('change', this.updateTodos.bind(this));\n\n    var opts = {\n        live: true, \n        filter: 'filter/by_agent',\n        query_params: { \"agent\": this.props.user },\n    };\n    this.db.replicate.to(remoteCouch, {live:true}, console.log);\n    this.db.replicate.from(remoteCouch, opts, console.log);\n    this.updateTodos();\n\n    this.updateTodos = this.updateTodos.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n\n  updateTodos(){\n    this.db.allDocs({include_docs: true, descending: true}, (err, doc) => {\n      this.setState({list:doc.rows.map(row=>row.doc)});\n    });\n  }\n\n  addTodo(text,user) {\n    var todo = {\n      _id: new Date().toISOString(),\n      text: text,\n      user: user\n    };\n    this.db.put(todo, function callback(err, result) {\n      if (!err) {\n        console.log('Successfully posted a todo!');\n      }\n    });\n  }\n  \n  render() {\n    return (\n      <div>\n        <input onChange = {(e)=>this.setState({text:e.target.value})} placeholder=\"Text\"/> \n        <button onClick={()=>this.addTodo(this.state.text,this.props.user)}>Ajouter</button>\n        <button onClick={()=>this.getTodos()}>refresh</button>\n        <div>\n          {JSON.stringify(this.state.list)}\n        </div>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}