{"ast":null,"code":"import PouchDB from 'pouchdb';\nimport config from '../config';\nimport PouchDBFind from 'pouchdb-find';\nPouchDB.plugin(PouchDBFind);\n\nclass pouchDbService {\n  constructor(pouchDbUrl) {\n    this.db = new PouchDB('mes-dossiers');\n    var opts = {\n      live: true,\n      retry: true\n    };\n    this.db.replicate.to(pouchDbUrl, opts);\n    this.db.replicate.from(pouchDbUrl, opts);\n    this.db.createIndex({\n      index: {\n        fields: ['ACDG_CODE_ACTION']\n      }\n    });\n  } //call the callback on db changes\n\n\n  onChanges(cb) {\n    this.db.changes({\n      since: 'now',\n      live: true\n    }).on('change', cb);\n  } //getAllDocsOfTheDB\n\n\n  getAllDocs() {\n    return this.db.allDocs({\n      include_docs: true,\n      descending: true\n    }).then(table => table.rows.map(item => item.doc).filter(item => !(item._id.split('/')[0] == \"_design\")));\n  }\n\n  getAllActionCode() {\n    return this.getAllDocs().then(array => array.map(item => item.ACDG_CODE_ACTION).filter((value, index, self) => self.indexOf(value) === index));\n  }\n\n  getDossierIdFromActionCode(actionCode) {\n    return this.db.find({\n      selector: {\n        ACDG_CODE_ACTION: actionCode\n      }\n    }).then(items => items.docs[0].DOSSIER_IDENT);\n  }\n\n}\n\nexport default new pouchDbService(config.couchDb.url_dossiers);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/services/dossier.service.js"],"names":["PouchDB","config","PouchDBFind","plugin","pouchDbService","constructor","pouchDbUrl","db","opts","live","retry","replicate","to","from","createIndex","index","fields","onChanges","cb","changes","since","on","getAllDocs","allDocs","include_docs","descending","then","table","rows","map","item","doc","filter","_id","split","getAllActionCode","array","ACDG_CODE_ACTION","value","self","indexOf","getDossierIdFromActionCode","actionCode","find","selector","items","docs","DOSSIER_IDENT","couchDb","url_dossiers"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEAF,OAAO,CAACG,MAAR,CAAeD,WAAf;;AAGA,MAAME,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKC,EAAL,GAAU,IAAIP,OAAJ,CAAY,cAAZ,CAAV;AACA,QAAIQ,IAAI,GAAG;AACPC,MAAAA,IAAI,EAAE,IADC;AACKC,MAAAA,KAAK,EAAE;AADZ,KAAX;AAGA,SAAKH,EAAL,CAAQI,SAAR,CAAkBC,EAAlB,CAAqBN,UAArB,EAAiCE,IAAjC;AACA,SAAKD,EAAL,CAAQI,SAAR,CAAkBE,IAAlB,CAAuBP,UAAvB,EAAmCE,IAAnC;AACA,SAAKD,EAAL,CAAQO,WAAR,CAAoB;AAChBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,CAAC,kBAAD;AAAV;AADS,KAApB;AAGH,GAXgB,CAajB;;;AACAC,EAAAA,SAAS,CAACC,EAAD,EAAK;AACV,SAAKX,EAAL,CAAQY,OAAR,CAAgB;AACZC,MAAAA,KAAK,EAAE,KADK;AAEZX,MAAAA,IAAI,EAAE;AAFM,KAAhB,EAGGY,EAHH,CAGM,QAHN,EAGgBH,EAHhB;AAIH,GAnBgB,CAqBjB;;;AACAI,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKf,EAAL,CAAQgB,OAAR,CAAgB;AAAEC,MAAAA,YAAY,EAAE,IAAhB;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KAAhB,EACFC,IADE,CACGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAeC,IAAI,IAAIA,IAAI,CAACC,GAA5B,EAAiCC,MAAjC,CAAwCF,IAAI,IAAI,EAAEA,IAAI,CAACG,GAAL,CAASC,KAAT,CAAe,GAAf,EAAoB,CAApB,KAA0B,SAA5B,CAAhD,CADZ,CAAP;AAEH;;AAEDC,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAKb,UAAL,GACFI,IADE,CACGU,KAAK,IAAIA,KAAK,CAACP,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACO,gBAAvB,EAAyCL,MAAzC,CAAgD,CAACM,KAAD,EAAQvB,KAAR,EAAewB,IAAf,KAAwBA,IAAI,CAACC,OAAL,CAAaF,KAAb,MAAwBvB,KAAhG,CADZ,CAAP;AAEH;;AAED0B,EAAAA,0BAA0B,CAACC,UAAD,EAAa;AACnC,WAAO,KAAKnC,EAAL,CAAQoC,IAAR,CAAa;AAChBC,MAAAA,QAAQ,EAAE;AACNP,QAAAA,gBAAgB,EAAEK;AADZ;AADM,KAAb,EAIJhB,IAJI,CAICmB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAW,CAAX,EAAcC,aAJxB,CAAP;AAKH;;AAtCgB;;AA0CrB,eAAe,IAAI3C,cAAJ,CAAmBH,MAAM,CAAC+C,OAAP,CAAeC,YAAlC,CAAf","sourcesContent":["import PouchDB from 'pouchdb';\nimport config from '../config';\nimport PouchDBFind from 'pouchdb-find';\n\nPouchDB.plugin(PouchDBFind);\n\n\nclass pouchDbService {\n    constructor(pouchDbUrl) {\n        this.db = new PouchDB('mes-dossiers');\n        var opts = {\n            live: true, retry: true,\n        };\n        this.db.replicate.to(pouchDbUrl, opts);\n        this.db.replicate.from(pouchDbUrl, opts);\n        this.db.createIndex({\n            index: { fields: ['ACDG_CODE_ACTION'] }\n        });\n    }\n\n    //call the callback on db changes\n    onChanges(cb) {\n        this.db.changes({\n            since: 'now',\n            live: true\n        }).on('change', cb);\n    }\n\n    //getAllDocsOfTheDB\n    getAllDocs() {\n        return this.db.allDocs({ include_docs: true, descending: true })\n            .then(table => table.rows.map(item => item.doc).filter(item => !(item._id.split('/')[0] == \"_design\")));\n    }\n\n    getAllActionCode() {\n        return this.getAllDocs()\n            .then(array => array.map(item => item.ACDG_CODE_ACTION).filter((value, index, self) => self.indexOf(value) === index))\n    }\n\n    getDossierIdFromActionCode(actionCode) {\n        return this.db.find({\n            selector: {\n                ACDG_CODE_ACTION: actionCode\n            }\n        }).then(items => items.docs[0].DOSSIER_IDENT)\n    }\n\n}\n\nexport default new pouchDbService(config.couchDb.url_dossiers);"]},"metadata":{},"sourceType":"module"}