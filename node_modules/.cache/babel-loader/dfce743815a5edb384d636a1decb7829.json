{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visiteCreation/controles.container.js\";\nimport React from 'react';\nimport { Modal, Container, Button, Table, Message } from 'semantic-ui-react';\nimport SingleControleComponent from './singleControle.container';\nimport PropTypes from 'prop-types';\nexport default class ControleComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitControle = controle => {\n      if (!controle.dossier || !controle.tache || !controle.activite || !controle.cpf || !controle.stade) {\n        this.setState({\n          addModalErrorMessage: 'Veuillez renseigner tous les champs obligatoires.'\n        });\n      } else {\n        controle.ident = this.state.countControl;\n        this.setState({\n          countCountrol: this.state.countControl + 1,\n          addModalOpen: false\n        });\n        this.props.changeControle(this.props.controles.concat([controle]));\n      }\n    };\n\n    this.displayMessage = message => {\n      if (message) {\n        return React.createElement(Message, {\n          negative: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, message));\n      }\n    };\n\n    this.state = {\n      countControl: 0,\n      addModalOpen: false,\n      addModalErrorMessage: ''\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Contr\\xF4les :\"), React.createElement(Modal, {\n      trigger: React.createElement(Button, {\n        onClick: () => this.setState({\n          addModalOpen: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Ajouter un contr\\xF4le\"),\n      open: this.state.addModalOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Ajouter un contr\\xF4le\"), React.createElement(Button, {\n      floated: \"right\",\n      onClick: () => {\n        this.setState({\n          addModalOpen: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Close\")), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.displayMessage(this.state.addModalErrorMessage), React.createElement(SingleControleComponent, {\n      onSubmit: this.submitControle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(Table, {\n      celled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.props.controles.map(controle => React.createElement(Table.Row, {\n      key: controle.ident,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, controle.dossierText))))));\n  }\n\n}\nControleComponent.propTypes = {\n  changeControle: PropTypes.func.isRequired,\n  controles: PropTypes.array.isRequired\n};","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visiteCreation/controles.container.js"],"names":["React","Modal","Container","Button","Table","Message","SingleControleComponent","PropTypes","ControleComponent","Component","constructor","props","submitControle","controle","dossier","tache","activite","cpf","stade","setState","addModalErrorMessage","ident","state","countControl","countCountrol","addModalOpen","changeControle","controles","concat","displayMessage","message","render","fontWeight","map","dossierText","propTypes","func","isRequired","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,KAAnC,EAA0CC,OAA1C,QAAyD,mBAAzD;AACA,OAAOC,uBAAP,MAAoC,4BAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,iBAAN,SAAgCR,KAAK,CAACS,SAAtC,CAAgD;AAC7DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,cATmB,GASFC,QAAQ,IAAI;AAC3B,UACE,CAACA,QAAQ,CAACC,OAAV,IACA,CAACD,QAAQ,CAACE,KADV,IAEA,CAACF,QAAQ,CAACG,QAFV,IAGA,CAACH,QAAQ,CAACI,GAHV,IAIA,CAACJ,QAAQ,CAACK,KALZ,EAME;AACA,aAAKC,QAAL,CAAc;AACZC,UAAAA,oBAAoB,EAClB;AAFU,SAAd;AAID,OAXD,MAWO;AACLP,QAAAA,QAAQ,CAACQ,KAAT,GAAiB,KAAKC,KAAL,CAAWC,YAA5B;AACA,aAAKJ,QAAL,CAAc;AACZK,UAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWC,YAAX,GAA0B,CAD7B;AAEZE,UAAAA,YAAY,EAAE;AAFF,SAAd;AAIA,aAAKd,KAAL,CAAWe,cAAX,CAA0B,KAAKf,KAAL,CAAWgB,SAAX,CAAqBC,MAArB,CAA4B,CAACf,QAAD,CAA5B,CAA1B;AACD;AACF,KA7BkB;;AAAA,SA+BnBgB,cA/BmB,GA+BFC,OAAO,IAAI;AAC1B,UAAIA,OAAJ,EAAa;AACX,eACE,oBAAC,OAAD;AAAS,UAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,OAAJ,CADF,CADF;AAKD;AACF,KAvCkB;;AAEjB,SAAKR,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,CADH;AAEXE,MAAAA,YAAY,EAAE,KAFH;AAGXL,MAAAA,oBAAoB,EAAE;AAHX,KAAb;AAKD;;AAiCDW,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD;AACE,MAAA,OAAO,EACL,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKb,QAAL,CAAc;AAAEM,UAAAA,YAAY,EAAE;AAAhB,SAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ;AAME,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,OADV;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKN,QAAL,CAAc;AAAEM,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CARF,EAmBE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKI,cAAL,CAAoB,KAAKP,KAAL,CAAWF,oBAA/B,CADH,EAEE,oBAAC,uBAAD;AAAyB,MAAA,QAAQ,EAAE,KAAKR,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAnBF,CAFF,EA0BE,oBAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWgB,SAAX,CAAqBM,GAArB,CAAyBpB,QAAQ,IAChC,oBAAC,KAAD,CAAO,GAAP;AAAW,MAAA,GAAG,EAAEA,QAAQ,CAACQ,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaR,QAAQ,CAACqB,WAAtB,CADF,CADD,CADH,CADF,CA1BF,CADF;AAsCD;;AAhF4D;AAmF/D1B,iBAAiB,CAAC2B,SAAlB,GAA8B;AAC5BT,EAAAA,cAAc,EAAEnB,SAAS,CAAC6B,IAAV,CAAeC,UADH;AAE5BV,EAAAA,SAAS,EAAEpB,SAAS,CAAC+B,KAAV,CAAgBD;AAFC,CAA9B","sourcesContent":["import React from 'react';\nimport { Modal, Container, Button, Table, Message } from 'semantic-ui-react';\nimport SingleControleComponent from './singleControle.container';\nimport PropTypes from 'prop-types';\n\nexport default class ControleComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countControl: 0,\n      addModalOpen: false,\n      addModalErrorMessage: ''\n    };\n  }\n\n  submitControle = controle => {\n    if (\n      !controle.dossier ||\n      !controle.tache ||\n      !controle.activite ||\n      !controle.cpf ||\n      !controle.stade\n    ) {\n      this.setState({\n        addModalErrorMessage:\n          'Veuillez renseigner tous les champs obligatoires.'\n      });\n    } else {\n      controle.ident = this.state.countControl;\n      this.setState({\n        countCountrol: this.state.countControl + 1,\n        addModalOpen: false\n      });\n      this.props.changeControle(this.props.controles.concat([controle]));\n    }\n  };\n\n  displayMessage = message => {\n    if (message) {\n      return (\n        <Message negative>\n          <p>{message}</p>\n        </Message>\n      );\n    }\n  };\n  render() {\n    return (\n      <Container>\n        <p style={{ fontWeight: 'bold' }}>Contrôles :</p>\n        <Modal\n          trigger={\n            <Button onClick={() => this.setState({ addModalOpen: true })}>\n              Ajouter un contrôle\n            </Button>\n          }\n          open={this.state.addModalOpen}\n        >\n          <Modal.Header>\n            <span>Ajouter un contrôle</span>\n            <Button\n              floated=\"right\"\n              onClick={() => {\n                this.setState({ addModalOpen: false });\n              }}\n            >\n              Close\n            </Button>\n          </Modal.Header>\n          <Modal.Content>\n            {this.displayMessage(this.state.addModalErrorMessage)}\n            <SingleControleComponent onSubmit={this.submitControle} />\n          </Modal.Content>\n        </Modal>\n        <Table celled>\n          <Table.Body>\n            {this.props.controles.map(controle => (\n              <Table.Row key={controle.ident}>\n                <Table.Cell>{controle.dossierText}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Container>\n    );\n  }\n}\n\nControleComponent.propTypes = {\n  changeControle: PropTypes.func.isRequired,\n  controles: PropTypes.array.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}