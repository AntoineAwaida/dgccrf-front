{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/visites.container.js\";\nimport React from 'react';\nimport { Grid, List, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport visitesService from '../../services/visite.service';\nimport PropTypes from 'prop-types';\nexport default class VisitesComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visitesList: []\n    };\n  }\n\n  componentDidMount() {\n    let dossierId = this.props.match.params.id;\n    visitesService.getVisitesByDossier(dossierId).then(data => this.setState({\n      visitesList: data\n    }));\n    visitesService.onChanges(() => visitesService.getVisitesByDossier(dossierId).then(data => this.setState({\n      visitesDic: data\n    })));\n  }\n\n  render() {\n    console.log(this.state.visitesList);\n    return React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        display: 'flex'\n      },\n      verticalAlign: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      textAlign: \"right\",\n      display: \"flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/nouvelle-visite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus\",\n      size: \"big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(List, {\n      divided: true,\n      relaxed: true,\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.visitesList.map(visite => React.createElement(List.Item, {\n      as: Link,\n      key: visite.id,\n      to: '/visite/' + visite.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(List.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, visite.enterprise), React.createElement(List.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, moment(visite.date).format('DD/MM/YYYY')))))))));\n  }\n\n}\nVisitesComponent.propTypes = {\n  match: PropTypes.objectOf({\n    params: PropTypes.objectOf({\n      id: PropTypes.string\n    })\n  })\n};","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/visites.container.js"],"names":["React","Grid","List","Icon","Link","moment","visitesService","PropTypes","VisitesComponent","Component","constructor","props","state","visitesList","componentDidMount","dossierId","match","params","id","getVisitesByDossier","then","data","setState","onChanges","visitesDic","render","console","log","display","flex","map","visite","enterprise","date","format","propTypes","objectOf","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, List, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport visitesService from '../../services/visite.service';\nimport PropTypes from 'prop-types';\n\nexport default class VisitesComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visitesList: []\n    };\n  }\n\n  componentDidMount() {\n    let dossierId = this.props.match.params.id;\n    visitesService\n      .getVisitesByDossier(dossierId)\n      .then(data => this.setState({ visitesList: data }));\n    visitesService.onChanges(() =>\n      visitesService\n        .getVisitesByDossier(dossierId)\n        .then(data => this.setState({ visitesDic: data }))\n    );\n  }\n\n  render() {\n    console.log(this.state.visitesList);\n    return (\n      <Grid textAlign=\"center\" style={{ display: 'flex' }} verticalAlign=\"top\">\n        <Grid.Row textAlign=\"right\" display=\"flex\">\n          <Grid.Column width={16}>\n            <Link to=\"/nouvelle-visite\">\n              <div>\n                <Icon name=\"plus\" size=\"big\" />\n              </div>\n            </Link>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <List divided relaxed style={{ flex: 1 }}>\n              {this.state.visitesList.map(visite => (\n                <List.Item\n                  as={Link}\n                  key={visite.id}\n                  to={'/visite/' + visite.id}\n                >\n                  <List.Content>\n                    <List.Header>{visite.enterprise}</List.Header>\n                    <List.Description>\n                      {moment(visite.date).format('DD/MM/YYYY')}\n                    </List.Description>\n                  </List.Content>\n                </List.Item>\n              ))}\n            </List>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nVisitesComponent.propTypes = {\n  match: PropTypes.objectOf({\n    params: PropTypes.objectOf({\n      id: PropTypes.string\n    })\n  })\n};\n"]},"metadata":{},"sourceType":"module"}