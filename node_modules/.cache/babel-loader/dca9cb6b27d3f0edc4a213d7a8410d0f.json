{"ast":null,"code":"import _objectSpread from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/trameCreation.container.js\";\nimport React from 'react';\nimport { Form, Grid, GridRow, GridColumn, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nexport default class TrameCreationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: []\n    };\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      centered: true,\n      style: {\n        marginTop: \"2em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80%\",\n        padding: \"2.5em\",\n        border: '1px solid black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.state.taskList.map((taskItem, taskIndex) => React.createElement(GridRow, {\n      key: taskItem,\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: \"0\",\n        margin: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(GridColumn, {\n      width: 14,\n      style: {\n        margin: 0,\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"Intitul\\xE9\",\n      onChange: (e, {\n        value\n      }) => {\n        let newTasks = this.state.taskList.map((el, i) => i === taskIndex ? _objectSpread({}, el, {\n          title: value\n        }) : el);\n        this.setState({\n          taskList: newTasks\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })), React.createElement(GridColumn, {\n      width: 1,\n      style: {\n        padding: 0,\n        marginLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      color: \"red\",\n      name: \"minus\",\n      size: \"big\",\n      style: {\n        cursor: \"pointer\"\n      },\n      width: 1,\n      verticalAlign: \"bottom\",\n      onClick: () => {\n        let newTasks = this.state.taskList.filter((el, i) => i !== taskIndex);\n        this.setState({\n          taskList: newTasks\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })))), React.createElement(Grid.Row, {\n      style: {\n        width: \"100%\",\n        textAlign: \"center\",\n        marginTop: \"0.5em\",\n        cursor: \"pointer\"\n      },\n      onClick: () => {\n        let newTasks = this.state.taskList.map(el => el);\n        newTasks.push({\n          title: undefined\n        });\n        this.setState({\n          taskList: newTasks\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"circle plus\",\n      size: \"big\",\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/trameCreation.container.js"],"names":["React","Form","Grid","GridRow","GridColumn","Icon","Link","TrameCreationComponent","Component","constructor","props","state","taskList","render","marginTop","width","padding","border","map","taskItem","taskIndex","display","alignItems","margin","e","value","newTasks","el","i","title","setState","marginLeft","cursor","filter","textAlign","push","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Grid, GridRow, GridColumn, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nexport default class TrameCreationComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            taskList: []\n        }\n    }\n\n    render() {\n        return (\n            <Grid centered style={{ marginTop: \"2em\" }}>\n                <div style={{ width: \"80%\", padding: \"2.5em\", border: '1px solid black' }}>\n                    {\n                        this.state.taskList.map((taskItem, taskIndex) => (\n\n                            <GridRow key={taskItem} style={{ display: \"flex\", alignItems: \"center\", padding: \"0\", margin: \"0\" }}>\n                                <GridColumn width={14} style={{ margin: 0, padding: 0 }} >\n\n                                    <Form.Input placeholder=\"IntitulÃ©\"\n                                        onChange={(e, { value }) => {\n                                            let newTasks = this.state.taskList.map((el, i) => i === taskIndex ? { ...el, title: value } : el);\n                                            this.setState({ taskList: newTasks })\n                                        }}\n                                    />\n\n                                </GridColumn>\n                                <GridColumn width={1} style={{ padding: 0, marginLeft: \"0\" }}\n                                >\n\n                                    <Icon color=\"red\" name=\"minus\" size=\"big\" style={{ cursor: \"pointer\" }}\n                                        width={1}\n                                        verticalAlign=\"bottom\"\n                                        onClick={() => {\n                                            let newTasks = this.state.taskList.filter((el, i) => i !== taskIndex);\n                                            this.setState({ taskList: newTasks })\n                                        }} />\n\n                                </GridColumn>\n                            </GridRow>\n                        )\n                        )}\n                    <Grid.Row style={{ width: \"100%\", textAlign: \"center\", marginTop: \"0.5em\", cursor: \"pointer\" }}\n                        onClick={() => {\n                            let newTasks = this.state.taskList.map(el => el);\n                            newTasks.push({ title: undefined });\n                            this.setState({ taskList: newTasks })\n                        }}>\n\n                        <Icon name=\"circle plus\" size=\"big\" color=\"green\" />\n\n                    </Grid.Row>\n                </div>\n            </Grid>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}