{"ast":null,"code":"import _slicedToArray from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/trameCreation.container.js\";\nimport React from 'react';\nimport { Container, Button, Icon, Input, Responsive, Popup } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport { changeNameOfPage, changeBackUrl, changeActivePage } from '../../navbar/actions';\nimport { connect } from 'react-redux';\nimport TrameComponent from './trame';\nimport PouchDBServices from '../../../services/index';\nimport SwipeableViews from 'react-swipeable-views';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport MyActivityIndicator from '../../../components/myActivityIndicator.component';\nimport { Tabs, Tab } from '@material-ui/core';\nimport TrameList from './trameList';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: () => dispatch(changeNameOfPage('Création de trame')),\n    changeBackUrl: () => dispatch(changeBackUrl('/preferences')),\n    changeActivePage: () => dispatch(changeActivePage('mesDossiers', '/creation-trame'))\n  };\n}\n\nclass TrameCreationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (event, value) => {\n      this.setState({\n        activeIndex: value\n      });\n    };\n\n    this.handleChangeIndex = value => {\n      this.setState({\n        activeIndex: value\n      });\n    };\n\n    this.onDragEnd = result => {\n      const destination = result.destination,\n            source = result.source;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      let taskList;\n      this.state.activeIndex === 0 ? taskList = this.state.taskListAvant : this.state.activeIndex === 1 ? taskList = this.state.taskListPendant : taskList = this.state.taskListAprès;\n      const res = Array.from(taskList);\n\n      const _res$splice = res.splice(result.source.index, 1),\n            _res$splice2 = _slicedToArray(_res$splice, 1),\n            removed = _res$splice2[0];\n\n      res.splice(result.destination.index, 0, removed);\n      this.state.activeIndex === 0 ? this.setState({\n        taskListAvant: res\n      }) : this.state.activeIndex === 1 ? this.setState({\n        taskListPendant: res\n      }) : this.setState({\n        taskListAprès: res\n      });\n    };\n\n    this.state = {\n      taskListAvant: [],\n      taskListPendant: [],\n      taskListAprès: [],\n      index: 0,\n      id: 0,\n      trameName: '',\n      isLoading: true,\n      _id: null,\n      _rev: null,\n      activeIndex: 0,\n      locked: false\n    };\n    this.validateName = this.validateName.bind(this);\n    this.changeType = this.changeType.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.addDocument = this.addDocument.bind(this);\n    this.deleteDocument = this.deleteDocument.bind(this);\n    this.saveTrame = this.saveTrame.bind(this);\n    this.addForm = this.addForm.bind(this);\n  }\n\n  async saveTrame() {\n    if (window.confirm('Voulez-vous sauvegarder cette trame?')) {\n      try {\n        await PouchDBServices.services.trame.postDocument(!this.state._id ? {\n          name: this.state.trameName,\n          trameAvant: this.state.taskListAvant,\n          tramePendant: this.state.taskListPendant,\n          trameAprès: this.state.taskListAprès\n        } : {\n          name: this.state.trameName,\n          trameAvant: this.state.taskListAvant,\n          tramePendant: this.state.taskListPendant,\n          trameAprès: this.state.taskListAprès,\n          _id: this.state._id,\n          _rev: this.state._rev\n        });\n        this.props.history.push('/preferences');\n        console.log('trame saved!');\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.props.changeNameOfPage();\n    this.props.changeBackUrl();\n    this.props.changeActivePage();\n\n    if (this.props.match.params.id) {\n      this.getTrame(this.props.match.params.id);\n    } else {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  async getTrame(trameid) {\n    try {\n      const trame = (await PouchDBServices.services.trame.getTrameById(trameid))[0];\n      this.setState({\n        taskListAvant: trame.trameAvant,\n        taskListPendant: trame.tramePendant,\n        taskListAprès: trame.trameAprès,\n        trameName: trame.name,\n        _id: trame._id,\n        index: Math.max.apply(Math, trame.trameAvant.map(function (o) {\n          return o.index;\n        })) + Math.max.apply(Math, trame.tramePendant.map(function (o) {\n          return o.index;\n        })) + Math.max.apply(Math, trame.trameAprès.map(function (o) {\n          return o.index;\n        })),\n        id: Math.max.apply(Math, trame.trameAvant.map(function (o) {\n          return o.id;\n        })) + Math.max.apply(Math, trame.tramePendant.map(function (o) {\n          return o.id;\n        })) + Math.max.apply(Math, trame.trameAprès.map(function (o) {\n          return o.id;\n        })),\n        isLoading: false,\n        _rev: trame._rev\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  deleteTask(task) {\n    this.state.activeIndex === 0 ? this.setState({\n      taskListAvant: this.state.taskListAvant.filter(t => {\n        return t != task;\n      })\n    }) : this.state.activeIndex === 1 ? this.setState({\n      taskListPendant: this.state.taskListPendant.filter(t => {\n        return t != task;\n      })\n    }) : this.setState({\n      taskListAprès: this.state.taskListAprès.filter(t => {\n        return t != task;\n      })\n    });\n  }\n\n  addDocument(task, file) {\n    this.state.activeIndex === 0 ? this.setState({\n      taskListAvant: this.state.taskListAvant.filter(t => {\n        if (t == task) {\n          t.innerContent = file;\n        }\n\n        return t;\n      })\n    }) : this.state.activeIndex === 1 ? this.setState({\n      taskListPendant: this.state.taskListPendant.filter(t => {\n        if (t == task) {\n          t.innerContent = file;\n        }\n\n        return t;\n      })\n    }) : this.setState({\n      taskListAprès: this.state.taskListAprès.filter(t => {\n        if (t == task) {\n          t.innerContent = file;\n        }\n\n        return t;\n      })\n    });\n  }\n\n  deleteDocument(task) {\n    this.state.activeIndex === 0 ? this.setState({\n      taskListAvant: this.state.taskListAvant.filter(t => {\n        if (t == task) {\n          t.innerContent = '';\n        }\n\n        return t;\n      })\n    }) : this.state.activeIndex === 1 ? this.setState({\n      taskListPendant: this.state.taskListPendant.filter(t => {\n        if (t == task) {\n          t.innerContent = '';\n        }\n\n        return t;\n      })\n    }) : this.setState({\n      taskListAprès: this.state.taskListAprès.filter(t => {\n        if (t == task) {\n          t.innerContent = '';\n        }\n\n        return t;\n      })\n    });\n  }\n\n  validateName(task, name) {\n    this.state.activeIndex === 0 ? this.setState({\n      taskListAvant: this.state.taskListAvant.filter(t => {\n        if (t == task) {\n          t.title = name;\n        }\n\n        return t;\n      })\n    }) : this.state.activeIndex === 1 ? this.setState({\n      taskListPendant: this.state.taskListPendant.filter(t => {\n        if (t == task) {\n          t.title = name;\n        }\n\n        return t;\n      })\n    }) : this.setState({\n      taskListAprès: this.state.taskListAprès.filter(t => {\n        if (t == task) {\n          t.title = name;\n        }\n\n        return t;\n      })\n    });\n  }\n\n  handleNameChange(e, data) {\n    this.setState({\n      trameName: data.value\n    });\n  }\n\n  addForm(task) {\n    this.state.activeIndex === 0 ? this.setState({\n      taskListAvant: this.state.taskListAvant.filter(t => {\n        if (t == task) {\n          t.innerContent = 'form1&9';\n        }\n\n        return t;\n      })\n    }) : this.state.activeIndex === 1 ? this.setState({\n      taskListPendant: this.state.taskListPendant.filter(t => {\n        if (t == task) {\n          t.innerContent = 'form1&9';\n        }\n\n        return t;\n      })\n    }) : this.setState({\n      taskListAprès: this.state.taskListAprès.filter(t => {\n        if (t == task) {\n          t.innerContent = 'form1&9';\n        }\n\n        return t;\n      })\n    });\n  }\n\n  handleTextChange(task, text) {\n    this.state.activeIndex === 0 ? this.setState({\n      taskListAvant: this.state.taskListAvant.filter(t => {\n        if (t == task) {\n          t.innerContent = text;\n        }\n\n        return t;\n      })\n    }) : this.state.activeIndex === 1 ? this.setState({\n      taskListPendant: this.state.taskListPendant.filter(t => {\n        if (t == task) {\n          t.innerContent = text;\n        }\n\n        return t;\n      })\n    }) : this.setState({\n      taskListAprès: this.state.taskListAprès.filter(t => {\n        if (t == task) {\n          t.innerContent = text;\n        }\n\n        return t;\n      })\n    });\n  }\n\n  changeType(task, type) {\n    this.state.activeIndex === 0 ? this.setState({\n      taskListAvant: this.state.taskListAvant.filter(t => {\n        if (t == task) {\n          t.type = type;\n        }\n\n        return t;\n      })\n    }) : this.state.activeIndex === 1 ? this.setState({\n      taskListPendant: this.state.taskListPendant.filter(t => {\n        if (t == task) {\n          t.type = type;\n        }\n\n        return t;\n      })\n    }) : this.setState({\n      taskListAprès: this.state.taskListAprès.filter(t => {\n        if (t == task) {\n          t.type = type;\n        }\n\n        return t;\n      })\n    });\n  }\n\n  addTask() {\n    //de 3 types: basic, text, ou document.\n    this.state.activeIndex === 0 ? this.setState({\n      taskListAvant: [...this.state.taskListAvant, {\n        title: 'Nouvelle tâche' + this.state.index,\n        type: 'basic',\n        innerContent: '',\n        index: this.state.index,\n        id: this.state.id\n      }],\n      index: this.state.index + 1,\n      id: this.state.id + 1\n    }) : this.state.activeIndex === 1 ? this.setState({\n      taskListPendant: [...this.state.taskListPendant, {\n        title: 'Nouvelle tâche' + this.state.index,\n        type: 'basic',\n        innerContent: '',\n        index: this.state.index,\n        id: this.state.id\n      }],\n      index: this.state.index + 1,\n      id: this.state.id + 1\n    }) : this.setState({\n      taskListAprès: [...this.state.taskListAprès, {\n        title: 'Nouvelle tâche' + this.state.index,\n        type: 'basic',\n        innerContent: '',\n        index: this.state.index,\n        id: this.state.id\n      }],\n      index: this.state.index + 1,\n      id: this.state.id + 1\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"hidescrollbar\",\n      style: {\n        display: 'flex',\n        height: '100%',\n        width: '100%',\n        backgroundColor: '#f2f2f2',\n        overflow: 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        justifyContent: 'center',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, this.state.isLoading ? React.createElement(MyActivityIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        overflow: 'hidden',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'fixed',\n        zIndex: 10,\n        width: '100%',\n        backgroundColor: '#f2f2f2',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, React.createElement(Responsive, {\n      minWidth: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 0.3\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: 150\n      },\n      placeholder: \"Nom de la trame...\",\n      value: this.state.trameName,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        marginLeft: 5\n      },\n      color: \"teal\",\n      icon: true,\n      onClick: () => this.addTask(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        flex: 0.3,\n        justifyContent: 'flex-end',\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.saveTrame,\n      color: \"red\",\n      disabled: this.state.trameName.length === 0 || this.state.taskListAvant.length + this.state.taskListPendant.length + this.state.taskListAprès.length === 0,\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"save\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: this.state.activeIndex,\n      fullWidth: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"Avant\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Pendant\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Apr\\xE8s\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    })), React.createElement(Button, {\n      icon: true,\n      onClick: () => this.setState({\n        locked: !this.state.locked\n      }),\n      style: {\n        backgroundColor: this.state.locked ? 'grey' : null\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, this.state.locked ? React.createElement(Popup, {\n      trigger: React.createElement(Icon, {\n        name: \"lock\",\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }),\n      position: \"bottom center\",\n      content: \"La liste est verrouill\\xE9e. Vous ne pouvez pas balayer celle-ci entre les diff\\xE9rentes \\xE9tapes, en revanche vous pouvez d\\xE9placer les items de la trame \\xE0 votre convenance avec la souris ou votre doigt.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }) : React.createElement(Popup, {\n      trigger: React.createElement(Icon, {\n        name: \"unlock\",\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }),\n      position: \"bottom center\",\n      content: \"La liste est d\\xE9verrouill\\xE9e. Vous ne pouvez plus r\\xE9organiser les items de la liste, vous pouvez en revanche balayer celle-ci entre les diff\\xE9rentes \\xE9tapes.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        flex: 10,\n        overflowY: 'auto',\n        marginTop: 120,\n        width: '100%'\n      },\n      className: \"hidescrollbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, React.createElement(TrameList, {\n      locked: this.state.locked,\n      activeIndex: this.state.activeIndex,\n      handleChangeIndex: this.handleChangeIndex,\n      onDragEnd: this.onDragEnd,\n      validateName: this.validateName,\n      taskListAvant: this.state.taskListAvant,\n      taskListPendant: this.state.taskListPendant,\n      taskListAprès: this.state.taskListAprès,\n      changeType: this.changeType,\n      handleTextChange: this.handleTextChange,\n      deleteTask: this.deleteTask,\n      addForm: this.addForm,\n      addDocument: this.addDocument,\n      deleteDocument: this.deleteDocument,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nTrameCreationComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TrameCreationComponent);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/trameCreation.container.js"],"names":["React","Container","Button","Icon","Input","Responsive","Popup","PropTypes","changeNameOfPage","changeBackUrl","changeActivePage","connect","TrameComponent","PouchDBServices","SwipeableViews","DragDropContext","Droppable","MyActivityIndicator","Tabs","Tab","TrameList","mapStateToProps","mapDispatchToProps","dispatch","TrameCreationComponent","Component","constructor","props","handleChange","event","value","setState","activeIndex","handleChangeIndex","onDragEnd","result","destination","source","droppableId","index","taskList","state","taskListAvant","taskListPendant","taskListAprès","res","Array","from","splice","removed","id","trameName","isLoading","_id","_rev","locked","validateName","bind","changeType","handleTextChange","handleNameChange","deleteTask","addDocument","deleteDocument","saveTrame","addForm","window","confirm","services","trame","postDocument","name","trameAvant","tramePendant","trameAprès","history","push","console","log","e","componentDidMount","match","params","getTrame","trameid","getTrameById","Math","max","apply","map","o","task","filter","t","file","innerContent","title","data","text","type","addTask","render","display","height","width","backgroundColor","overflow","justifyContent","textAlign","flexDirection","alignItems","position","zIndex","padding","flex","marginLeft","length","color","overflowY","marginTop","propTypes","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,UALF,EAMEC,KANF,QAOO,mBAPP;AAQA,SAASC,SAAT,QAA0B,YAA1B;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,gBAHF,QAIO,sBAJP;AAKA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,SAA3B;AAEA,OAAOC,eAAP,MAA4B,yBAA5B;AAEA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,qBAA3C;AACA,OAAOC,mBAAP,MAAgC,mDAAhC;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,mBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,eAAT,GAA2B;AACzB,SAAO,EAAP;AACD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLf,IAAAA,gBAAgB,EAAE,MAAMe,QAAQ,CAACf,gBAAgB,CAAC,mBAAD,CAAjB,CAD3B;AAELC,IAAAA,aAAa,EAAE,MAAMc,QAAQ,CAACd,aAAa,CAAC,cAAD,CAAd,CAFxB;AAGLC,IAAAA,gBAAgB,EAAE,MAChBa,QAAQ,CAACb,gBAAgB,CAAC,aAAD,EAAgB,iBAAhB,CAAjB;AAJL,GAAP;AAMD;;AAED,MAAMc,sBAAN,SAAqCxB,KAAK,CAACyB,SAA3C,CAAqD;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsDnBC,YAtDmB,GAsDJ,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/B,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEF;AADD,OAAd;AAGD,KA1DkB;;AAAA,SA4DnBG,iBA5DmB,GA4DCH,KAAK,IAAI;AAC3B,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEF;AADD,OAAd;AAGD,KAhEkB;;AAAA,SA0YnBI,SA1YmB,GA0YPC,MAAM,IAAI;AAAA,YACZC,WADY,GACYD,MADZ,CACZC,WADY;AAAA,YACCC,MADD,GACYF,MADZ,CACCE,MADD;;AAGpB,UAAI,CAACD,WAAL,EAAkB;AAChB;AACD;;AAED,UACEA,WAAW,CAACE,WAAZ,KAA4BD,MAAM,CAACC,WAAnC,IACAF,WAAW,CAACG,KAAZ,KAAsBF,MAAM,CAACE,KAF/B,EAGE;AACA;AACD;;AAED,UAAIC,QAAJ;AACA,WAAKC,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACKQ,QAAQ,GAAG,KAAKC,KAAL,CAAWC,aAD3B,GAEI,KAAKD,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACCQ,QAAQ,GAAG,KAAKC,KAAL,CAAWE,eADvB,GAECH,QAAQ,GAAG,KAAKC,KAAL,CAAWG,aAJ3B;AAMA,YAAMC,GAAG,GAAGC,KAAK,CAACC,IAAN,CAAWP,QAAX,CAAZ;;AArBoB,0BAuBFK,GAAG,CAACG,MAAJ,CAAWb,MAAM,CAACE,MAAP,CAAcE,KAAzB,EAAgC,CAAhC,CAvBE;AAAA;AAAA,YAuBbU,OAvBa;;AAwBpBJ,MAAAA,GAAG,CAACG,MAAJ,CAAWb,MAAM,CAACC,WAAP,CAAmBG,KAA9B,EAAqC,CAArC,EAAwCU,OAAxC;AAEA,WAAKR,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACI,KAAKD,QAAL,CAAc;AAAEW,QAAAA,aAAa,EAAEG;AAAjB,OAAd,CADJ,GAEI,KAAKJ,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACA,KAAKD,QAAL,CAAc;AAAEY,QAAAA,eAAe,EAAEE;AAAnB,OAAd,CADA,GAEA,KAAKd,QAAL,CAAc;AAAEa,QAAAA,aAAa,EAAEC;AAAjB,OAAd,CAJJ;AAKD,KAzakB;;AAEjB,SAAKJ,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXC,MAAAA,eAAe,EAAE,EAFN;AAGXC,MAAAA,aAAa,EAAE,EAHJ;AAIXL,MAAAA,KAAK,EAAE,CAJI;AAKXW,MAAAA,EAAE,EAAE,CALO;AAMXC,MAAAA,SAAS,EAAE,EANA;AAOXC,MAAAA,SAAS,EAAE,IAPA;AAQXC,MAAAA,GAAG,EAAE,IARM;AASXC,MAAAA,IAAI,EAAE,IATK;AAUXtB,MAAAA,WAAW,EAAE,CAVF;AAWXuB,MAAAA,MAAM,EAAE;AAXG,KAAb;AAaA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKG,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKI,UAAL,GAAkB,KAAKA,UAAL,CAAgBJ,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKK,WAAL,GAAmB,KAAKA,WAAL,CAAiBL,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKM,cAAL,GAAsB,KAAKA,cAAL,CAAoBN,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKO,SAAL,GAAiB,KAAKA,SAAL,CAAeP,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKQ,OAAL,GAAe,KAAKA,OAAL,CAAaR,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAED,QAAMO,SAAN,GAAkB;AAChB,QAAIE,MAAM,CAACC,OAAP,CAAe,sCAAf,CAAJ,EAA4D;AAC1D,UAAI;AACF,cAAMtD,eAAe,CAACuD,QAAhB,CAAyBC,KAAzB,CAA+BC,YAA/B,CACJ,CAAC,KAAK7B,KAAL,CAAWY,GAAZ,GACI;AACEkB,UAAAA,IAAI,EAAE,KAAK9B,KAAL,CAAWU,SADnB;AAEEqB,UAAAA,UAAU,EAAE,KAAK/B,KAAL,CAAWC,aAFzB;AAGE+B,UAAAA,YAAY,EAAE,KAAKhC,KAAL,CAAWE,eAH3B;AAIE+B,UAAAA,UAAU,EAAE,KAAKjC,KAAL,CAAWG;AAJzB,SADJ,GAOI;AACE2B,UAAAA,IAAI,EAAE,KAAK9B,KAAL,CAAWU,SADnB;AAEEqB,UAAAA,UAAU,EAAE,KAAK/B,KAAL,CAAWC,aAFzB;AAGE+B,UAAAA,YAAY,EAAE,KAAKhC,KAAL,CAAWE,eAH3B;AAIE+B,UAAAA,UAAU,EAAE,KAAKjC,KAAL,CAAWG,aAJzB;AAKES,UAAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWY,GALlB;AAMEC,UAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWa;AANnB,SARA,CAAN;AAiBA,aAAK3B,KAAL,CAAWgD,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,OApBD,CAoBE,OAAOC,CAAP,EAAU;AACVF,QAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;AACF;AACF;;AAaDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKrD,KAAL,CAAWnB,gBAAX;AACA,SAAKmB,KAAL,CAAWlB,aAAX;AACA,SAAKkB,KAAL,CAAWjB,gBAAX;;AAEA,QAAI,KAAKiB,KAAL,CAAWsD,KAAX,CAAiBC,MAAjB,CAAwBhC,EAA5B,EAAgC;AAC9B,WAAKiC,QAAL,CAAc,KAAKxD,KAAL,CAAWsD,KAAX,CAAiBC,MAAjB,CAAwBhC,EAAtC;AACD,KAFD,MAEO;AACL,WAAKnB,QAAL,CAAc;AAAEqB,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD;AACF;;AAED,QAAM+B,QAAN,CAAeC,OAAf,EAAwB;AACtB,QAAI;AACF,YAAMf,KAAK,GAAG,CAAC,MAAMxD,eAAe,CAACuD,QAAhB,CAAyBC,KAAzB,CAA+BgB,YAA/B,CACnBD,OADmB,CAAP,EAEX,CAFW,CAAd;AAIA,WAAKrD,QAAL,CAAc;AACZW,QAAAA,aAAa,EAAE2B,KAAK,CAACG,UADT;AAEZ7B,QAAAA,eAAe,EAAE0B,KAAK,CAACI,YAFX;AAGZ7B,QAAAA,aAAa,EAAEyB,KAAK,CAACK,UAHT;AAIZvB,QAAAA,SAAS,EAAEkB,KAAK,CAACE,IAJL;AAKZlB,QAAAA,GAAG,EAAEgB,KAAK,CAAChB,GALC;AAMZd,QAAAA,KAAK,EACH+C,IAAI,CAACC,GAAL,CAASC,KAAT,CACEF,IADF,EAEEjB,KAAK,CAACG,UAAN,CAAiBiB,GAAjB,CAAqB,UAASC,CAAT,EAAY;AAC/B,iBAAOA,CAAC,CAACnD,KAAT;AACD,SAFD,CAFF,IAMA+C,IAAI,CAACC,GAAL,CAASC,KAAT,CACEF,IADF,EAEEjB,KAAK,CAACI,YAAN,CAAmBgB,GAAnB,CAAuB,UAASC,CAAT,EAAY;AACjC,iBAAOA,CAAC,CAACnD,KAAT;AACD,SAFD,CAFF,CANA,GAYA+C,IAAI,CAACC,GAAL,CAASC,KAAT,CACEF,IADF,EAEEjB,KAAK,CAACK,UAAN,CAAiBe,GAAjB,CAAqB,UAASC,CAAT,EAAY;AAC/B,iBAAOA,CAAC,CAACnD,KAAT;AACD,SAFD,CAFF,CAnBU;AAyBZW,QAAAA,EAAE,EACAoC,IAAI,CAACC,GAAL,CAASC,KAAT,CACEF,IADF,EAEEjB,KAAK,CAACG,UAAN,CAAiBiB,GAAjB,CAAqB,UAASC,CAAT,EAAY;AAC/B,iBAAOA,CAAC,CAACxC,EAAT;AACD,SAFD,CAFF,IAMAoC,IAAI,CAACC,GAAL,CAASC,KAAT,CACEF,IADF,EAEEjB,KAAK,CAACI,YAAN,CAAmBgB,GAAnB,CAAuB,UAASC,CAAT,EAAY;AACjC,iBAAOA,CAAC,CAACxC,EAAT;AACD,SAFD,CAFF,CANA,GAYAoC,IAAI,CAACC,GAAL,CAASC,KAAT,CACEF,IADF,EAEEjB,KAAK,CAACK,UAAN,CAAiBe,GAAjB,CAAqB,UAASC,CAAT,EAAY;AAC/B,iBAAOA,CAAC,CAACxC,EAAT;AACD,SAFD,CAFF,CAtCU;AA4CZE,QAAAA,SAAS,EAAE,KA5CC;AA6CZE,QAAAA,IAAI,EAAEe,KAAK,CAACf;AA7CA,OAAd;AA+CD,KApDD,CAoDE,OAAOyB,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;AACF;;AAEDlB,EAAAA,UAAU,CAAC8B,IAAD,EAAO;AACf,SAAKlD,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACI,KAAKD,QAAL,CAAc;AACZW,MAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aAAX,CAAyBkD,MAAzB,CAAgCC,CAAC,IAAI;AAClD,eAAOA,CAAC,IAAIF,IAAZ;AACD,OAFc;AADH,KAAd,CADJ,GAMI,KAAKlD,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACA,KAAKD,QAAL,CAAc;AACZY,MAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWE,eAAX,CAA2BiD,MAA3B,CAAkCC,CAAC,IAAI;AACtD,eAAOA,CAAC,IAAIF,IAAZ;AACD,OAFgB;AADL,KAAd,CADA,GAMA,KAAK5D,QAAL,CAAc;AACZa,MAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aAAX,CAAyBgD,MAAzB,CAAgCC,CAAC,IAAI;AAClD,eAAOA,CAAC,IAAIF,IAAZ;AACD,OAFc;AADH,KAAd,CAZJ;AAiBD;;AAED7B,EAAAA,WAAW,CAAC6B,IAAD,EAAOG,IAAP,EAAa;AACtB,SAAKrD,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACI,KAAKD,QAAL,CAAc;AACZW,MAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aAAX,CAAyBkD,MAAzB,CAAgCC,CAAC,IAAI;AAClD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACE,YAAF,GAAiBD,IAAjB;AACD;;AACD,eAAOD,CAAP;AACD,OALc;AADH,KAAd,CADJ,GASI,KAAKpD,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACA,KAAKD,QAAL,CAAc;AACZY,MAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWE,eAAX,CAA2BiD,MAA3B,CAAkCC,CAAC,IAAI;AACtD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACE,YAAF,GAAiBD,IAAjB;AACD;;AACD,eAAOD,CAAP;AACD,OALgB;AADL,KAAd,CADA,GASA,KAAK9D,QAAL,CAAc;AACZa,MAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aAAX,CAAyBgD,MAAzB,CAAgCC,CAAC,IAAI;AAClD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACE,YAAF,GAAiBD,IAAjB;AACD;;AACD,eAAOD,CAAP;AACD,OALc;AADH,KAAd,CAlBJ;AA0BD;;AAED9B,EAAAA,cAAc,CAAC4B,IAAD,EAAO;AACnB,SAAKlD,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACI,KAAKD,QAAL,CAAc;AACZW,MAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aAAX,CAAyBkD,MAAzB,CAAgCC,CAAC,IAAI;AAClD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACE,YAAF,GAAiB,EAAjB;AACD;;AACD,eAAOF,CAAP;AACD,OALc;AADH,KAAd,CADJ,GASI,KAAKpD,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACA,KAAKD,QAAL,CAAc;AACZY,MAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWE,eAAX,CAA2BiD,MAA3B,CAAkCC,CAAC,IAAI;AACtD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACE,YAAF,GAAiB,EAAjB;AACD;;AACD,eAAOF,CAAP;AACD,OALgB;AADL,KAAd,CADA,GASA,KAAK9D,QAAL,CAAc;AACZa,MAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aAAX,CAAyBgD,MAAzB,CAAgCC,CAAC,IAAI;AAClD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACE,YAAF,GAAiB,EAAjB;AACD;;AACD,eAAOF,CAAP;AACD,OALc;AADH,KAAd,CAlBJ;AA0BD;;AAEDrC,EAAAA,YAAY,CAACmC,IAAD,EAAOpB,IAAP,EAAa;AACvB,SAAK9B,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACI,KAAKD,QAAL,CAAc;AACZW,MAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aAAX,CAAyBkD,MAAzB,CAAgCC,CAAC,IAAI;AAClD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACG,KAAF,GAAUzB,IAAV;AACD;;AAED,eAAOsB,CAAP;AACD,OANc;AADH,KAAd,CADJ,GAUI,KAAKpD,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACA,KAAKD,QAAL,CAAc;AACZY,MAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWE,eAAX,CAA2BiD,MAA3B,CAAkCC,CAAC,IAAI;AACtD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACG,KAAF,GAAUzB,IAAV;AACD;;AAED,eAAOsB,CAAP;AACD,OANgB;AADL,KAAd,CADA,GAUA,KAAK9D,QAAL,CAAc;AACZa,MAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aAAX,CAAyBgD,MAAzB,CAAgCC,CAAC,IAAI;AAClD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACG,KAAF,GAAUzB,IAAV;AACD;;AAED,eAAOsB,CAAP;AACD,OANc;AADH,KAAd,CApBJ;AA6BD;;AAEDjC,EAAAA,gBAAgB,CAACmB,CAAD,EAAIkB,IAAJ,EAAU;AACxB,SAAKlE,QAAL,CAAc;AAAEoB,MAAAA,SAAS,EAAE8C,IAAI,CAACnE;AAAlB,KAAd;AACD;;AAEDmC,EAAAA,OAAO,CAAC0B,IAAD,EAAO;AACZ,SAAKlD,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACI,KAAKD,QAAL,CAAc;AACZW,MAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aAAX,CAAyBkD,MAAzB,CAAgCC,CAAC,IAAI;AAClD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACE,YAAF,GAAiB,SAAjB;AACD;;AAED,eAAOF,CAAP;AACD,OANc;AADH,KAAd,CADJ,GAUI,KAAKpD,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACA,KAAKD,QAAL,CAAc;AACZY,MAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWE,eAAX,CAA2BiD,MAA3B,CAAkCC,CAAC,IAAI;AACtD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACE,YAAF,GAAiB,SAAjB;AACD;;AAED,eAAOF,CAAP;AACD,OANgB;AADL,KAAd,CADA,GAUA,KAAK9D,QAAL,CAAc;AACZa,MAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aAAX,CAAyBgD,MAAzB,CAAgCC,CAAC,IAAI;AAClD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACE,YAAF,GAAiB,SAAjB;AACD;;AAED,eAAOF,CAAP;AACD,OANc;AADH,KAAd,CApBJ;AA6BD;;AAEDlC,EAAAA,gBAAgB,CAACgC,IAAD,EAAOO,IAAP,EAAa;AAC3B,SAAKzD,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACI,KAAKD,QAAL,CAAc;AACZW,MAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aAAX,CAAyBkD,MAAzB,CAAgCC,CAAC,IAAI;AAClD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACE,YAAF,GAAiBG,IAAjB;AACD;;AAED,eAAOL,CAAP;AACD,OANc;AADH,KAAd,CADJ,GAUI,KAAKpD,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACA,KAAKD,QAAL,CAAc;AACZY,MAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWE,eAAX,CAA2BiD,MAA3B,CAAkCC,CAAC,IAAI;AACtD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACE,YAAF,GAAiBG,IAAjB;AACD;;AAED,eAAOL,CAAP;AACD,OANgB;AADL,KAAd,CADA,GAUA,KAAK9D,QAAL,CAAc;AACZa,MAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aAAX,CAAyBgD,MAAzB,CAAgCC,CAAC,IAAI;AAClD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACE,YAAF,GAAiBG,IAAjB;AACD;;AAED,eAAOL,CAAP;AACD,OANc;AADH,KAAd,CApBJ;AA6BD;;AAEDnC,EAAAA,UAAU,CAACiC,IAAD,EAAOQ,IAAP,EAAa;AACrB,SAAK1D,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACI,KAAKD,QAAL,CAAc;AACZW,MAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aAAX,CAAyBkD,MAAzB,CAAgCC,CAAC,IAAI;AAClD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACM,IAAF,GAASA,IAAT;AACD;;AAED,eAAON,CAAP;AACD,OANc;AADH,KAAd,CADJ,GAUI,KAAKpD,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACA,KAAKD,QAAL,CAAc;AACZY,MAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWE,eAAX,CAA2BiD,MAA3B,CAAkCC,CAAC,IAAI;AACtD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACM,IAAF,GAASA,IAAT;AACD;;AAED,eAAON,CAAP;AACD,OANgB;AADL,KAAd,CADA,GAUA,KAAK9D,QAAL,CAAc;AACZa,MAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aAAX,CAAyBgD,MAAzB,CAAgCC,CAAC,IAAI;AAClD,YAAIA,CAAC,IAAIF,IAAT,EAAe;AACbE,UAAAA,CAAC,CAACM,IAAF,GAASA,IAAT;AACD;;AAED,eAAON,CAAP;AACD,OANc;AADH,KAAd,CApBJ;AA6BD;;AAEDO,EAAAA,OAAO,GAAG;AACR;AAEA,SAAK3D,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACI,KAAKD,QAAL,CAAc;AACZW,MAAAA,aAAa,EAAE,CACb,GAAG,KAAKD,KAAL,CAAWC,aADD,EAEb;AACEsD,QAAAA,KAAK,EAAE,mBAAmB,KAAKvD,KAAL,CAAWF,KADvC;AAEE4D,QAAAA,IAAI,EAAE,OAFR;AAGEJ,QAAAA,YAAY,EAAE,EAHhB;AAIExD,QAAAA,KAAK,EAAE,KAAKE,KAAL,CAAWF,KAJpB;AAKEW,QAAAA,EAAE,EAAE,KAAKT,KAAL,CAAWS;AALjB,OAFa,CADH;AAWZX,MAAAA,KAAK,EAAE,KAAKE,KAAL,CAAWF,KAAX,GAAmB,CAXd;AAYZW,MAAAA,EAAE,EAAE,KAAKT,KAAL,CAAWS,EAAX,GAAgB;AAZR,KAAd,CADJ,GAeI,KAAKT,KAAL,CAAWT,WAAX,KAA2B,CAA3B,GACA,KAAKD,QAAL,CAAc;AACZY,MAAAA,eAAe,EAAE,CACf,GAAG,KAAKF,KAAL,CAAWE,eADC,EAEf;AACEqD,QAAAA,KAAK,EAAE,mBAAmB,KAAKvD,KAAL,CAAWF,KADvC;AAEE4D,QAAAA,IAAI,EAAE,OAFR;AAGEJ,QAAAA,YAAY,EAAE,EAHhB;AAIExD,QAAAA,KAAK,EAAE,KAAKE,KAAL,CAAWF,KAJpB;AAKEW,QAAAA,EAAE,EAAE,KAAKT,KAAL,CAAWS;AALjB,OAFe,CADL;AAWZX,MAAAA,KAAK,EAAE,KAAKE,KAAL,CAAWF,KAAX,GAAmB,CAXd;AAYZW,MAAAA,EAAE,EAAE,KAAKT,KAAL,CAAWS,EAAX,GAAgB;AAZR,KAAd,CADA,GAeA,KAAKnB,QAAL,CAAc;AACZa,MAAAA,aAAa,EAAE,CACb,GAAG,KAAKH,KAAL,CAAWG,aADD,EAEb;AACEoD,QAAAA,KAAK,EAAE,mBAAmB,KAAKvD,KAAL,CAAWF,KADvC;AAEE4D,QAAAA,IAAI,EAAE,OAFR;AAGEJ,QAAAA,YAAY,EAAE,EAHhB;AAIExD,QAAAA,KAAK,EAAE,KAAKE,KAAL,CAAWF,KAJpB;AAKEW,QAAAA,EAAE,EAAE,KAAKT,KAAL,CAAWS;AALjB,OAFa,CADH;AAWZX,MAAAA,KAAK,EAAE,KAAKE,KAAL,CAAWF,KAAX,GAAmB,CAXd;AAYZW,MAAAA,EAAE,EAAE,KAAKT,KAAL,CAAWS,EAAX,GAAgB;AAZR,KAAd,CA9BJ;AA4CD;;AAmCDmD,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,KAAK,EAAE,MAHF;AAKLC,QAAAA,eAAe,EAAE,SALZ;AAMLC,QAAAA,QAAQ,EAAE;AANL,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE;AACE,MAAA,KAAK,EAAE;AACLF,QAAAA,KAAK,EAAE,MADF;AAELG,QAAAA,cAAc,EAAE,QAFX;AAGLC,QAAAA,SAAS,EAAE;AAHN,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEL,QAAAA,MAAM,EAAE;AAAV,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK9D,KAAL,CAAWW,SAAX,GACC,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC;AACE,MAAA,KAAK,EAAE;AACLkD,QAAAA,OAAO,EAAE,MADJ;AAELO,QAAAA,aAAa,EAAE,QAFV;AAGLC,QAAAA,UAAU,EAAE,QAHP;AAILJ,QAAAA,QAAQ,EAAE,QAJL;AAKLH,QAAAA,MAAM,EAAE;AALH,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AACE,MAAA,KAAK,EAAE;AACLQ,QAAAA,QAAQ,EAAE,OADL;AAELC,QAAAA,MAAM,EAAE,EAFH;AAGLR,QAAAA,KAAK,EAAE,MAHF;AAILC,QAAAA,eAAe,EAAE,SAJZ;AAKLH,QAAAA,OAAO,EAAE,MALJ;AAMLO,QAAAA,aAAa,EAAE,QANV;AAQLI,QAAAA,OAAO,EAAE;AARJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYE;AAAK,MAAA,KAAK,EAAE;AAAEX,QAAAA,OAAO,EAAE,MAAX;AAAmBO,QAAAA,aAAa,EAAE;AAAlC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,IAAI,EAAE;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE;AAAEV,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,WAAW,EAAC,oBAFd;AAGE,MAAA,KAAK,EAAE,KAAK/D,KAAL,CAAWU,SAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKS,gBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE;AAAEuD,QAAAA,UAAU,EAAE;AAAd,OADT;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,IAAI,MAHN;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKf,OAAL,EAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAPF,CAJF,EAoBE;AACE,MAAA,KAAK,EAAE;AACLc,QAAAA,IAAI,EAAE,GADD;AAELP,QAAAA,cAAc,EAAE,UAFX;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,KAAKtC,SADhB;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,QAAQ,EACN,KAAKvB,KAAL,CAAWU,SAAX,CAAqBiE,MAArB,KAAgC,CAAhC,IACA,KAAK3E,KAAL,CAAWC,aAAX,CAAyB0E,MAAzB,GACE,KAAK3E,KAAL,CAAWE,eAAX,CAA2ByE,MAD7B,GAEE,KAAK3E,KAAL,CAAWG,aAAX,CAAyBwE,MAF3B,KAGE,CARN;AAUE,MAAA,IAAI,MAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CAPF,CApBF,CAZF,EAuDE;AAAK,MAAA,KAAK,EAAE;AAAEd,QAAAA,OAAO,EAAE,MAAX;AAAmBK,QAAAA,cAAc,EAAE;AAAnC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE,KAAKlE,KAAL,CAAWT,WADpB;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,QAAQ,EAAE,KAAKJ,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,EAUE,oBAAC,MAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,OAAO,EAAE,MACP,KAAKG,QAAL,CAAc;AAAEwB,QAAAA,MAAM,EAAE,CAAC,KAAKd,KAAL,CAAWc;AAAtB,OAAd,CAHJ;AAKE,MAAA,KAAK,EAAE;AACLkD,QAAAA,eAAe,EAAE,KAAKhE,KAAL,CAAWc,MAAX,GAAoB,MAApB,GAA6B;AADzC,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,KAAKd,KAAL,CAAWc,MAAX,GACC,oBAAC,KAAD;AACE,MAAA,OAAO,EACL,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAE8D,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAIE,MAAA,QAAQ,EAAC,eAJX;AAKE,MAAA,OAAO,EAAC,qNALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GASC,oBAAC,KAAD;AACE,MAAA,OAAO,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,KAAK,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADX;AAEE,MAAA,QAAQ,EAAC,eAFX;AAGE,MAAA,OAAO,EAAC,0KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,CAVF,CAvDF,CATF,EAsGE;AACE,MAAA,KAAK,EAAE;AACLH,QAAAA,IAAI,EAAE,EADD;AAELI,QAAAA,SAAS,EAAE,MAFN;AAGLC,QAAAA,SAAS,EAAE,GAHN;AAKLf,QAAAA,KAAK,EAAE;AALF,OADT;AAQE,MAAA,SAAS,EAAC,eARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,oBAAC,SAAD;AACE,MAAA,MAAM,EAAE,KAAK/D,KAAL,CAAWc,MADrB;AAEE,MAAA,WAAW,EAAE,KAAKd,KAAL,CAAWT,WAF1B;AAGE,MAAA,iBAAiB,EAAE,KAAKC,iBAH1B;AAIE,MAAA,SAAS,EAAE,KAAKC,SAJlB;AAKE,MAAA,YAAY,EAAE,KAAKsB,YALrB;AAME,MAAA,aAAa,EAAE,KAAKf,KAAL,CAAWC,aAN5B;AAOE,MAAA,eAAe,EAAE,KAAKD,KAAL,CAAWE,eAP9B;AAQE,MAAA,aAAa,EAAE,KAAKF,KAAL,CAAWG,aAR5B;AASE,MAAA,UAAU,EAAE,KAAKc,UATnB;AAUE,MAAA,gBAAgB,EAAE,KAAKC,gBAVzB;AAWE,MAAA,UAAU,EAAE,KAAKE,UAXnB;AAYE,MAAA,OAAO,EAAE,KAAKI,OAZhB;AAaE,MAAA,WAAW,EAAE,KAAKH,WAbpB;AAcE,MAAA,cAAc,EAAE,KAAKC,cAdvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CAtGF,CAJJ,CAPF,CAXF,CADF;AA8JD;;AA3kBkD;;AA8kBrDvC,sBAAsB,CAACgG,SAAvB,GAAmC;AACjChH,EAAAA,gBAAgB,EAAED,SAAS,CAACkH,IAAV,CAAeC,UADA;AAEjCjH,EAAAA,aAAa,EAAEF,SAAS,CAACkH,IAAV,CAAeC,UAFG;AAGjChH,EAAAA,gBAAgB,EAAEH,SAAS,CAACkH,IAAV,CAAeC;AAHA,CAAnC;AAMA,eAAe/G,OAAO,CACpBU,eADoB,EAEpBC,kBAFoB,CAAP,CAGbE,sBAHa,CAAf","sourcesContent":["import React from 'react';\nimport {\n  Container,\n  Button,\n  Icon,\n  Input,\n  Responsive,\n  Popup\n} from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport {\n  changeNameOfPage,\n  changeBackUrl,\n  changeActivePage\n} from '../../navbar/actions';\nimport { connect } from 'react-redux';\n\nimport TrameComponent from './trame';\n\nimport PouchDBServices from '../../../services/index';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport MyActivityIndicator from '../../../components/myActivityIndicator.component';\nimport { Tabs, Tab } from '@material-ui/core';\nimport TrameList from './trameList';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: () => dispatch(changeNameOfPage('Création de trame')),\n    changeBackUrl: () => dispatch(changeBackUrl('/preferences')),\n    changeActivePage: () =>\n      dispatch(changeActivePage('mesDossiers', '/creation-trame'))\n  };\n}\n\nclass TrameCreationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskListAvant: [],\n      taskListPendant: [],\n      taskListAprès: [],\n      index: 0,\n      id: 0,\n      trameName: '',\n      isLoading: true,\n      _id: null,\n      _rev: null,\n      activeIndex: 0,\n      locked: false\n    };\n    this.validateName = this.validateName.bind(this);\n    this.changeType = this.changeType.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.addDocument = this.addDocument.bind(this);\n    this.deleteDocument = this.deleteDocument.bind(this);\n    this.saveTrame = this.saveTrame.bind(this);\n    this.addForm = this.addForm.bind(this);\n  }\n\n  async saveTrame() {\n    if (window.confirm('Voulez-vous sauvegarder cette trame?')) {\n      try {\n        await PouchDBServices.services.trame.postDocument(\n          !this.state._id\n            ? {\n                name: this.state.trameName,\n                trameAvant: this.state.taskListAvant,\n                tramePendant: this.state.taskListPendant,\n                trameAprès: this.state.taskListAprès\n              }\n            : {\n                name: this.state.trameName,\n                trameAvant: this.state.taskListAvant,\n                tramePendant: this.state.taskListPendant,\n                trameAprès: this.state.taskListAprès,\n                _id: this.state._id,\n                _rev: this.state._rev\n              }\n        );\n        this.props.history.push('/preferences');\n        console.log('trame saved!');\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  handleChange = (event, value) => {\n    this.setState({\n      activeIndex: value\n    });\n  };\n\n  handleChangeIndex = value => {\n    this.setState({\n      activeIndex: value\n    });\n  };\n  componentDidMount() {\n    this.props.changeNameOfPage();\n    this.props.changeBackUrl();\n    this.props.changeActivePage();\n\n    if (this.props.match.params.id) {\n      this.getTrame(this.props.match.params.id);\n    } else {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async getTrame(trameid) {\n    try {\n      const trame = (await PouchDBServices.services.trame.getTrameById(\n        trameid\n      ))[0];\n\n      this.setState({\n        taskListAvant: trame.trameAvant,\n        taskListPendant: trame.tramePendant,\n        taskListAprès: trame.trameAprès,\n        trameName: trame.name,\n        _id: trame._id,\n        index:\n          Math.max.apply(\n            Math,\n            trame.trameAvant.map(function(o) {\n              return o.index;\n            })\n          ) +\n          Math.max.apply(\n            Math,\n            trame.tramePendant.map(function(o) {\n              return o.index;\n            })\n          ) +\n          Math.max.apply(\n            Math,\n            trame.trameAprès.map(function(o) {\n              return o.index;\n            })\n          ),\n        id:\n          Math.max.apply(\n            Math,\n            trame.trameAvant.map(function(o) {\n              return o.id;\n            })\n          ) +\n          Math.max.apply(\n            Math,\n            trame.tramePendant.map(function(o) {\n              return o.id;\n            })\n          ) +\n          Math.max.apply(\n            Math,\n            trame.trameAprès.map(function(o) {\n              return o.id;\n            })\n          ),\n        isLoading: false,\n        _rev: trame._rev\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  deleteTask(task) {\n    this.state.activeIndex === 0\n      ? this.setState({\n          taskListAvant: this.state.taskListAvant.filter(t => {\n            return t != task;\n          })\n        })\n      : this.state.activeIndex === 1\n      ? this.setState({\n          taskListPendant: this.state.taskListPendant.filter(t => {\n            return t != task;\n          })\n        })\n      : this.setState({\n          taskListAprès: this.state.taskListAprès.filter(t => {\n            return t != task;\n          })\n        });\n  }\n\n  addDocument(task, file) {\n    this.state.activeIndex === 0\n      ? this.setState({\n          taskListAvant: this.state.taskListAvant.filter(t => {\n            if (t == task) {\n              t.innerContent = file;\n            }\n            return t;\n          })\n        })\n      : this.state.activeIndex === 1\n      ? this.setState({\n          taskListPendant: this.state.taskListPendant.filter(t => {\n            if (t == task) {\n              t.innerContent = file;\n            }\n            return t;\n          })\n        })\n      : this.setState({\n          taskListAprès: this.state.taskListAprès.filter(t => {\n            if (t == task) {\n              t.innerContent = file;\n            }\n            return t;\n          })\n        });\n  }\n\n  deleteDocument(task) {\n    this.state.activeIndex === 0\n      ? this.setState({\n          taskListAvant: this.state.taskListAvant.filter(t => {\n            if (t == task) {\n              t.innerContent = '';\n            }\n            return t;\n          })\n        })\n      : this.state.activeIndex === 1\n      ? this.setState({\n          taskListPendant: this.state.taskListPendant.filter(t => {\n            if (t == task) {\n              t.innerContent = '';\n            }\n            return t;\n          })\n        })\n      : this.setState({\n          taskListAprès: this.state.taskListAprès.filter(t => {\n            if (t == task) {\n              t.innerContent = '';\n            }\n            return t;\n          })\n        });\n  }\n\n  validateName(task, name) {\n    this.state.activeIndex === 0\n      ? this.setState({\n          taskListAvant: this.state.taskListAvant.filter(t => {\n            if (t == task) {\n              t.title = name;\n            }\n\n            return t;\n          })\n        })\n      : this.state.activeIndex === 1\n      ? this.setState({\n          taskListPendant: this.state.taskListPendant.filter(t => {\n            if (t == task) {\n              t.title = name;\n            }\n\n            return t;\n          })\n        })\n      : this.setState({\n          taskListAprès: this.state.taskListAprès.filter(t => {\n            if (t == task) {\n              t.title = name;\n            }\n\n            return t;\n          })\n        });\n  }\n\n  handleNameChange(e, data) {\n    this.setState({ trameName: data.value });\n  }\n\n  addForm(task) {\n    this.state.activeIndex === 0\n      ? this.setState({\n          taskListAvant: this.state.taskListAvant.filter(t => {\n            if (t == task) {\n              t.innerContent = 'form1&9';\n            }\n\n            return t;\n          })\n        })\n      : this.state.activeIndex === 1\n      ? this.setState({\n          taskListPendant: this.state.taskListPendant.filter(t => {\n            if (t == task) {\n              t.innerContent = 'form1&9';\n            }\n\n            return t;\n          })\n        })\n      : this.setState({\n          taskListAprès: this.state.taskListAprès.filter(t => {\n            if (t == task) {\n              t.innerContent = 'form1&9';\n            }\n\n            return t;\n          })\n        });\n  }\n\n  handleTextChange(task, text) {\n    this.state.activeIndex === 0\n      ? this.setState({\n          taskListAvant: this.state.taskListAvant.filter(t => {\n            if (t == task) {\n              t.innerContent = text;\n            }\n\n            return t;\n          })\n        })\n      : this.state.activeIndex === 1\n      ? this.setState({\n          taskListPendant: this.state.taskListPendant.filter(t => {\n            if (t == task) {\n              t.innerContent = text;\n            }\n\n            return t;\n          })\n        })\n      : this.setState({\n          taskListAprès: this.state.taskListAprès.filter(t => {\n            if (t == task) {\n              t.innerContent = text;\n            }\n\n            return t;\n          })\n        });\n  }\n\n  changeType(task, type) {\n    this.state.activeIndex === 0\n      ? this.setState({\n          taskListAvant: this.state.taskListAvant.filter(t => {\n            if (t == task) {\n              t.type = type;\n            }\n\n            return t;\n          })\n        })\n      : this.state.activeIndex === 1\n      ? this.setState({\n          taskListPendant: this.state.taskListPendant.filter(t => {\n            if (t == task) {\n              t.type = type;\n            }\n\n            return t;\n          })\n        })\n      : this.setState({\n          taskListAprès: this.state.taskListAprès.filter(t => {\n            if (t == task) {\n              t.type = type;\n            }\n\n            return t;\n          })\n        });\n  }\n\n  addTask() {\n    //de 3 types: basic, text, ou document.\n\n    this.state.activeIndex === 0\n      ? this.setState({\n          taskListAvant: [\n            ...this.state.taskListAvant,\n            {\n              title: 'Nouvelle tâche' + this.state.index,\n              type: 'basic',\n              innerContent: '',\n              index: this.state.index,\n              id: this.state.id\n            }\n          ],\n          index: this.state.index + 1,\n          id: this.state.id + 1\n        })\n      : this.state.activeIndex === 1\n      ? this.setState({\n          taskListPendant: [\n            ...this.state.taskListPendant,\n            {\n              title: 'Nouvelle tâche' + this.state.index,\n              type: 'basic',\n              innerContent: '',\n              index: this.state.index,\n              id: this.state.id\n            }\n          ],\n          index: this.state.index + 1,\n          id: this.state.id + 1\n        })\n      : this.setState({\n          taskListAprès: [\n            ...this.state.taskListAprès,\n            {\n              title: 'Nouvelle tâche' + this.state.index,\n              type: 'basic',\n              innerContent: '',\n              index: this.state.index,\n              id: this.state.id\n            }\n          ],\n          index: this.state.index + 1,\n          id: this.state.id + 1\n        });\n  }\n\n  onDragEnd = result => {\n    const { destination, source } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    let taskList;\n    this.state.activeIndex === 0\n      ? (taskList = this.state.taskListAvant)\n      : this.state.activeIndex === 1\n      ? (taskList = this.state.taskListPendant)\n      : (taskList = this.state.taskListAprès);\n\n    const res = Array.from(taskList);\n\n    const [removed] = res.splice(result.source.index, 1);\n    res.splice(result.destination.index, 0, removed);\n\n    this.state.activeIndex === 0\n      ? this.setState({ taskListAvant: res })\n      : this.state.activeIndex === 1\n      ? this.setState({ taskListPendant: res })\n      : this.setState({ taskListAprès: res });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"hidescrollbar\"\n        style={{\n          display: 'flex',\n          height: '100%',\n          width: '100%',\n\n          backgroundColor: '#f2f2f2',\n          overflow: 'hidden'\n        }}\n      >\n        <div\n          style={{\n            width: '100%',\n            justifyContent: 'center',\n            textAlign: 'center'\n          }}\n        >\n          <Container style={{ height: '100%' }}>\n            {this.state.isLoading ? (\n              <MyActivityIndicator />\n            ) : (\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  overflow: 'hidden',\n                  height: '100%'\n                }}\n              >\n                <div\n                  style={{\n                    position: 'fixed',\n                    zIndex: 10,\n                    width: '100%',\n                    backgroundColor: '#f2f2f2',\n                    display: 'flex',\n                    flexDirection: 'column',\n\n                    padding: 20\n                  }}\n                >\n                  <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    <Responsive minWidth={400}>\n                      <div style={{ flex: 0.3 }}></div>\n                    </Responsive>\n                    <div style={{ flex: 1 }}>\n                      <Input\n                        style={{ width: 150 }}\n                        placeholder=\"Nom de la trame...\"\n                        value={this.state.trameName}\n                        onChange={this.handleNameChange}\n                      ></Input>\n                      <Button\n                        style={{ marginLeft: 5 }}\n                        color=\"teal\"\n                        icon\n                        onClick={() => this.addTask()}\n                      >\n                        <Icon name=\"plus\" color=\"white\"></Icon>\n                      </Button>\n                    </div>\n                    <div\n                      style={{\n                        flex: 0.3,\n                        justifyContent: 'flex-end',\n                        display: 'flex'\n                      }}\n                    >\n                      <Button\n                        onClick={this.saveTrame}\n                        color=\"red\"\n                        disabled={\n                          this.state.trameName.length === 0 ||\n                          this.state.taskListAvant.length +\n                            this.state.taskListPendant.length +\n                            this.state.taskListAprès.length ===\n                            0\n                        }\n                        icon\n                      >\n                        <Icon name=\"save\" color=\"white\"></Icon>\n                      </Button>\n                    </div>\n                  </div>\n                  <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <Tabs\n                      value={this.state.activeIndex}\n                      fullWidth\n                      onChange={this.handleChange}\n                    >\n                      <Tab label=\"Avant\" />\n                      <Tab label=\"Pendant\" />\n                      <Tab label=\"Après\" />\n                    </Tabs>\n                    <Button\n                      icon\n                      onClick={() =>\n                        this.setState({ locked: !this.state.locked })\n                      }\n                      style={{\n                        backgroundColor: this.state.locked ? 'grey' : null\n                      }}\n                    >\n                      {this.state.locked ? (\n                        <Popup\n                          trigger={\n                            <Icon name=\"lock\" style={{ color: 'white' }}></Icon>\n                          }\n                          position=\"bottom center\"\n                          content=\"La liste est verrouillée. Vous ne pouvez pas balayer celle-ci entre les différentes étapes, en revanche vous pouvez déplacer les items de la trame à votre convenance avec la souris ou votre doigt.\"\n                        ></Popup>\n                      ) : (\n                        <Popup\n                          trigger={<Icon name=\"unlock\" color=\"grey\"></Icon>}\n                          position=\"bottom center\"\n                          content=\"La liste est déverrouillée. Vous ne pouvez plus réorganiser les items de la liste, vous pouvez en revanche balayer celle-ci entre les différentes étapes.\"\n                        ></Popup>\n                      )}\n                    </Button>\n                  </div>\n                </div>\n\n                <div\n                  style={{\n                    flex: 10,\n                    overflowY: 'auto',\n                    marginTop: 120,\n\n                    width: '100%'\n                  }}\n                  className=\"hidescrollbar\"\n                >\n                  <TrameList\n                    locked={this.state.locked}\n                    activeIndex={this.state.activeIndex}\n                    handleChangeIndex={this.handleChangeIndex}\n                    onDragEnd={this.onDragEnd}\n                    validateName={this.validateName}\n                    taskListAvant={this.state.taskListAvant}\n                    taskListPendant={this.state.taskListPendant}\n                    taskListAprès={this.state.taskListAprès}\n                    changeType={this.changeType}\n                    handleTextChange={this.handleTextChange}\n                    deleteTask={this.deleteTask}\n                    addForm={this.addForm}\n                    addDocument={this.addDocument}\n                    deleteDocument={this.deleteDocument}\n                  />\n                </div>\n              </div>\n            )}\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nTrameCreationComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrameCreationComponent);\n"]},"metadata":{},"sourceType":"module"}