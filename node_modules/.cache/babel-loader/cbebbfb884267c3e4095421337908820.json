{"ast":null,"code":"import _objectSpread from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visiteCreation/createVisite.container.js\";\n\n/* eslint-disable no-undef */\nimport React from 'react';\nimport { Form, Grid, GridRow, GridColumn, TextArea, Button, Message, Container, Checkbox } from 'semantic-ui-react';\nimport axios from 'axios';\nimport config from '../../config';\nimport { DateInput } from 'semantic-ui-calendar-react';\nimport { PropTypes } from 'prop-types';\nimport { changeNameOfPage, changeBackUrl, changeActivePage } from '../navbar/actions';\nimport { connect } from 'react-redux';\nimport PouchDbServices from '../../services';\nimport ControleComponent from './controles.container';\nimport EntrepriseField from '../../components/fields/entrepriseField.component';\nlet visitesService = PouchDbServices.services.visite;\nlet dossierService = PouchDbServices.services.dossier;\n\nconst moment = require('moment');\n\nfunction mapStateToProps(state) {\n  return {\n    agentIdent: state.dataReducer.AGENT_DD_IDENT\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: newName => dispatch(changeNameOfPage(newName)),\n    changeBackUrl: newBackUrl => dispatch(changeBackUrl(newBackUrl)),\n    changeActivePage: value => dispatch(changeActivePage('mesDossiers', value))\n  };\n}\n\nclass CreateVisiteComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displayTrame = () => {\n      if (this.props.match.params.dossierId) {\n        return React.createElement(Form.Group, {\n          style: {\n            margin: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          style: {\n            width: '100%',\n            margin: 0\n          },\n          verticalAlign: \"bottom\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(GridRow, {\n          style: {\n            display: 'flex'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          width: 16,\n          style: {\n            padding: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(Form.Select, {\n          fluid: true,\n          placeholder: \"Trame\",\n          label: \"Trame associ\\xE9e\",\n          style: {\n            width: '100%'\n          },\n          options: this.state.trameList.map(trame => ({\n            key: trame._id,\n            text: trame.name,\n            value: trame\n          })),\n          onChange: (e, {\n            value\n          }) => this.setState({\n            trame: value\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        })))));\n      }\n    };\n\n    this.displayMessage = message => {\n      if (message) {\n        return React.createElement(Message, {\n          fluid: true,\n          negative: true,\n          onDismiss: () => this.setState({\n            message: ''\n          }),\n          style: {\n            marginTop: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(Message.Header, {\n          style: {\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"Validation Impossible\"), React.createElement(Message.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, message));\n      }\n    };\n\n    this.state = {\n      VIS_CPMM: false,\n      VIS_MUTUALISEE: false,\n      VIS_DATE: moment().format('DD-MM-YYYY'),\n      ETOB_RAISON_SOCIALE: '',\n      ETOB_SIRET: '',\n      ETOB_IDENT: -1,\n      VIS_OBSERVATIONS: '',\n      trame: '',\n      trameList: [{\n        _id: 0,\n        name: 'Aucune trame'\n      }],\n      controlesList: [],\n      message: '',\n      //Message d'erreur si il y en a\n      DOSSIER_IDENT: -1,\n      dossierText: '',\n      visiteIdent: undefined,\n      //Identifiant de la visite dans le cas de modification\n      visite: undefined //Visite dans le cas de modification\n\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.visiteId) {\n      //Si on est sur une page de modification de visite\n      this.props.changeNameOfPage('Modification de visite');\n      this.props.changeBackUrl('/visite/' + this.props.match.params.visiteId.toString());\n      this.props.changeActivePage('/modify-visite/' + this.props.match.params.visiteId); // On charge la visite et les controles correspondant\n\n      const visite = await visitesService.getVisiteById(this.props.match.params.visiteId);\n      const controles = await visitesService.getControlesByVisite(this.props.match.params.visiteId);\n      const dossier = await dossierService.getDossierById(controles[0].DOSSIER_IDENT); //Dossier correspondant au premier contrôle (pour régler le dossier par défaut dans la création de controle)\n\n      let controlesList = [];\n\n      for (let i in controles) {\n        // On recrée la liste des controles de la visite\n        const dossierControle = await dossierService.getDossierById(controles[i].DOSSIER_IDENT); //Dossier correspondant à la visite\n\n        controlesList = controlesList.concat([_objectSpread({}, controles[i], {\n          dossierText: dossierControle.DOSSIER_LIBELLE,\n          activiteText: controles[i].ACDG_CODE_LIB_NIVEAU3,\n          ident: controles[i].CONTROLE_IDENT,\n          exists: true //indique que le contrôle existe déjà dans la base de données\n\n        })]);\n      }\n\n      this.setState(_objectSpread({}, visite, {\n        controlesList,\n        message: '',\n        dossierText: dossier.DOSSIER_LIBELLE,\n        visiteIdent: visite.VISITE_IDENT,\n        DOSSIER_IDENT: dossier.DOSSIER_IDENT,\n        visite\n      }));\n    } else {\n      //Si on est en création de visite\n      this.props.changeNameOfPage('Création de visite');\n      this.props.changeBackUrl('/dossier/' + this.props.match.params.dossierId);\n      this.props.changeActivePage('/nouvelle-visite/' + this.props.match.params.dossierId);\n      PouchDbServices.services.trame.getAllDocs().then(res => {\n        this.setState({\n          trameList: this.state.trameList.concat(res)\n        });\n      }).catch(() => {});\n      const dossier = await dossierService.getDossierById(this.props.match.params.dossierId);\n      this.setState({\n        dossierText: dossier.DOSSIER_LIBELLE,\n        DOSSIER_IDENT: parseInt(this.props.match.params.dossierId)\n      });\n    }\n  }\n\n  testEntries() {\n    if (!this.state.ETOB_RAISON_SOCIALE || !this.state.VIS_DATE || !this.state.trame) {\n      this.setState({\n        message: \"Veillez à renseigner l'ensemble des champs obligatoires\"\n      });\n      return false;\n    }\n\n    if (this.state.ETOB_SIRET.length !== 14) {\n      this.setState({\n        message: \"Le numéro SIRET renseigné n'est pas valide : il doit être composé de 14 chiffres\"\n      });\n      return false;\n    }\n\n    if (this.state.controlesList.length === 0) {\n      this.setState({\n        message: 'Veuillez rentrer au moins une action de contrôle. Vous pourrez la modifier par la suite si besoin'\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  async onSubmit() {\n    if (this.testEntries()) {\n      try {\n        const etablissement = await axios.get(config.backend.base_url + '/entreprise/' + this.state.ETOB_IDENT);\n        var etablissementInfos = {\n          ETOB_ADR1: etablissement.data.ETOB_ADR1,\n          ETOB_ADR2: etablissement.data.ETOB_ADR2,\n          ETOB_ADR3: etablissement.data.ETOB_ADR3,\n          ETOB_ADRCP: etablissement.data.ETOB_ADRCP,\n          ETOB_ADRVILLE: etablissement.data.ETOB_ADRVILLE,\n          ETOB_ENSEIGNE_LIB: etablissement.data.ETOB_ENSEIGNE_LIB,\n          ETOB_NOM_RESPONSABLE: etablissement.data.ETOB_NOM_RESPONSABLE\n        };\n      } catch (e) {\n        etablissementInfos = {};\n      }\n\n      if (this.props.match.params.visiteId) {\n        visitesService.updateVisite(_objectSpread({}, this.state.visite, etablissementInfos, {\n          ETOB_RAISON_SOCIALE: this.state.ETOB_RAISON_SOCIALE,\n          ETOB_SIRET: this.state.ETOB_SIRET,\n          VIS_DATE: this.state.VIS_DATE,\n          VIS_OBSERVATIONS: this.state.VIS_OBSERVATIONS,\n          VIS_MUTUALISEE: this.state.VIS_MUTUALISEE,\n          VIS_CPMM: this.state.VIS_CPMM,\n          trame: this.state.trame,\n          AG_IDENT: this.props.agentIdent\n        }), this.state.controlesList).then(() => {\n          window.alert('La visite a bien été modifiée.');\n          this.props.history.push('/dossier/' + this.state.DOSSIER_IDENT);\n        });\n      } else {\n        visitesService.postControlesByVisite(_objectSpread({}, etablissementInfos, {\n          ETOB_RAISON_SOCIALE: this.state.ETOB_RAISON_SOCIALE,\n          ETOB_SIRET: this.state.ETOB_SIRET,\n          VIS_DATE: this.state.VIS_DATE,\n          VIS_OBSERVATIONS: this.state.VIS_OBSERVATIONS,\n          VIS_MUTUALISEE: this.state.VIS_MUTUALISEE,\n          VIS_CPMM: this.state.VIS_CPMM,\n          trame: this.state.trame,\n          AG_IDENT: this.props.agentIdent\n        }), this.state.controlesList).then(() => {\n          window.alert('La visite a bien été ajoutée.');\n          this.props.history.push('/dossier/' + this.props.match.params.dossierId);\n        });\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, this.displayMessage(this.state.message), React.createElement(Grid, {\n      style: {\n        margin: 'auto',\n        textAlign: 'left'\n      },\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(GridRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(GridColumn, {\n      width: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      control: Checkbox,\n      label: \"CPMM\",\n      onClick: () => this.setState({\n        VIS_CPMM: !this.state.VIS_CPMM\n      }),\n      checked: this.state.VIS_CPMM,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      control: Checkbox,\n      label: \"Visite Mutualis\\xE9e\",\n      onClick: () => this.setState({\n        VIS_MUTUALISEE: !this.state.VIS_MUTUALISEE\n      }),\n      checked: this.state.VIS_MUTUALISEE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(DateInput, {\n      label: \"Date de la visite\",\n      name: \"date\",\n      placeholder: \"Date de la visite\",\n      required: true,\n      value: this.state.VIS_DATE,\n      iconPosition: \"right\",\n      onChange: (event, {\n        value\n      }) => this.setState({\n        VIS_DATE: value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    })), React.createElement(EntrepriseField, {\n      ETOB_SIRET: this.state.ETOB_SIRET,\n      ETOB_RAISON_SOCIALE: this.state.ETOB_RAISON_SOCIALE,\n      changeSiretValue: ETOB_SIRET => this.setState({\n        ETOB_SIRET\n      }),\n      changeRaisonSocialeValue: ETOB_RAISON_SOCIALE => this.setState({\n        ETOB_RAISON_SOCIALE\n      }),\n      changeEtabIdentValue: ETOB_IDENT => this.setState({\n        ETOB_IDENT\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), this.displayTrame(), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      placeholder: \"Observations\",\n      onChange: e => this.setState({\n        VIS_OBSERVATIONS: e.target.value\n      }),\n      value: this.state.VIS_OBSERVATIONS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    })))), React.createElement(ControleComponent, {\n      dossier: {\n        id: this.state.DOSSIER_IDENT,\n        text: this.state.dossierText\n      },\n      controles: this.state.controlesList,\n      changeControle: controlesList => this.setState({\n        controlesList\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        marginTop: '20px'\n      },\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"Valider\")))));\n  }\n\n}\n\nCreateVisiteComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired,\n  agentIdent: PropTypes.number.isRequired,\n  history: PropTypes.any,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      dossierId: PropTypes.string,\n      visiteId: PropTypes.string\n    })\n  })\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateVisiteComponent);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visiteCreation/createVisite.container.js"],"names":["React","Form","Grid","GridRow","GridColumn","TextArea","Button","Message","Container","Checkbox","axios","config","DateInput","PropTypes","changeNameOfPage","changeBackUrl","changeActivePage","connect","PouchDbServices","ControleComponent","EntrepriseField","visitesService","services","visite","dossierService","dossier","moment","require","mapStateToProps","state","agentIdent","dataReducer","AGENT_DD_IDENT","mapDispatchToProps","dispatch","newName","newBackUrl","value","CreateVisiteComponent","Component","constructor","props","displayTrame","match","params","dossierId","margin","width","display","padding","trameList","map","trame","key","_id","text","name","e","setState","displayMessage","message","marginTop","marginBottom","VIS_CPMM","VIS_MUTUALISEE","VIS_DATE","format","ETOB_RAISON_SOCIALE","ETOB_SIRET","ETOB_IDENT","VIS_OBSERVATIONS","controlesList","DOSSIER_IDENT","dossierText","visiteIdent","undefined","onSubmit","bind","componentDidMount","visiteId","toString","getVisiteById","controles","getControlesByVisite","getDossierById","i","dossierControle","concat","DOSSIER_LIBELLE","activiteText","ACDG_CODE_LIB_NIVEAU3","ident","CONTROLE_IDENT","exists","VISITE_IDENT","getAllDocs","then","res","catch","parseInt","testEntries","length","etablissement","get","backend","base_url","etablissementInfos","ETOB_ADR1","data","ETOB_ADR2","ETOB_ADR3","ETOB_ADRCP","ETOB_ADRVILLE","ETOB_ENSEIGNE_LIB","ETOB_NOM_RESPONSABLE","updateVisite","AG_IDENT","window","alert","history","push","postControlesByVisite","render","textAlign","event","target","id","propTypes","func","isRequired","number","any","shape","string"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\nimport React from 'react';\nimport {\n  Form,\n  Grid,\n  GridRow,\n  GridColumn,\n  TextArea,\n  Button,\n  Message,\n  Container,\n  Checkbox\n} from 'semantic-ui-react';\nimport axios from 'axios';\nimport config from '../../config';\nimport { DateInput } from 'semantic-ui-calendar-react';\nimport { PropTypes } from 'prop-types';\nimport {\n  changeNameOfPage,\n  changeBackUrl,\n  changeActivePage\n} from '../navbar/actions';\nimport { connect } from 'react-redux';\nimport PouchDbServices from '../../services';\nimport ControleComponent from './controles.container';\nimport EntrepriseField from '../../components/fields/entrepriseField.component';\nlet visitesService = PouchDbServices.services.visite;\nlet dossierService = PouchDbServices.services.dossier;\nconst moment = require('moment');\n\nfunction mapStateToProps(state) {\n  return {\n    agentIdent: state.dataReducer.AGENT_DD_IDENT\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: newName => dispatch(changeNameOfPage(newName)),\n    changeBackUrl: newBackUrl => dispatch(changeBackUrl(newBackUrl)),\n    changeActivePage: value => dispatch(changeActivePage('mesDossiers', value))\n  };\n}\n\nclass CreateVisiteComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      VIS_CPMM: false,\n      VIS_MUTUALISEE: false,\n      VIS_DATE: moment().format('DD-MM-YYYY'),\n      ETOB_RAISON_SOCIALE: '',\n      ETOB_SIRET: '',\n      ETOB_IDENT: -1,\n      VIS_OBSERVATIONS: '',\n      trame: '',\n      trameList: [{ _id: 0, name: 'Aucune trame' }],\n      controlesList: [],\n      message: '', //Message d'erreur si il y en a\n      DOSSIER_IDENT: -1,\n      dossierText: '',\n      visiteIdent: undefined, //Identifiant de la visite dans le cas de modification\n      visite: undefined //Visite dans le cas de modification\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.visiteId) {\n      //Si on est sur une page de modification de visite\n      this.props.changeNameOfPage('Modification de visite');\n      this.props.changeBackUrl(\n        '/visite/' + this.props.match.params.visiteId.toString()\n      );\n      this.props.changeActivePage(\n        '/modify-visite/' + this.props.match.params.visiteId\n      );\n      // On charge la visite et les controles correspondant\n      const visite = await visitesService.getVisiteById(\n        this.props.match.params.visiteId\n      );\n      const controles = await visitesService.getControlesByVisite(\n        this.props.match.params.visiteId\n      );\n      const dossier = await dossierService.getDossierById(\n        controles[0].DOSSIER_IDENT\n      ); //Dossier correspondant au premier contrôle (pour régler le dossier par défaut dans la création de controle)\n      let controlesList = [];\n      for (let i in controles) {\n        // On recrée la liste des controles de la visite\n        const dossierControle = await dossierService.getDossierById(\n          controles[i].DOSSIER_IDENT\n        ); //Dossier correspondant à la visite\n        controlesList = controlesList.concat([\n          {\n            ...controles[i],\n            dossierText: dossierControle.DOSSIER_LIBELLE,\n            activiteText: controles[i].ACDG_CODE_LIB_NIVEAU3,\n            ident: controles[i].CONTROLE_IDENT,\n            exists: true //indique que le contrôle existe déjà dans la base de données\n          }\n        ]);\n      }\n      this.setState({\n        ...visite,\n        controlesList,\n        message: '',\n        dossierText: dossier.DOSSIER_LIBELLE,\n        visiteIdent: visite.VISITE_IDENT,\n        DOSSIER_IDENT: dossier.DOSSIER_IDENT,\n        visite\n      });\n    } else {\n      //Si on est en création de visite\n      this.props.changeNameOfPage('Création de visite');\n      this.props.changeBackUrl('/dossier/' + this.props.match.params.dossierId);\n      this.props.changeActivePage(\n        '/nouvelle-visite/' + this.props.match.params.dossierId\n      );\n      PouchDbServices.services.trame\n        .getAllDocs()\n        .then(res => {\n          this.setState({ trameList: this.state.trameList.concat(res) });\n        })\n        .catch(() => {});\n      const dossier = await dossierService.getDossierById(\n        this.props.match.params.dossierId\n      );\n      this.setState({\n        dossierText: dossier.DOSSIER_LIBELLE,\n        DOSSIER_IDENT: parseInt(this.props.match.params.dossierId)\n      });\n    }\n  }\n\n  displayTrame = () => {\n    if (this.props.match.params.dossierId) {\n      return (\n        <Form.Group style={{ margin: 0 }}>\n          <Grid style={{ width: '100%', margin: 0 }} verticalAlign=\"bottom\">\n            <GridRow style={{ display: 'flex' }}>\n              <Grid.Column width={16} style={{ padding: 0 }}>\n                <Form.Select\n                  fluid\n                  placeholder=\"Trame\"\n                  label=\"Trame associée\"\n                  style={{ width: '100%' }}\n                  options={this.state.trameList.map(trame => ({\n                    key: trame._id,\n                    text: trame.name,\n                    value: trame\n                  }))}\n                  onChange={(e, { value }) => this.setState({ trame: value })}\n                />\n              </Grid.Column>\n            </GridRow>\n          </Grid>\n        </Form.Group>\n      );\n    }\n  };\n  displayMessage = message => {\n    if (message) {\n      return (\n        <Message\n          fluid\n          negative\n          onDismiss={() => this.setState({ message: '' })}\n          style={{ marginTop: '10px' }}\n        >\n          <Message.Header style={{ marginBottom: '5px' }}>\n            Validation Impossible\n          </Message.Header>\n          <Message.Content>{message}</Message.Content>\n        </Message>\n      );\n    }\n  };\n\n  testEntries() {\n    if (\n      !this.state.ETOB_RAISON_SOCIALE ||\n      !this.state.VIS_DATE ||\n      !this.state.trame\n    ) {\n      this.setState({\n        message: \"Veillez à renseigner l'ensemble des champs obligatoires\"\n      });\n      return false;\n    }\n    if (this.state.ETOB_SIRET.length !== 14) {\n      this.setState({\n        message:\n          \"Le numéro SIRET renseigné n'est pas valide : il doit être composé de 14 chiffres\"\n      });\n      return false;\n    }\n    if (this.state.controlesList.length === 0) {\n      this.setState({\n        message:\n          'Veuillez rentrer au moins une action de contrôle. Vous pourrez la modifier par la suite si besoin'\n      });\n      return false;\n    }\n    return true;\n  }\n\n  async onSubmit() {\n    if (this.testEntries()) {\n      try {\n        const etablissement = await axios.get(\n          config.backend.base_url + '/entreprise/' + this.state.ETOB_IDENT\n        );\n        var etablissementInfos = {\n          ETOB_ADR1: etablissement.data.ETOB_ADR1,\n          ETOB_ADR2: etablissement.data.ETOB_ADR2,\n          ETOB_ADR3: etablissement.data.ETOB_ADR3,\n          ETOB_ADRCP: etablissement.data.ETOB_ADRCP,\n          ETOB_ADRVILLE: etablissement.data.ETOB_ADRVILLE,\n          ETOB_ENSEIGNE_LIB: etablissement.data.ETOB_ENSEIGNE_LIB,\n          ETOB_NOM_RESPONSABLE: etablissement.data.ETOB_NOM_RESPONSABLE\n        };\n      } catch (e) {\n        etablissementInfos = {};\n      }\n      if (this.props.match.params.visiteId) {\n        visitesService\n          .updateVisite(\n            {\n              ...this.state.visite,\n              ...etablissementInfos,\n              ETOB_RAISON_SOCIALE: this.state.ETOB_RAISON_SOCIALE,\n              ETOB_SIRET: this.state.ETOB_SIRET,\n              VIS_DATE: this.state.VIS_DATE,\n              VIS_OBSERVATIONS: this.state.VIS_OBSERVATIONS,\n              VIS_MUTUALISEE: this.state.VIS_MUTUALISEE,\n              VIS_CPMM: this.state.VIS_CPMM,\n              trame: this.state.trame,\n              AG_IDENT: this.props.agentIdent\n            },\n            this.state.controlesList\n          )\n          .then(() => {\n            window.alert('La visite a bien été modifiée.');\n            this.props.history.push('/dossier/' + this.state.DOSSIER_IDENT);\n          });\n      } else {\n        visitesService\n          .postControlesByVisite(\n            {\n              ...etablissementInfos,\n              ETOB_RAISON_SOCIALE: this.state.ETOB_RAISON_SOCIALE,\n              ETOB_SIRET: this.state.ETOB_SIRET,\n              VIS_DATE: this.state.VIS_DATE,\n              VIS_OBSERVATIONS: this.state.VIS_OBSERVATIONS,\n              VIS_MUTUALISEE: this.state.VIS_MUTUALISEE,\n              VIS_CPMM: this.state.VIS_CPMM,\n              trame: this.state.trame,\n              AG_IDENT: this.props.agentIdent\n            },\n            this.state.controlesList\n          )\n          .then(() => {\n            window.alert('La visite a bien été ajoutée.');\n            this.props.history.push(\n              '/dossier/' + this.props.match.params.dossierId\n            );\n          });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.displayMessage(this.state.message)}\n        <Grid style={{ margin: 'auto', textAlign: 'left' }} centered>\n          <GridRow>\n            <GridColumn width={14}>\n              <Form onSubmit={this.onSubmit}>\n                <Form.Group widths=\"equal\">\n                  <Form.Field\n                    control={Checkbox}\n                    label=\"CPMM\"\n                    onClick={() =>\n                      this.setState({ VIS_CPMM: !this.state.VIS_CPMM })\n                    }\n                    checked={this.state.VIS_CPMM}\n                  />\n                  <Form.Field\n                    control={Checkbox}\n                    label=\"Visite Mutualisée\"\n                    onClick={() =>\n                      this.setState({\n                        VIS_MUTUALISEE: !this.state.VIS_MUTUALISEE\n                      })\n                    }\n                    checked={this.state.VIS_MUTUALISEE}\n                  />\n                </Form.Group>\n                <Form.Group widths=\"equal\">\n                  <DateInput\n                    label=\"Date de la visite\"\n                    name=\"date\"\n                    placeholder=\"Date de la visite\"\n                    required\n                    value={this.state.VIS_DATE}\n                    iconPosition=\"right\"\n                    onChange={(event, { value }) =>\n                      this.setState({ VIS_DATE: value })\n                    }\n                  />\n                </Form.Group>\n                <EntrepriseField\n                  ETOB_SIRET={this.state.ETOB_SIRET}\n                  ETOB_RAISON_SOCIALE={this.state.ETOB_RAISON_SOCIALE}\n                  changeSiretValue={ETOB_SIRET => this.setState({ ETOB_SIRET })}\n                  changeRaisonSocialeValue={ETOB_RAISON_SOCIALE =>\n                    this.setState({ ETOB_RAISON_SOCIALE })\n                  }\n                  changeEtabIdentValue={ETOB_IDENT =>\n                    this.setState({ ETOB_IDENT })\n                  }\n                />\n                {this.displayTrame()}\n                <Form.Group>\n                  <Form.Field width={16}>\n                    <TextArea\n                      placeholder=\"Observations\"\n                      onChange={e =>\n                        this.setState({ VIS_OBSERVATIONS: e.target.value })\n                      }\n                      value={this.state.VIS_OBSERVATIONS}\n                    />\n                  </Form.Field>\n                </Form.Group>\n              </Form>\n              <ControleComponent\n                dossier={{\n                  id: this.state.DOSSIER_IDENT,\n                  text: this.state.dossierText\n                }}\n                controles={this.state.controlesList}\n                changeControle={controlesList =>\n                  this.setState({ controlesList })\n                }\n              />\n              <Button style={{ marginTop: '20px' }} onClick={this.onSubmit}>\n                Valider\n              </Button>\n            </GridColumn>\n          </GridRow>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nCreateVisiteComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired,\n  agentIdent: PropTypes.number.isRequired,\n  history: PropTypes.any,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      dossierId: PropTypes.string,\n      visiteId: PropTypes.string\n    })\n  })\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateVisiteComponent);\n"]},"metadata":{},"sourceType":"module"}