{"ast":null,"code":"import _objectSpread from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/trameCreation.container.js\";\nimport React from 'react';\nimport { Form, Grid, GridRow, GridColumn, Icon } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport { changeNameOfPage, changeBackUrl, changeActivePage } from '../navbar/actions';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: () => dispatch(changeNameOfPage('CrÃ©ation de trame')),\n    changeBackUrl: () => dispatch(changeBackUrl('/nouvelle-visite')),\n    changeActivePage: () => dispatch(changeActivePage('mesDossiers', '/creation-trame'))\n  };\n}\n\nclass TrameCreationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.changeNameOfPage();\n    this.props.changeBackUrl();\n    this.props.changeActivePage();\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      centered: true,\n      style: {\n        width: '100%',\n        height: '80%',\n        margin: 0,\n        marginTop: '2em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '80%',\n        height: '100%',\n        padding: '2em',\n        border: '1px solid black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        height: '90%',\n        overflowY: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(GridRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Mes Taches\")), this.state.taskList.map((taskItem, taskIndex) => React.createElement(GridRow, {\n      key: taskItem,\n      style: {\n        width: '100%',\n        display: 'flex',\n        padding: '0',\n        margin: '1em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(GridColumn, {\n      width: 14,\n      style: {\n        width: '100%',\n        margin: 0,\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"Intitul\\xE9\",\n      style: {\n        width: '100%'\n      },\n      onChange: (e, {\n        value\n      }) => {\n        let newTasks = this.state.taskList.map((el, i) => i === taskIndex ? _objectSpread({}, el, {\n          title: value\n        }) : el);\n        this.setState({\n          taskList: newTasks\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(GridColumn, {\n      width: 1,\n      style: {\n        padding: 0,\n        marginLeft: '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      color: \"red\",\n      name: \"minus\",\n      size: \"big\",\n      style: {\n        cursor: 'pointer',\n        verticalAlign: 'top',\n        padding: '0.2em'\n      },\n      width: 1,\n      onClick: () => {\n        let newTasks = this.state.taskList.filter((el, i) => i !== taskIndex);\n        this.setState({\n          taskList: newTasks\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))))), React.createElement(Grid.Row, {\n      height: 1,\n      style: {\n        width: '100%',\n        textAlign: 'center',\n        marginTop: '0.5em',\n        cursor: 'pointer'\n      },\n      onClick: () => {\n        let newTasks = this.state.taskList.map(el => el);\n        newTasks.push({\n          title: undefined\n        });\n        this.setState({\n          taskList: newTasks\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"circle plus\",\n      size: \"big\",\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nTrameCreationComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TrameCreationComponent);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/trameCreation.container.js"],"names":["React","Form","Grid","GridRow","GridColumn","Icon","PropTypes","changeNameOfPage","changeBackUrl","changeActivePage","connect","mapStateToProps","mapDispatchToProps","dispatch","TrameCreationComponent","Component","constructor","props","state","taskList","componentDidMount","render","width","height","margin","marginTop","padding","border","overflowY","map","taskItem","taskIndex","display","e","value","newTasks","el","i","title","setState","marginLeft","cursor","verticalAlign","filter","textAlign","push","undefined","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Grid, GridRow, GridColumn, Icon } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport {\n  changeNameOfPage,\n  changeBackUrl,\n  changeActivePage\n} from '../navbar/actions';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: () => dispatch(changeNameOfPage('CrÃ©ation de trame')),\n    changeBackUrl: () => dispatch(changeBackUrl('/nouvelle-visite')),\n    changeActivePage: () =>\n      dispatch(changeActivePage('mesDossiers', '/creation-trame'))\n  };\n}\n\nclass TrameCreationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: []\n    };\n  }\n  componentDidMount() {\n    this.props.changeNameOfPage();\n    this.props.changeBackUrl();\n    this.props.changeActivePage();\n  }\n\n  render() {\n    return (\n      <Grid\n        centered\n        style={{ width: '100%', height: '80%', margin: 0, marginTop: '2em' }}\n      >\n        <div\n          style={{\n            width: '80%',\n            height: '100%',\n            padding: '2em',\n            border: '1px solid black'\n          }}\n        >\n          <div style={{ height: '90%', overflowY: 'auto' }}>\n            <GridRow>\n              <h2>Mes Taches</h2>\n            </GridRow>\n\n            {this.state.taskList.map((taskItem, taskIndex) => (\n              <GridRow\n                key={taskItem}\n                style={{\n                  width: '100%',\n                  display: 'flex',\n                  padding: '0',\n                  margin: '1em'\n                }}\n              >\n                <GridColumn\n                  width={14}\n                  style={{ width: '100%', margin: 0, padding: 0 }}\n                >\n                  <Form.Input\n                    placeholder=\"IntitulÃ©\"\n                    style={{ width: '100%' }}\n                    onChange={(e, { value }) => {\n                      let newTasks = this.state.taskList.map((el, i) =>\n                        i === taskIndex ? { ...el, title: value } : el\n                      );\n                      this.setState({ taskList: newTasks });\n                    }}\n                  />\n                </GridColumn>\n                <GridColumn width={1} style={{ padding: 0, marginLeft: '0' }}>\n                  <Icon\n                    color=\"red\"\n                    name=\"minus\"\n                    size=\"big\"\n                    style={{\n                      cursor: 'pointer',\n                      verticalAlign: 'top',\n                      padding: '0.2em'\n                    }}\n                    width={1}\n                    onClick={() => {\n                      let newTasks = this.state.taskList.filter(\n                        (el, i) => i !== taskIndex\n                      );\n                      this.setState({ taskList: newTasks });\n                    }}\n                  />\n                </GridColumn>\n              </GridRow>\n            ))}\n          </div>\n          <Grid.Row\n            height={1}\n            style={{\n              width: '100%',\n              textAlign: 'center',\n              marginTop: '0.5em',\n              cursor: 'pointer'\n            }}\n            onClick={() => {\n              let newTasks = this.state.taskList.map(el => el);\n              newTasks.push({ title: undefined });\n              this.setState({ taskList: newTasks });\n            }}\n          >\n            <Icon name=\"circle plus\" size=\"big\" color=\"green\" />\n          </Grid.Row>\n        </div>\n      </Grid>\n    );\n  }\n}\n\nTrameCreationComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrameCreationComponent);\n"]},"metadata":{},"sourceType":"module"}