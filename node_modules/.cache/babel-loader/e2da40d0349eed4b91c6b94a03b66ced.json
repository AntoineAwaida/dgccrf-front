{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport PouchDB from 'pouchdb';\nvar db = new PouchDB('my_database');\nvar remoteCouch = 'http://user:pass@127.0.0.1:5984/test';\nvar opts = {\n  live: true\n};\ndb.replicate.to(remoteCouch, opts, console.log);\ndb.replicate.from(remoteCouch, opts, console.log);\n\nfunction sync() {\n  syncDom.setAttribute('data-sync-state', 'syncing');\n  var opts = {\n    live: true\n  };\n  db.replicate.to(remoteCouch, opts, syncError);\n  db.replicate.from(remoteCouch, opts, syncError);\n}\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      list: []\n    };\n    db.changes({\n      since: 'now',\n      live: true\n    }).on('change', this.updateTodos.bind(this));\n  }\n\n  updateTodos() {\n    db.allDocs({\n      include_docs: true,\n      descending: true\n    }, (err, doc) => {\n      this.setState({\n        list: doc.rows\n      });\n    });\n  }\n\n  addTodo(text) {\n    var todo = {\n      _id: new Date().toISOString(),\n      title: text,\n      completed: false\n    };\n    db.put(todo, function callback(err, result) {\n      if (!err) {\n        console.log('Successfully posted a todo!');\n      }\n    });\n  }\n\n  getTodos() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: e => this.setState({\n        text: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.addTodo(this.state.text),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Ajouter\"), React.createElement(\"button\", {\n      onClick: () => this.getTodos(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"refresh\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, JSON.stringify(this.state.list)));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/App.js"],"names":["React","PouchDB","db","remoteCouch","opts","live","replicate","to","console","log","from","sync","syncDom","setAttribute","syncError","App","Component","constructor","props","state","text","list","changes","since","on","updateTodos","bind","allDocs","include_docs","descending","err","doc","setState","rows","addTodo","todo","_id","Date","toISOString","title","completed","put","callback","result","getTodos","render","e","target","value","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PouchDB from 'pouchdb';\nvar db = new PouchDB('my_database');\nvar remoteCouch = 'http://user:pass@127.0.0.1:5984/test';\nvar opts = {live: true};\ndb.replicate.to(remoteCouch, opts, console.log);\ndb.replicate.from(remoteCouch, opts, console.log);\n\nfunction sync() {\n  syncDom.setAttribute('data-sync-state', 'syncing');\n  var opts = {live: true};\n  db.replicate.to(remoteCouch, opts, syncError);\n  db.replicate.from(remoteCouch, opts, syncError);\n}\n\n\nexport class App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      text : '',\n      list:[]\n    }\n    db.changes({\n      since: 'now',\n      live: true\n    }).on('change', this.updateTodos.bind(this));\n  }\n\n  updateTodos(){\n    db.allDocs({include_docs: true, descending: true}, (err, doc) => {\n      this.setState({list:doc.rows});\n    });\n  }\n\n  addTodo(text) {\n    var todo = {\n      _id: new Date().toISOString(),\n      title: text,\n      completed: false\n    };\n    db.put(todo, function callback(err, result) {\n      if (!err) {\n        console.log('Successfully posted a todo!');\n      }\n    });\n  }\n\n  getTodos(){\n\n  }\n  \n  render() {\n    return (\n      <div>\n        <input onChange = {(e)=>this.setState({text:e.target.value})} /> \n        <button onClick={()=>this.addTodo(this.state.text)}>Ajouter</button>\n        <button onClick={()=>this.getTodos()}>refresh</button>\n        <div>\n          {JSON.stringify(this.state.list)}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}