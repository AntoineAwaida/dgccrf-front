{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport PouchDB from 'pouchdb';\nvar db = new PouchDB('my_database');\nvar remoteCouch = 'http://Admin:pass@127.0.0.1:5984/test';\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      user: '',\n      list: []\n    };\n    db.changes({\n      since: 'now',\n      live: true\n    }).on('change', this.updateTodos.bind(this));\n    var opts = {\n      live: true,\n      filter: doc => console.log(doc)\n    };\n    db.replicate.to(remoteCouch, opts, console.log);\n    db.replicate.from(remoteCouch, opts, console.log);\n    this.checkShouldSync = this.checkShouldSync.bind(this);\n  }\n\n  checkShouldSync(doc) {\n    return doc.user === this.state.user;\n  }\n\n  updateTodos() {\n    db.allDocs({\n      include_docs: true,\n      descending: true\n    }, (err, doc) => {\n      this.setState({\n        list: doc.rows\n      });\n    });\n  }\n\n  addTodo(text) {\n    var todo = {\n      _id: new Date().toISOString(),\n      text: text,\n      user: false\n    };\n    db.put(todo, function callback(err, result) {\n      if (!err) {\n        console.log('Successfully posted a todo!');\n      }\n    });\n  }\n\n  getTodos() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: e => this.setState({\n        user: e.target.value\n      }),\n      placeholder: \"User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: e => this.setState({\n        text: e.target.value\n      }),\n      placeholder: \"Text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.addTodo(this.state.text, this.state.user),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Ajouter\"), React.createElement(\"button\", {\n      onClick: () => this.getTodos(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"refresh\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, JSON.stringify(this.state.list)));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/App.js"],"names":["React","PouchDB","db","remoteCouch","App","Component","constructor","props","state","text","user","list","changes","since","live","on","updateTodos","bind","opts","filter","doc","console","log","replicate","to","from","checkShouldSync","allDocs","include_docs","descending","err","setState","rows","addTodo","todo","_id","Date","toISOString","put","callback","result","getTodos","render","e","target","value","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PouchDB from 'pouchdb';\nvar db = new PouchDB('my_database');\nvar remoteCouch = 'http://Admin:pass@127.0.0.1:5984/test';\n\n\n\nexport class App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      text : '',\n      user : '',\n      list:[]\n    }\n    db.changes({\n      since: 'now',\n      live: true\n    }).on('change', this.updateTodos.bind(this));\n\n    var opts = {live: true, filter: (doc) =>console.log(doc) };\n    db.replicate.to(remoteCouch, opts, console.log);\n    db.replicate.from(remoteCouch, opts, console.log);\n\n    this.checkShouldSync = this.checkShouldSync.bind(this);\n  }\n\n  checkShouldSync(doc){\n    return doc.user === this.state.user\n  }\n\n  updateTodos(){\n    db.allDocs({include_docs: true, descending: true}, (err, doc) => {\n      this.setState({list:doc.rows});\n    });\n  }\n\n  addTodo(text) {\n    var todo = {\n      _id: new Date().toISOString(),\n      text: text,\n      user: false\n    };\n    db.put(todo, function callback(err, result) {\n      if (!err) {\n        console.log('Successfully posted a todo!');\n      }\n    });\n  }\n\n  getTodos(){\n\n  }\n  \n  render() {\n    return (\n      <div>\n        <input onChange = {(e)=>this.setState({user:e.target.value})} placeholder=\"User\"/> \n        <input onChange = {(e)=>this.setState({text:e.target.value})} placeholder=\"Text\"/> \n        <button onClick={()=>this.addTodo(this.state.text,this.state.user)}>Ajouter</button>\n        <button onClick={()=>this.getTodos()}>refresh</button>\n        <div>\n          {JSON.stringify(this.state.list)}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}