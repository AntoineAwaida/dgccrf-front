{"ast":null,"code":"import PouchDB from 'pouchdb';\nimport config from '../config';\n\nclass pouchDbService {\n  constructor(pouchDbUrl) {\n    this.db = new PouchDB('mes-dossiers');\n    var opts = {\n      live: true,\n      retry: true\n    };\n    this.db.replicate.to(pouchDbUrl, opts);\n    this.db.replicate.from(pouchDbUrl, opts);\n  } //call the callback on db changes\n\n\n  onChanges(cb) {\n    this.db.changes({\n      since: 'now',\n      live: true\n    }).on('change', cb);\n  } //getAllDocsOfTheDB\n\n\n  getAllDocs() {\n    return this.db.allDocs({\n      include_docs: true,\n      descending: true\n    }).then(table => table.rows.map(item => item.doc));\n  }\n\n}\n\nexport default new pouchDbService(config.couchDb.url_dossiers);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/services/PouchDB.service.js"],"names":["PouchDB","config","pouchDbService","constructor","pouchDbUrl","db","opts","live","retry","replicate","to","from","onChanges","cb","changes","since","on","getAllDocs","allDocs","include_docs","descending","then","table","rows","map","item","doc","couchDb","url_dossiers"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKC,EAAL,GAAU,IAAIL,OAAJ,CAAY,cAAZ,CAAV;AACA,QAAIM,IAAI,GAAG;AACPC,MAAAA,IAAI,EAAE,IADC;AACKC,MAAAA,KAAK,EAAE;AADZ,KAAX;AAGA,SAAKH,EAAL,CAAQI,SAAR,CAAkBC,EAAlB,CAAqBN,UAArB,EAAiCE,IAAjC;AACA,SAAKD,EAAL,CAAQI,SAAR,CAAkBE,IAAlB,CAAuBP,UAAvB,EAAmCE,IAAnC;AACH,GARgB,CAUjB;;;AACAM,EAAAA,SAAS,CAACC,EAAD,EAAK;AACV,SAAKR,EAAL,CAAQS,OAAR,CAAgB;AACZC,MAAAA,KAAK,EAAE,KADK;AAEZR,MAAAA,IAAI,EAAE;AAFM,KAAhB,EAGGS,EAHH,CAGM,QAHN,EAGgBH,EAHhB;AAIH,GAhBgB,CAkBjB;;;AACAI,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKZ,EAAL,CAAQa,OAAR,CAAgB;AAAEC,MAAAA,YAAY,EAAE,IAAhB;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KAAhB,EACFC,IADE,CACGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAeC,IAAI,IAAIA,IAAI,CAACC,GAA5B,CADZ,CAAP;AAEH;;AAtBgB;;AA0BrB,eAAe,IAAIxB,cAAJ,CAAmBD,MAAM,CAAC0B,OAAP,CAAeC,YAAlC,CAAf","sourcesContent":["import PouchDB from 'pouchdb';\nimport config from '../config';\n\nclass pouchDbService {\n    constructor(pouchDbUrl) {\n        this.db = new PouchDB('mes-dossiers');\n        var opts = {\n            live: true, retry: true,\n        };\n        this.db.replicate.to(pouchDbUrl, opts);\n        this.db.replicate.from(pouchDbUrl, opts);\n    }\n\n    //call the callback on db changes\n    onChanges(cb) {\n        this.db.changes({\n            since: 'now',\n            live: true\n        }).on('change', cb);\n    }\n\n    //getAllDocsOfTheDB\n    getAllDocs() {\n        return this.db.allDocs({ include_docs: true, descending: true })\n            .then(table => table.rows.map(item => item.doc));\n    }\n\n}\n\nexport default new pouchDbService(config.couchDb.url_dossiers);"]},"metadata":{},"sourceType":"module"}