{"ast":null,"code":"import _objectSpread from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/trameCreation.container.js\";\nimport React from 'react';\nimport { Form, Grid, GridRow, GridColumn, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nexport default class TrameCreationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: []\n    };\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      centered: true,\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        marginTop: \"2em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80%\",\n        height: \"100%\",\n        padding: \"2.5em\",\n        border: '1px solid black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(GridRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Mes Taches\")), this.state.taskList.map((taskItem, taskIndex) => React.createElement(GridRow, {\n      key: taskItem,\n      style: {\n        width: \"100%\",\n        display: \"flex\",\n        padding: \"0\",\n        margin: \"1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(GridColumn, {\n      width: 14,\n      style: {\n        width: \"100%\",\n        margin: 0,\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"Intitul\\xE9\",\n      style: {\n        width: \"100%\"\n      },\n      onChange: (e, {\n        value\n      }) => {\n        let newTasks = this.state.taskList.map((el, i) => i === taskIndex ? _objectSpread({}, el, {\n          title: value\n        }) : el);\n        this.setState({\n          taskList: newTasks\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(GridColumn, {\n      width: 1,\n      style: {\n        padding: 0,\n        marginLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      color: \"red\",\n      name: \"minus\",\n      size: \"big\",\n      style: {\n        cursor: \"pointer\",\n        verticalAlign: \"top\",\n        padding: \"0.2em\"\n      },\n      width: 1,\n      onClick: () => {\n        let newTasks = this.state.taskList.filter((el, i) => i !== taskIndex);\n        this.setState({\n          taskList: newTasks\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })))), React.createElement(Grid.Row, {\n      height: 1,\n      style: {\n        width: \"100%\",\n        textAlign: \"center\",\n        marginTop: \"0.5em\",\n        cursor: \"pointer\"\n      },\n      onClick: () => {\n        let newTasks = this.state.taskList.map(el => el);\n        newTasks.push({\n          title: undefined\n        });\n        this.setState({\n          taskList: newTasks\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"circle plus\",\n      size: \"big\",\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/trameCreation.container.js"],"names":["React","Form","Grid","GridRow","GridColumn","Icon","Link","TrameCreationComponent","Component","constructor","props","state","taskList","render","width","height","marginTop","padding","border","map","taskItem","taskIndex","display","margin","e","value","newTasks","el","i","title","setState","marginLeft","cursor","verticalAlign","filter","textAlign","push","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Grid, GridRow, GridColumn, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nexport default class TrameCreationComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            taskList: []\n        }\n    }\n\n    render() {\n        return (\n            <Grid centered style={{ width: \"100%\", height: \"100%\", marginTop: \"2em\" }}>\n                <div style={{ width: \"80%\", height: \"100%\", padding: \"2.5em\", border: '1px solid black' }}>\n\n                    <GridRow >\n                        <h2>\n                            Mes Taches\n                        </h2>\n                    </GridRow>\n\n                    {\n                        this.state.taskList.map((taskItem, taskIndex) => (\n\n                            <GridRow key={taskItem}\n                                style={{ width: \"100%\", display: \"flex\", padding: \"0\", margin: \"1em\" }}>\n                                <GridColumn width={14} style={{ width: \"100%\", margin: 0, padding: 0 }} >\n\n                                    <Form.Input placeholder=\"IntitulÃ©\"\n                                        style={{ width: \"100%\" }} onChange={(e, { value }) => {\n                                            let newTasks = this.state.taskList.map((el, i) => i === taskIndex ? { ...el, title: value } : el);\n                                            this.setState({ taskList: newTasks })\n                                        }}\n                                    />\n\n                                </GridColumn>\n                                <GridColumn width={1} style={{ padding: 0, marginLeft: \"0\" }}\n                                >\n\n                                    <Icon color=\"red\" name=\"minus\" size=\"big\"\n                                        style={{ cursor: \"pointer\", verticalAlign: \"top\", padding: \"0.2em\" }}\n                                        width={1}\n\n                                        onClick={() => {\n                                            let newTasks = this.state.taskList.filter((el, i) => i !== taskIndex);\n                                            this.setState({ taskList: newTasks })\n                                        }} />\n\n                                </GridColumn>\n                            </GridRow>\n                        )\n                        )}\n                    <Grid.Row\n                        height={1}\n                        style={{ width: \"100%\", textAlign: \"center\", marginTop: \"0.5em\", cursor: \"pointer\" }}\n                        onClick={() => {\n                            let newTasks = this.state.taskList.map(el => el);\n                            newTasks.push({ title: undefined });\n                            this.setState({ taskList: newTasks })\n                        }}>\n\n                        <Icon name=\"circle plus\" size=\"big\" color=\"green\" />\n\n                    </Grid.Row>\n                </div>\n            </Grid>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}