{"ast":null,"code":"import PouchDB from 'pouchdb';\nimport PouchDBFind from 'pouchdb-find';\nimport config from '../../config';\nPouchDB.plugin(PouchDBFind);\n\nclass ActiviteService {\n  constructor() {\n    let pouchDbUrl = config.couchDb.url_activite;\n    this.db = new PouchDB('activite');\n    var opts = {\n      batch_size: 1000,\n      live: true,\n      retry: true\n    };\n    this.db.replicate.from(pouchDbUrl, opts);\n\n    this.resetDb = () => undefined; // no need to reset activite\n\n  } //getAllDocsOfTheDB\n\n\n  getAllDocs() {\n    return this.db.allDocs({\n      include_docs: true,\n      descending: true\n    }).then(table => table.rows.map(item => item.doc).filter(item => !(item._id.split('/')[0] == '_design')));\n  }\n\n}\n\nexport default ActiviteService;","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/services/subservices/activite.service.js"],"names":["PouchDB","PouchDBFind","config","plugin","ActiviteService","constructor","pouchDbUrl","couchDb","url_activite","db","opts","batch_size","live","retry","replicate","from","resetDb","undefined","getAllDocs","allDocs","include_docs","descending","then","table","rows","map","item","doc","filter","_id","split"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEAF,OAAO,CAACG,MAAR,CAAeF,WAAf;;AACA,MAAMG,eAAN,CAAsB;AAClBC,EAAAA,WAAW,GAAG;AACV,QAAIC,UAAU,GAAGJ,MAAM,CAACK,OAAP,CAAeC,YAAhC;AACA,SAAKC,EAAL,GAAU,IAAIT,OAAJ,CAAY,UAAZ,CAAV;AACA,QAAIU,IAAI,GAAG;AACPC,MAAAA,UAAU,EAAE,IADL;AAEPC,MAAAA,IAAI,EAAE,IAFC;AAGPC,MAAAA,KAAK,EAAE;AAHA,KAAX;AAMA,SAAKJ,EAAL,CAAQK,SAAR,CAAkBC,IAAlB,CAAuBT,UAAvB,EAAmCI,IAAnC;;AACA,SAAKM,OAAL,GAAe,MAAMC,SAArB,CAVU,CAUsB;;AACnC,GAZiB,CAclB;;;AACAC,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKT,EAAL,CACFU,OADE,CACM;AAAEC,MAAAA,YAAY,EAAE,IAAhB;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KADN,EAEFC,IAFE,CAEGC,KAAK,IACPA,KAAK,CAACC,IAAN,CACKC,GADL,CACSC,IAAI,IAAIA,IAAI,CAACC,GADtB,EAEKC,MAFL,CAEYF,IAAI,IAAI,EAAEA,IAAI,CAACG,GAAL,CAASC,KAAT,CAAe,GAAf,EAAoB,CAApB,KAA0B,SAA5B,CAFpB,CAHD,CAAP;AAOH;;AAvBiB;;AA0BtB,eAAe1B,eAAf","sourcesContent":["import PouchDB from 'pouchdb';\nimport PouchDBFind from 'pouchdb-find';\nimport config from '../../config';\n\nPouchDB.plugin(PouchDBFind);\nclass ActiviteService {\n    constructor() {\n        let pouchDbUrl = config.couchDb.url_activite;\n        this.db = new PouchDB('activite');\n        var opts = {\n            batch_size: 1000,\n            live: true,\n            retry: true,\n        };\n\n        this.db.replicate.from(pouchDbUrl, opts)\n        this.resetDb = () => undefined; // no need to reset activite\n    }\n\n    //getAllDocsOfTheDB\n    getAllDocs() {\n        return this.db\n            .allDocs({ include_docs: true, descending: true })\n            .then(table =>\n                table.rows\n                    .map(item => item.doc)\n                    .filter(item => !(item._id.split('/')[0] == '_design'))\n            );\n    }\n}\n\nexport default ActiviteService;\n"]},"metadata":{},"sourceType":"module"}