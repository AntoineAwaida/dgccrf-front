{"ast":null,"code":"import _objectSpread from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visiteCreation/singleControle.container.js\";\nimport React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport DossierField from '../../components/fields/dossierField.component';\nimport StadeField from '../../components/fields/stadeField.component';\nimport CodesField from '../../components/fields/codes.component';\nexport default class SingleControleComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (props.controle) {\n      this.state = {\n        controle: _objectSpread({}, props.controle, {\n          DOSSIER_IDENT: props.controle.DOSSIER_IDENT,\n          dossierText: props.controle.dossierText,\n          TAPR_IDENT: props.controle.TAPR_IDENT,\n          tacheText: props.controle.tacheText,\n          ACDG_IDENT: props.controle.ACDG_IDENT,\n          activiteText: props.controle.ACDG_CODE_LIB_NIVEAU3,\n          CPF_IDENT: props.controle.CPF_IDENT,\n          STADE_PRODUIT_IDENT: props.controle.STADE_PRODUIT_IDENT,\n          ident: props.controle.ident\n        })\n      };\n    } else {\n      this.state = {\n        controle: {\n          DOSSIER_IDENT: parseInt(this.props.dossier.id),\n          dossierText: this.props.dossier.text,\n          TAPR_IDENT: 0,\n          tacheText: '',\n          ACDG_IDENT: 0,\n          activiteText: '',\n          CPF_IDENT: 0,\n          STADE_PRODUIT_IDENT: -1\n        }\n      };\n    }\n  }\n\n  render() {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(DossierField, {\n      dossierChange: (value, text) => this.setState({\n        controle: _objectSpread({}, this.state.controle, {\n          DOSSIER_IDENT: value,\n          dossierText: text\n        })\n      }),\n      tacheChange: (value, text) => this.setState({\n        controle: _objectSpread({}, this.state.controle, {\n          TAPR_IDENT: value,\n          tacheText: text\n        })\n      }),\n      DOSSIER_IDENT: this.state.controle.DOSSIER_IDENT,\n      TAPR_IDENT: this.state.controle.TAPR_IDENT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(CodesField, {\n      activiteChange: (e, data) => this.setState({\n        controle: _objectSpread({}, this.state.controle, {\n          ACDG_IDENT: data.value,\n          activiteText: e.currentTarget.innerText\n        })\n      }),\n      cpfChange: (e, data) => {\n        this.setState({\n          controle: _objectSpread({}, this.state.controle, {\n            CPF_IDENT: data.value\n          })\n        });\n      },\n      ACDG_IDENT: this.state.controle.ACDG_IDENT,\n      CPF_IDENT: this.state.controle.CPF_IDENT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(StadeField, {\n      onChange: (e, data) => this.setState({\n        controle: _objectSpread({}, this.state.controle, {\n          STADE_PRODUIT_IDENT: data.value\n        })\n      }),\n      STADE_PRODUIT_IDENT: this.state.controle.STADE_PRODUIT_IDENT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Form.Button, {\n      onClick: () => this.props.onSubmit(this.state.controle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Valider\"));\n  }\n\n}\nSingleControleComponent.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  dossier: PropTypes.shape({\n    id: PropTypes.number,\n    text: PropTypes.string\n  }),\n  controle: PropTypes.any\n};","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visiteCreation/singleControle.container.js"],"names":["React","Form","PropTypes","DossierField","StadeField","CodesField","SingleControleComponent","Component","constructor","props","controle","state","DOSSIER_IDENT","dossierText","TAPR_IDENT","tacheText","ACDG_IDENT","activiteText","ACDG_CODE_LIB_NIVEAU3","CPF_IDENT","STADE_PRODUIT_IDENT","ident","parseInt","dossier","id","text","render","value","setState","e","data","currentTarget","innerText","onSubmit","propTypes","func","isRequired","shape","number","string","any"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport DossierField from '../../components/fields/dossierField.component';\nimport StadeField from '../../components/fields/stadeField.component';\nimport CodesField from '../../components/fields/codes.component';\n\nexport default class SingleControleComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    if (props.controle) {\n      this.state = {\n        controle: {\n          ...props.controle,\n          DOSSIER_IDENT: props.controle.DOSSIER_IDENT,\n          dossierText: props.controle.dossierText,\n          TAPR_IDENT: props.controle.TAPR_IDENT,\n          tacheText: props.controle.tacheText,\n          ACDG_IDENT: props.controle.ACDG_IDENT,\n          activiteText: props.controle.ACDG_CODE_LIB_NIVEAU3,\n          CPF_IDENT: props.controle.CPF_IDENT,\n          STADE_PRODUIT_IDENT: props.controle.STADE_PRODUIT_IDENT,\n          ident: props.controle.ident\n        }\n      };\n    } else {\n      this.state = {\n        controle: {\n          DOSSIER_IDENT: parseInt(this.props.dossier.id),\n          dossierText: this.props.dossier.text,\n          TAPR_IDENT: 0,\n          tacheText: '',\n          ACDG_IDENT: 0,\n          activiteText: '',\n          CPF_IDENT: 0,\n          STADE_PRODUIT_IDENT: -1\n        }\n      };\n    }\n  }\n\n  render() {\n    return (\n      <Form>\n        <DossierField\n          dossierChange={(value, text) =>\n            this.setState({\n              controle: {\n                ...this.state.controle,\n                DOSSIER_IDENT: value,\n                dossierText: text\n              }\n            })\n          }\n          tacheChange={(value, text) =>\n            this.setState({\n              controle: {\n                ...this.state.controle,\n                TAPR_IDENT: value,\n                tacheText: text\n              }\n            })\n          }\n          DOSSIER_IDENT={this.state.controle.DOSSIER_IDENT}\n          TAPR_IDENT={this.state.controle.TAPR_IDENT}\n        />\n        <CodesField\n          activiteChange={(e, data) =>\n            this.setState({\n              controle: {\n                ...this.state.controle,\n                ACDG_IDENT: data.value,\n                activiteText: e.currentTarget.innerText\n              }\n            })\n          }\n          cpfChange={(e, data) => {\n            this.setState({\n              controle: {\n                ...this.state.controle,\n                CPF_IDENT: data.value\n              }\n            });\n          }}\n          ACDG_IDENT={this.state.controle.ACDG_IDENT}\n          CPF_IDENT={this.state.controle.CPF_IDENT}\n        />\n        <StadeField\n          onChange={(e, data) =>\n            this.setState({\n              controle: {\n                ...this.state.controle,\n                STADE_PRODUIT_IDENT: data.value\n              }\n            })\n          }\n          STADE_PRODUIT_IDENT={this.state.controle.STADE_PRODUIT_IDENT}\n        />\n        <Form.Button onClick={() => this.props.onSubmit(this.state.controle)}>\n          Valider\n        </Form.Button>\n      </Form>\n    );\n  }\n}\n\nSingleControleComponent.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  dossier: PropTypes.shape({\n    id: PropTypes.number,\n    text: PropTypes.string\n  }),\n  controle: PropTypes.any\n};\n"]},"metadata":{},"sourceType":"module"}