{"ast":null,"code":"import _objectSpread from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/components/visites/formModal.component.js\";\nimport { Modal, Step, Container, Button, Form, TextArea, List, Icon } from 'semantic-ui-react';\nimport React, { useState } from 'react';\nimport { DateTimeInput } from 'semantic-ui-calendar-react';\nimport PropTypes, { array } from 'prop-types';\nimport PVGenerator from './Forms/PVGenerator';\nimport moment from 'moment';\nimport 'moment/locale/fr';\nimport Signature from './Forms/Signature';\nimport useWindowDimensions from '../useWindowDimensions';\nimport PDFGenerator from './Forms/PDFGenerator';\n\nfunction FormModal(props) {\n  const _useWindowDimensions = useWindowDimensions(),\n        height = _useWindowDimensions.height,\n        width = _useWindowDimensions.width;\n\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        step = _useState2[0],\n        setstep = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pv = _useState4[0],\n        setpv = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        document = _useState6[0],\n        setdocument = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        signature = _useState8[0],\n        setsignature = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        signatureinteresse = _useState10[0],\n        setsignatureinteresse = _useState10[1];\n\n  const _useState11 = useState({\n    documents: [],\n    lieu: '',\n    // à remplir automatiquement\n    nameResponsible: '',\n    //à remplir automatiquement\n    date: moment().format('DD-MM-YYYY HH:mm')\n  }),\n        _useState12 = _slicedToArray(_useState11, 2),\n        informationForm = _useState12[0],\n        setinformationForm = _useState12[1];\n\n  function setStep1(pv) {\n    setpv(pv);\n    setstep(2);\n  }\n\n  function setStep2() {\n    setstep(3);\n  }\n\n  function setStep3() {\n    if (window.confirm(\"Je certifie que les informations de ce procès-verbal sont exactes et je m'apprête à le signer et le faire signer.\")) {\n      setstep(4);\n    }\n  }\n\n  function setStep4(signature, signatureInteresse) {\n    setsignature(signature);\n    setsignatureinteresse(signatureInteresse);\n    setstep(5);\n  }\n\n  function addDocument() {\n    setinformationForm(_objectSpread({}, informationForm, {\n      documents: [...informationForm.documents, document]\n    }));\n    setdocument('');\n  }\n\n  function removeDocument(i) {\n    setinformationForm(_objectSpread({}, informationForm, {\n      documents: informationForm.documents.filter((item, index) => {\n        return index !== i;\n      })\n    }));\n  }\n\n  return React.createElement(Modal, {\n    closeIcon: true,\n    open: props.opened,\n    onClose: () => {\n      props.close();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Remplir un PV\"), React.createElement(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Container, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Step.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Step, {\n    onClick: () => setstep(1),\n    active: step === 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Step.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Step.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Choix du PV\"))), React.createElement(Step, {\n    onClick: () => setstep(2),\n    active: step === 2,\n    disabled: step < 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Step.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Step.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \" Informations \"))), React.createElement(Step, {\n    onClick: () => setstep(3),\n    active: step === 3,\n    disabled: step < 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Step.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Step.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \" Pr\\xE9visualisation \"))), React.createElement(Step, {\n    onClick: () => setstep(4),\n    active: step === 4,\n    disabled: step < 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Step.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Step.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \" Signature \"))), React.createElement(Step, {\n    onClick: () => setstep(5),\n    active: step === 5,\n    disabled: step < 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Step.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Step.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \" Termin\\xE9! \"))))), React.createElement(\"div\", {\n    style: {\n      marginTop: 30,\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, step === 1 ? React.createElement(Button.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      padding: 20\n    },\n    onClick: () => setStep1('audition'),\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"PV d'audition\"), React.createElement(Button, {\n    style: {\n      padding: 20\n    },\n    onClick: () => setStep1('déclaration'),\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"PV de d\\xE9claration\")) : step === 2 ? React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Nom et grade de l'enqu\\xEAteur\"), React.createElement(\"input\", {\n    value: informationForm.name,\n    onChange: e => setinformationForm(_objectSpread({}, informationForm, {\n      name: e.target.value\n    })),\n    placeholder: \"Nom de l'enqu\\xEAteur\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(DateTimeInput, {\n    label: \"Date et heure\",\n    name: \"date\",\n    placeholder: \"Date de la visite\",\n    required: true,\n    value: informationForm.date,\n    onChange: (event, {\n      value\n    }) => setinformationForm(_objectSpread({}, informationForm, {\n      date: value\n    })),\n    iconPosition: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"Lieu\"), React.createElement(\"input\", {\n    value: informationForm.place,\n    onChange: e => setinformationForm(_objectSpread({}, informationForm, {\n      place: e.target.value\n    })),\n    placeholder: \"Lieu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Repr\\xE9sentant de l'entreprise\"), React.createElement(\"input\", {\n    value: informationForm.nameResponsible,\n    onChange: e => setinformationForm(_objectSpread({}, informationForm, {\n      nameResponsible: e.target.value\n    })),\n    placeholder: \"Responsable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"Qualit\\xE9 repr\\xE9sentant de l'entreprise\"), React.createElement(\"input\", {\n    value: informationForm.quality,\n    onChange: e => setinformationForm(_objectSpread({}, informationForm, {\n      quality: e.target.value\n    })),\n    placeholder: \"Qualit\\xE9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"D\\xE9claration\"), React.createElement(TextArea, {\n    value: informationForm.declaration,\n    onChange: e => setinformationForm(_objectSpread({}, informationForm, {\n      declaration: e.target.value\n    })),\n    placeholder: \"D\\xE9claration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, \"Liste Documents\"), React.createElement(List, {\n    as: \"ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, informationForm.documents.length > 0 && informationForm.documents.map((document, i) => React.createElement(List.Item, {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, document, React.createElement(List.Content, {\n    onClick: () => removeDocument(i),\n    verticalAlign: \"middle\",\n    floated: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    color: \"red\",\n    name: \"times circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      flex: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"Ajouter un document\"), React.createElement(\"input\", {\n    value: document,\n    onChange: e => setdocument(e.target.value),\n    placeholder: \"Ajouter un document\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      flex: 2,\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end',\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"teal\",\n    icon: true,\n    onClick: () => addDocument(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setStep2(),\n    type: \"submit\",\n    disabled: !informationForm.declaration || !informationForm.quality || !informationForm.place || !informationForm.date || !informationForm.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, \"Valider\"))) : step === 3 ? React.createElement(React.Fragment, null, React.createElement(PVGenerator, {\n    width: width,\n    height: height,\n    date: moment(informationForm.date, 'DD-MM-YYYY HH:mm').format('LL'),\n    hour: moment(informationForm.date, 'DD-MM-YYYY HH:mm').format('LT'),\n    name: informationForm.name,\n    lieu: informationForm.place,\n    quality: informationForm.quality,\n    nameResponsible: informationForm.nameResponsible,\n    declaration: informationForm.declaration,\n    documents: informationForm.documents,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"red\",\n    onClick: () => setStep3(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, \"Valider et signer\"))) : step === 4 ? React.createElement(Signature, {\n    setStep4: setStep4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }) : React.createElement(PDFGenerator, {\n    width: width,\n    height: height,\n    date: moment(informationForm.date, 'DD-MM-YYYY hh:mm').format('LL'),\n    hour: moment(informationForm.date, 'DD-MM-YYYY hh:mm').format('LT'),\n    visiteid: props.visite.VISITE_IDENT,\n    pv: pv,\n    name: informationForm.name,\n    lieu: informationForm.place,\n    quality: informationForm.quality,\n    nameResponsible: informationForm.nameResponsible,\n    declaration: informationForm.declaration,\n    documents: informationForm.documents,\n    signature: signature,\n    signatureInteresse: signatureinteresse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  })))));\n}\n\nFormModal.propTypes = {\n  opened: PropTypes.bool,\n  close: PropTypes.func,\n  document: PropTypes.object\n};\nexport default FormModal;","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/components/visites/formModal.component.js"],"names":["Modal","Step","Container","Button","Form","TextArea","List","Icon","React","useState","DateTimeInput","PropTypes","array","PVGenerator","moment","Signature","useWindowDimensions","PDFGenerator","FormModal","props","height","width","step","setstep","pv","setpv","document","setdocument","signature","setsignature","signatureinteresse","setsignatureinteresse","documents","lieu","nameResponsible","date","format","informationForm","setinformationForm","setStep1","setStep2","setStep3","window","confirm","setStep4","signatureInteresse","addDocument","removeDocument","i","filter","item","index","opened","close","display","justifyContent","flexDirection","alignItems","marginTop","padding","name","e","target","value","event","place","quality","declaration","length","map","flex","visite","VISITE_IDENT","propTypes","bool","func","object"],"mappings":"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","sourcesContent":["import {\n  Modal,\n  Step,\n  Container,\n  Button,\n  Form,\n  TextArea,\n  List,\n  Icon\n} from 'semantic-ui-react';\nimport React, { useState } from 'react';\n\nimport { DateTimeInput } from 'semantic-ui-calendar-react';\n\nimport PropTypes, { array } from 'prop-types';\nimport PVGenerator from './Forms/PVGenerator';\nimport moment from 'moment';\nimport 'moment/locale/fr';\nimport Signature from './Forms/Signature';\nimport useWindowDimensions from '../useWindowDimensions';\nimport PDFGenerator from './Forms/PDFGenerator';\nfunction FormModal(props) {\n  const { height, width } = useWindowDimensions();\n  const [step, setstep] = useState(1);\n\n  const [pv, setpv] = useState(null);\n\n  const [document, setdocument] = useState('');\n\n  const [signature, setsignature] = useState(null);\n\n  const [signatureinteresse, setsignatureinteresse] = useState(null);\n\n  const [informationForm, setinformationForm] = useState({\n    documents: [],\n    lieu: '', // à remplir automatiquement\n    nameResponsible: '', //à remplir automatiquement\n    date: moment().format('DD-MM-YYYY HH:mm')\n  });\n\n  function setStep1(pv) {\n    setpv(pv);\n    setstep(2);\n  }\n\n  function setStep2() {\n    setstep(3);\n  }\n\n  function setStep3() {\n    if (\n      window.confirm(\n        \"Je certifie que les informations de ce procès-verbal sont exactes et je m'apprête à le signer et le faire signer.\"\n      )\n    ) {\n      setstep(4);\n    }\n  }\n\n  function setStep4(signature, signatureInteresse) {\n    setsignature(signature);\n    setsignatureinteresse(signatureInteresse);\n    setstep(5);\n  }\n\n  function addDocument() {\n    setinformationForm({\n      ...informationForm,\n      documents: [...informationForm.documents, document]\n    });\n    setdocument('');\n  }\n\n  function removeDocument(i) {\n    setinformationForm({\n      ...informationForm,\n      documents: informationForm.documents.filter((item, index) => {\n        return index !== i;\n      })\n    });\n  }\n\n  return (\n    <Modal\n      closeIcon={true}\n      open={props.opened}\n      onClose={() => {\n        props.close();\n      }}\n    >\n      <Modal.Header>Remplir un PV</Modal.Header>\n\n      <Modal.Content>\n        <Container\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            alignItems: 'center'\n          }}\n        >\n          <div>\n            <Step.Group>\n              <Step onClick={() => setstep(1)} active={step === 1}>\n                <Step.Content>\n                  <Step.Title>Choix du PV</Step.Title>\n                </Step.Content>\n              </Step>\n\n              <Step\n                onClick={() => setstep(2)}\n                active={step === 2}\n                disabled={step < 2}\n              >\n                <Step.Content>\n                  <Step.Title> Informations </Step.Title>\n                </Step.Content>\n              </Step>\n\n              <Step\n                onClick={() => setstep(3)}\n                active={step === 3}\n                disabled={step < 3}\n              >\n                <Step.Content>\n                  <Step.Title> Prévisualisation </Step.Title>\n                </Step.Content>\n              </Step>\n              <Step\n                onClick={() => setstep(4)}\n                active={step === 4}\n                disabled={step < 4}\n              >\n                <Step.Content>\n                  <Step.Title> Signature </Step.Title>\n                </Step.Content>\n              </Step>\n              <Step\n                onClick={() => setstep(5)}\n                active={step === 5}\n                disabled={step < 5}\n              >\n                <Step.Content>\n                  <Step.Title> Terminé! </Step.Title>\n                </Step.Content>\n              </Step>\n            </Step.Group>\n          </div>\n          <div\n            style={{\n              marginTop: 30,\n              width: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              flexDirection: 'column'\n            }}\n          >\n            {step === 1 ? (\n              <Button.Group>\n                <Button\n                  style={{ padding: 20 }}\n                  onClick={() => setStep1('audition')}\n                  color=\"blue\"\n                >\n                  PV d'audition\n                </Button>\n\n                <Button\n                  style={{ padding: 20 }}\n                  onClick={() => setStep1('déclaration')}\n                  color=\"red\"\n                >\n                  PV de déclaration\n                </Button>\n              </Button.Group>\n            ) : step === 2 ? (\n              <Form>\n                <Form.Field required>\n                  <label>Nom et grade de l'enquêteur</label>\n                  <input\n                    value={informationForm.name}\n                    onChange={e =>\n                      setinformationForm({\n                        ...informationForm,\n                        name: e.target.value\n                      })\n                    }\n                    placeholder=\"Nom de l'enquêteur\"\n                  ></input>\n                </Form.Field>\n                <Form.Field>\n                  <DateTimeInput\n                    label=\"Date et heure\"\n                    name=\"date\"\n                    placeholder=\"Date de la visite\"\n                    required\n                    value={informationForm.date}\n                    onChange={(event, { value }) =>\n                      setinformationForm({ ...informationForm, date: value })\n                    }\n                    iconPosition=\"right\"\n                  />\n                </Form.Field>\n                <Form.Field required>\n                  <label>Lieu</label>\n                  <input\n                    value={informationForm.place}\n                    onChange={e =>\n                      setinformationForm({\n                        ...informationForm,\n                        place: e.target.value\n                      })\n                    }\n                    placeholder=\"Lieu\"\n                  ></input>\n                </Form.Field>\n                <Form.Field required>\n                  <label>Représentant de l'entreprise</label>\n                  <input\n                    value={informationForm.nameResponsible}\n                    onChange={e =>\n                      setinformationForm({\n                        ...informationForm,\n                        nameResponsible: e.target.value\n                      })\n                    }\n                    placeholder=\"Responsable\"\n                  ></input>\n                </Form.Field>\n                <Form.Field required>\n                  <label>Qualité représentant de l'entreprise</label>\n                  <input\n                    value={informationForm.quality}\n                    onChange={e =>\n                      setinformationForm({\n                        ...informationForm,\n                        quality: e.target.value\n                      })\n                    }\n                    placeholder=\"Qualité\"\n                  ></input>\n                </Form.Field>\n                <Form.Field required>\n                  <label>Déclaration</label>\n                  <TextArea\n                    value={informationForm.declaration}\n                    onChange={e =>\n                      setinformationForm({\n                        ...informationForm,\n                        declaration: e.target.value\n                      })\n                    }\n                    placeholder=\"Déclaration\"\n                  />\n                </Form.Field>\n                <Form.Field required>\n                  <label>Liste Documents</label>\n                  <List as=\"ul\">\n                    {informationForm.documents.length > 0 &&\n                      informationForm.documents.map((document, i) => (\n                        <List.Item key={i}>\n                          {document}\n\n                          <List.Content\n                            onClick={() => removeDocument(i)}\n                            verticalAlign=\"middle\"\n                            floated=\"right\"\n                          >\n                            <Icon color=\"red\" name=\"times circle\"></Icon>\n                          </List.Content>\n                        </List.Item>\n                      ))}\n                  </List>\n                  <div style={{ display: 'flex' }}>\n                    <div style={{ flex: 8 }}>\n                      <label>Ajouter un document</label>\n                      <input\n                        value={document}\n                        onChange={e => setdocument(e.target.value)}\n                        placeholder=\"Ajouter un document\"\n                      ></input>\n                    </div>\n                    <div\n                      style={{\n                        flex: 2,\n                        justifyContent: 'flex-end',\n                        alignItems: 'flex-end',\n                        display: 'flex'\n                      }}\n                    >\n                      <Button color=\"teal\" icon onClick={() => addDocument()}>\n                        <Icon name=\"add\"></Icon>\n                      </Button>\n                    </div>\n                  </div>\n                </Form.Field>\n                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                  <Button\n                    onClick={() => setStep2()}\n                    type=\"submit\"\n                    disabled={\n                      !informationForm.declaration ||\n                      !informationForm.quality ||\n                      !informationForm.place ||\n                      !informationForm.date ||\n                      !informationForm.name\n                    }\n                  >\n                    Valider\n                  </Button>\n                </div>\n              </Form>\n            ) : step === 3 ? (\n              <>\n                <PVGenerator\n                  width={width}\n                  height={height}\n                  date={moment(informationForm.date, 'DD-MM-YYYY HH:mm').format(\n                    'LL'\n                  )}\n                  hour={moment(informationForm.date, 'DD-MM-YYYY HH:mm').format(\n                    'LT'\n                  )}\n                  name={informationForm.name}\n                  lieu={informationForm.place}\n                  quality={informationForm.quality}\n                  nameResponsible={informationForm.nameResponsible}\n                  declaration={informationForm.declaration}\n                  documents={informationForm.documents}\n                />\n                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                  <Button color=\"red\" onClick={() => setStep3()}>\n                    Valider et signer\n                  </Button>\n                </div>\n              </>\n            ) : step === 4 ? (\n              <Signature setStep4={setStep4} />\n            ) : (\n              <PDFGenerator\n                width={width}\n                height={height}\n                date={moment(informationForm.date, 'DD-MM-YYYY hh:mm').format(\n                  'LL'\n                )}\n                hour={moment(informationForm.date, 'DD-MM-YYYY hh:mm').format(\n                  'LT'\n                )}\n                visiteid={props.visite.VISITE_IDENT}\n                pv={pv}\n                name={informationForm.name}\n                lieu={informationForm.place}\n                quality={informationForm.quality}\n                nameResponsible={informationForm.nameResponsible}\n                declaration={informationForm.declaration}\n                documents={informationForm.documents}\n                signature={signature}\n                signatureInteresse={signatureinteresse}\n              />\n            )}\n          </div>\n        </Container>\n      </Modal.Content>\n    </Modal>\n  );\n}\n\nFormModal.propTypes = {\n  opened: PropTypes.bool,\n  close: PropTypes.func,\n  document: PropTypes.object\n};\n\nexport default FormModal;\n"]},"metadata":{},"sourceType":"module"}