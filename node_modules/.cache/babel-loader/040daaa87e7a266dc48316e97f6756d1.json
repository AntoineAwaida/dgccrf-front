{"ast":null,"code":"import _slicedToArray from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/trameCreation.container.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  border: 1px solid lightgrey;\\n  border-radius: 2px;\\n  padding: 8px;\\n  margin-bottom: 8px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Container, Button, Input, Icon, List, Segment } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport { changeNameOfPage, changeBackUrl, changeActivePage } from '../../navbar/actions';\nimport { connect } from 'react-redux';\nimport { Tabs, Tab } from '@material-ui/core';\nimport TrameComponent from './trame';\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nconst MyContainer = styled.div(_templateObject());\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: () => dispatch(changeNameOfPage('Création de trame')),\n    changeBackUrl: () => dispatch(changeBackUrl('/nouvelle-visite')),\n    changeActivePage: () => dispatch(changeActivePage('mesDossiers', '/creation-trame'))\n  };\n}\n\nclass TrameCreationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onDragEnd = result => {\n      const destination = result.destination,\n            source = result.source,\n            draggableId = result.draggableId;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const res = Array.from(this.state.taskList);\n\n      const _res$splice = res.splice(result.source.index, 1),\n            _res$splice2 = _slicedToArray(_res$splice, 1),\n            removed = _res$splice2[0];\n\n      res.splice(result.destination.index, 0, removed);\n      this.setState({\n        taskList: res\n      });\n    };\n\n    this.state = {\n      taskList: [],\n      index: 0,\n      id: 0\n    };\n    this.validateName = this.validateName.bind(this);\n    this.changeType = this.changeType.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.changeNameOfPage();\n    this.props.changeBackUrl();\n    this.props.changeActivePage();\n  }\n\n  validateName(task, name) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.title = name;\n      }\n\n      return t;\n    });\n    this.setState({\n      taskList\n    });\n  }\n\n  changeType(task, type) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.type = type;\n      }\n\n      return t;\n    });\n    this.setState({\n      taskList\n    });\n  }\n\n  addTask() {\n    //de 3 types: basic, text, ou document.\n    this.setState({\n      taskList: [...this.state.taskList, {\n        title: 'Nouvelle tâche' + this.state.index,\n        type: 'basic',\n        innerContent: null,\n        index: this.state.index,\n        id: this.state.id\n      }],\n      index: this.state.index + 1,\n      id: this.state.id + 1\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"hidescrollbar\",\n      style: {\n        display: 'flex',\n        height: '100%',\n        width: '100%',\n        backgroundColor: '#f2f2f2',\n        overflow: 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        justifyContent: 'center',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        overflow: 'hidden',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'fixed',\n        zIndex: 10,\n        width: '100%',\n        backgroundColor: '#f2f2f2',\n        display: 'flex',\n        justifyContent: 'center',\n        padding: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"teal\",\n      icon: true,\n      onClick: () => this.addTask(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        flex: 10,\n        overflowY: 'auto',\n        marginTop: 80,\n        width: '100%'\n      },\n      className: \"hidescrollbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(TrameComponent, {\n      validateName: this.validateName,\n      taskList: this.state.taskList,\n      changeType: this.changeType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), provided.placeholder))))))));\n  }\n\n}\n\nTrameCreationComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TrameCreationComponent);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/trameCreation.container.js"],"names":["React","Container","Button","Input","Icon","List","Segment","PropTypes","changeNameOfPage","changeBackUrl","changeActivePage","connect","Tabs","Tab","TrameComponent","styled","DragDropContext","Droppable","Draggable","MyContainer","div","mapStateToProps","mapDispatchToProps","dispatch","TrameCreationComponent","Component","constructor","props","onDragEnd","result","destination","source","draggableId","droppableId","index","res","Array","from","state","taskList","splice","removed","setState","id","validateName","bind","changeType","componentDidMount","task","name","filter","t","title","type","addTask","innerContent","render","display","height","width","backgroundColor","overflow","justifyContent","textAlign","flexDirection","alignItems","position","zIndex","padding","flex","overflowY","marginTop","provided","innerRef","droppableProps","placeholder","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Container,\n  Button,\n  Input,\n  Icon,\n  List,\n  Segment\n} from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport {\n  changeNameOfPage,\n  changeBackUrl,\n  changeActivePage\n} from '../../navbar/actions';\nimport { connect } from 'react-redux';\nimport { Tabs, Tab } from '@material-ui/core';\nimport TrameComponent from './trame';\n\nimport styled from 'styled-components';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst MyContainer = styled.div`\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n  padding: 8px;\n  margin-bottom: 8px;\n`;\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: () => dispatch(changeNameOfPage('Création de trame')),\n    changeBackUrl: () => dispatch(changeBackUrl('/nouvelle-visite')),\n    changeActivePage: () =>\n      dispatch(changeActivePage('mesDossiers', '/creation-trame'))\n  };\n}\n\nclass TrameCreationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: [],\n      index: 0,\n      id: 0\n    };\n    this.validateName = this.validateName.bind(this);\n    this.changeType = this.changeType.bind(this);\n  }\n  componentDidMount() {\n    this.props.changeNameOfPage();\n    this.props.changeBackUrl();\n    this.props.changeActivePage();\n  }\n\n  validateName(task, name) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.title = name;\n      }\n\n      return t;\n    });\n\n    this.setState({ taskList });\n  }\n\n  changeType(task, type) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.type = type;\n      }\n\n      return t;\n    });\n\n    this.setState({ taskList });\n  }\n\n  addTask() {\n    //de 3 types: basic, text, ou document.\n    this.setState({\n      taskList: [\n        ...this.state.taskList,\n        {\n          title: 'Nouvelle tâche' + this.state.index,\n          type: 'basic',\n          innerContent: null,\n          index: this.state.index,\n          id: this.state.id\n        }\n      ],\n      index: this.state.index + 1,\n      id: this.state.id + 1\n    });\n  }\n\n  onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const res = Array.from(this.state.taskList);\n\n    const [removed] = res.splice(result.source.index, 1);\n    res.splice(result.destination.index, 0, removed);\n\n    this.setState({ taskList: res });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"hidescrollbar\"\n        style={{\n          display: 'flex',\n          height: '100%',\n          width: '100%',\n\n          backgroundColor: '#f2f2f2',\n          overflow: 'hidden'\n        }}\n      >\n        <div\n          style={{\n            width: '100%',\n            justifyContent: 'center',\n            textAlign: 'center'\n          }}\n        >\n          <Container style={{ height: '100%' }}>\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                overflow: 'hidden',\n                height: '100%'\n              }}\n            >\n              <div\n                style={{\n                  position: 'fixed',\n                  zIndex: 10,\n                  width: '100%',\n                  backgroundColor: '#f2f2f2',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  padding: 20\n                }}\n              >\n                <div>\n                  <Button color=\"teal\" icon onClick={() => this.addTask()}>\n                    <Icon name=\"plus\" color=\"white\"></Icon>\n                  </Button>\n                </div>\n\n                {/* <Tabs\n                  value={this.state.activeIndex}\n                  fullWidth\n                  onChange={this.handleChange}\n                >\n                  <Tab label=\"Avant\" />\n                  <Tab label=\"Pendant\" />\n                  <Tab label=\"Après\" />\n                </Tabs> */}\n              </div>\n              <div\n                style={{\n                  flex: 10,\n                  overflowY: 'auto',\n                  marginTop: 80,\n\n                  width: '100%'\n                }}\n                className=\"hidescrollbar\"\n              >\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                  <Droppable droppableId=\"droppable\">\n                    {provided => (\n                      <div ref={provided.innerRef} {...provided.droppableProps}>\n                        <TrameComponent\n                          validateName={this.validateName}\n                          taskList={this.state.taskList}\n                          changeType={this.changeType}\n                        />\n                        {provided.placeholder}\n                      </div>\n                    )}\n                  </Droppable>\n                </DragDropContext>\n              </div>\n            </div>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nTrameCreationComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrameCreationComponent);\n"]},"metadata":{},"sourceType":"module"}