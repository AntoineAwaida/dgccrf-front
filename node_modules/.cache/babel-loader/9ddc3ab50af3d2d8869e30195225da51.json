{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/entreprise/entrepriseSearch.container.js\";\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-undef */\nimport React from 'react';\nimport _ from 'lodash';\nimport { Grid, Search, Container } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { changeNameOfPage, changeBackUrl } from '../navbar/actions';\nimport { connect } from 'react-redux';\nconst source = [{\n  id: 1,\n  siret: '43425495900035',\n  raisonSociale: 'Sadaka',\n  enseigne: 'Le Salon',\n  naf: \"Commerce de gros (commerce interentreprises) d'autres biens domestiques\",\n  adresse: '27 rue des étuves',\n  ville: 'Montpellier',\n  codePostal: '34000'\n}, {\n  id: 2,\n  siret: '4342523848300035',\n  raisonSociale: 'Roger',\n  enseigne: 'Chez Tonton Coiffeur',\n  naf: \"Commerce de gros (commerce interentreprises) d'autres biens domestiques\",\n  adresse: '5 rue Charles de Gaulle',\n  ville: 'Asnières',\n  codePostal: '92600'\n}];\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: newName => dispatch(changeNameOfPage(newName)),\n    changeBackUrl: newBackUrl => dispatch(changeBackUrl(newBackUrl))\n  };\n}\n\nclass EntrepriseSearch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.raisonSociale) || re.test(result.enseigne) || re.test(result.siret);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(source, isMatch)\n        });\n      }, 300);\n    };\n\n    this.state = {\n      isLoading: false,\n      results: [],\n      value: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.changeNameOfPage('Établissements');\n    this.props.changeBackUrl('/menu');\n  }\n\n  renderResults({\n    id,\n    raisonSociale,\n    enseigne,\n    siret\n  }) {\n    return React.createElement(Container, {\n      fluid: true,\n      as: Link,\n      to: '/etablissement/' + id,\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        fontWeight: 'bold'\n      },\n      width: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Enseigne :\", ' '), React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, enseigne)), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        fontWeight: 'bold'\n      },\n      width: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Raison Sociale :\", ' '), React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, raisonSociale)), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        fontWeight: 'bold'\n      },\n      width: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Siret :\", ' '), React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, siret))));\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        marginTop: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      only: \"tablet computer\",\n      width: 5,\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Rechercher :\")), React.createElement(Grid.Column, {\n      tablet: 11,\n      mobile: 16,\n      computer: 11,\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Search, {\n      fluid: true,\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value,\n      resultRenderer: this.renderResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nEntrepriseSearch.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EntrepriseSearch);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/entreprise/entrepriseSearch.container.js"],"names":["React","_","Grid","Search","Container","Link","PropTypes","changeNameOfPage","changeBackUrl","connect","source","id","siret","raisonSociale","enseigne","naf","adresse","ville","codePostal","initialState","isLoading","results","value","mapStateToProps","mapDispatchToProps","dispatch","newName","newBackUrl","EntrepriseSearch","Component","constructor","props","handleResultSelect","e","result","setState","title","handleSearchChange","setTimeout","state","length","re","RegExp","escapeRegExp","isMatch","test","filter","componentDidMount","renderResults","color","fontWeight","render","marginTop","debounce","leading","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\nimport React from 'react';\nimport _ from 'lodash';\nimport { Grid, Search, Container } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { changeNameOfPage, changeBackUrl } from '../navbar/actions';\nimport { connect } from 'react-redux';\n\nconst source = [\n  {\n    id: 1,\n    siret: '43425495900035',\n    raisonSociale: 'Sadaka',\n    enseigne: 'Le Salon',\n    naf:\n      \"Commerce de gros (commerce interentreprises) d'autres biens domestiques\",\n    adresse: '27 rue des étuves',\n    ville: 'Montpellier',\n    codePostal: '34000'\n  },\n  {\n    id: 2,\n    siret: '4342523848300035',\n    raisonSociale: 'Roger',\n    enseigne: 'Chez Tonton Coiffeur',\n    naf:\n      \"Commerce de gros (commerce interentreprises) d'autres biens domestiques\",\n    adresse: '5 rue Charles de Gaulle',\n    ville: 'Asnières',\n    codePostal: '92600'\n  }\n];\n\nconst initialState = { isLoading: false, results: [], value: '' };\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: newName => dispatch(changeNameOfPage(newName)),\n    changeBackUrl: newBackUrl => dispatch(changeBackUrl(newBackUrl))\n  };\n}\n\nclass EntrepriseSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      results: [],\n      value: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.changeNameOfPage('Établissements');\n    this.props.changeBackUrl('/menu');\n  }\n\n  handleResultSelect = (e, { result }) =>\n    this.setState({ value: result.title });\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value });\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(initialState);\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n      const isMatch = result =>\n        re.test(result.raisonSociale) ||\n        re.test(result.enseigne) ||\n        re.test(result.siret);\n      this.setState({\n        isLoading: false,\n        results: _.filter(source, isMatch)\n      });\n    }, 300);\n  };\n  renderResults({ id, raisonSociale, enseigne, siret }) {\n    return (\n      <Container\n        fluid\n        as={Link}\n        to={'/etablissement/' + id}\n        style={{ color: 'black' }}\n      >\n        <Grid>\n          <Grid.Row>\n            <Grid.Column style={{ fontWeight: 'bold' }} width={7}>\n              Enseigne :{' '}\n            </Grid.Column>\n            <Grid.Column width={8}>{enseigne}</Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column style={{ fontWeight: 'bold' }} width={7}>\n              Raison Sociale :{' '}\n            </Grid.Column>\n            <Grid.Column width={8}>{raisonSociale}</Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column style={{ fontWeight: 'bold' }} width={7}>\n              Siret :{' '}\n            </Grid.Column>\n            <Grid.Column width={8}>{siret}</Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    );\n  }\n\n  render() {\n    const { isLoading, value, results } = this.state;\n\n    return (\n      <Container>\n        <Grid style={{ marginTop: '1rem' }}>\n          <Grid.Column only=\"tablet computer\" width={5} verticalAlign=\"middle\">\n            <span style={{ fontWeight: 'bold' }}>Rechercher :</span>\n          </Grid.Column>\n          <Grid.Column tablet={11} mobile={16} computer={11} textAlign=\"center\">\n            <Search\n              fluid\n              loading={isLoading}\n              onResultSelect={this.handleResultSelect}\n              onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                leading: true\n              })}\n              results={results}\n              value={value}\n              resultRenderer={this.renderResults}\n            />\n          </Grid.Column>\n        </Grid>\n      </Container>\n    );\n  }\n}\nEntrepriseSearch.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EntrepriseSearch);\n"]},"metadata":{},"sourceType":"module"}