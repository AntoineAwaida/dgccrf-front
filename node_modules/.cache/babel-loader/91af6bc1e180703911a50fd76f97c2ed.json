{"ast":null,"code":"import _objectSpread from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/trameCreation.container.js\";\nimport React from 'react';\nimport { Form, Grid, GridRow, GridColumn, Icon } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport { changeNameOfPage, changeBackUrl } from '../navbar/actions';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: newName => dispatch(changeNameOfPage(newName)),\n    changeBackUrl: newBackUrl => dispatch(changeBackUrl(newBackUrl))\n  };\n}\n\nclass TrameCreationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.changeNameOfPage('CrÃ©ation de trame');\n    this.props.changeBackUrl('/nouvelle-visite');\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      centered: true,\n      style: {\n        width: \"100%\",\n        height: \"80%\",\n        margin: 0,\n        marginTop: \"2em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80%\",\n        height: \"100%\",\n        padding: \"2em\",\n        border: '1px solid black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        height: \"90%\",\n        overflowY: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(GridRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Mes Taches\")), this.state.taskList.map((taskItem, taskIndex) => React.createElement(GridRow, {\n      key: taskItem,\n      style: {\n        width: \"100%\",\n        display: \"flex\",\n        padding: \"0\",\n        margin: \"1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(GridColumn, {\n      width: 14,\n      style: {\n        width: \"100%\",\n        margin: 0,\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"Intitul\\xE9\",\n      style: {\n        width: \"100%\"\n      },\n      onChange: (e, {\n        value\n      }) => {\n        let newTasks = this.state.taskList.map((el, i) => i === taskIndex ? _objectSpread({}, el, {\n          title: value\n        }) : el);\n        this.setState({\n          taskList: newTasks\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(GridColumn, {\n      width: 1,\n      style: {\n        padding: 0,\n        marginLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      color: \"red\",\n      name: \"minus\",\n      size: \"big\",\n      style: {\n        cursor: \"pointer\",\n        verticalAlign: \"top\",\n        padding: \"0.2em\"\n      },\n      width: 1,\n      onClick: () => {\n        let newTasks = this.state.taskList.filter((el, i) => i !== taskIndex);\n        this.setState({\n          taskList: newTasks\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))))), React.createElement(Grid.Row, {\n      height: 1,\n      style: {\n        width: \"100%\",\n        textAlign: \"center\",\n        marginTop: \"0.5em\",\n        cursor: \"pointer\"\n      },\n      onClick: () => {\n        let newTasks = this.state.taskList.map(el => el);\n        newTasks.push({\n          title: undefined\n        });\n        this.setState({\n          taskList: newTasks\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"circle plus\",\n      size: \"big\",\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nTrameCreationComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TrameCreationComponent);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/trameCreation.container.js"],"names":["React","Form","Grid","GridRow","GridColumn","Icon","PropTypes","changeNameOfPage","changeBackUrl","connect","mapStateToProps","mapDispatchToProps","dispatch","newName","newBackUrl","TrameCreationComponent","Component","constructor","props","state","taskList","componentDidMount","render","width","height","margin","marginTop","padding","border","overflowY","map","taskItem","taskIndex","display","e","value","newTasks","el","i","title","setState","marginLeft","cursor","verticalAlign","filter","textAlign","push","undefined","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Grid, GridRow, GridColumn, Icon } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport { changeNameOfPage, changeBackUrl } from '../navbar/actions';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps() {\n    return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeNameOfPage: newName => dispatch(changeNameOfPage(newName)),\n        changeBackUrl: newBackUrl => dispatch(changeBackUrl(newBackUrl))\n    };\n}\n\nclass TrameCreationComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            taskList: []\n        };\n    }\n    componentDidMount() {\n        this.props.changeNameOfPage('CrÃ©ation de trame');\n        this.props.changeBackUrl('/nouvelle-visite');\n    }\n\n    render() {\n        return (\n            <Grid centered style={{ width: \"100%\", height: \"80%\", margin: 0, marginTop: \"2em\" }}>\n                <div style={{ width: \"80%\", height: \"100%\", padding: \"2em\", border: '1px solid black' }}>\n                    <div style={{ height: \"90%\", overflowY: \"auto\" }} >\n                        <GridRow >\n                            <h2>\n                                Mes Taches\n                        </h2>\n                        </GridRow>\n\n                        {\n                            this.state.taskList.map((taskItem, taskIndex) => (\n\n                                <GridRow key={taskItem}\n                                    style={{ width: \"100%\", display: \"flex\", padding: \"0\", margin: \"1em\" }}>\n                                    <GridColumn width={14} style={{ width: \"100%\", margin: 0, padding: 0 }} >\n\n                                        <Form.Input placeholder=\"IntitulÃ©\"\n                                            style={{ width: \"100%\" }} onChange={(e, { value }) => {\n                                                let newTasks = this.state.taskList.map((el, i) => i === taskIndex ? { ...el, title: value } : el);\n                                                this.setState({ taskList: newTasks })\n                                            }}\n                                        />\n\n                                    </GridColumn>\n                                    <GridColumn width={1} style={{ padding: 0, marginLeft: \"0\" }}\n                                    >\n\n                                        <Icon color=\"red\" name=\"minus\" size=\"big\"\n                                            style={{ cursor: \"pointer\", verticalAlign: \"top\", padding: \"0.2em\" }}\n                                            width={1}\n\n                                            onClick={() => {\n                                                let newTasks = this.state.taskList.filter((el, i) => i !== taskIndex);\n                                                this.setState({ taskList: newTasks })\n                                            }} />\n\n                                    </GridColumn>\n                                </GridRow>\n                            )\n                            )}\n                    </div>\n                    <Grid.Row\n                        height={1}\n                        style={{ width: \"100%\", textAlign: \"center\", marginTop: \"0.5em\", cursor: \"pointer\" }}\n                        onClick={() => {\n                            let newTasks = this.state.taskList.map(el => el);\n                            newTasks.push({ title: undefined });\n                            this.setState({ taskList: newTasks })\n                        }}>\n\n                        <Icon name=\"circle plus\" size=\"big\" color=\"green\" />\n\n                    </Grid.Row>\n                </div>\n            </Grid>\n        )\n    }\n}\n\nTrameCreationComponent.propTypes = {\n    changeNameOfPage: PropTypes.func.isRequired,\n    changeBackUrl: PropTypes.func.isRequired\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TrameCreationComponent);\n"]},"metadata":{},"sourceType":"module"}