{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/components/fields/codes.component.js\";\nimport React from 'react';\nimport { Form, Select } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport PouchDbServices from '../../services';\nlet activiteService = PouchDbServices.services.activite;\nlet cpfService = PouchDbServices.services.cpf;\nexport default class CodesField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activites: [],\n      cpf: []\n    };\n  }\n\n  loadActivites(activites) {\n    const newActivites = activites.filter(activite => activite.ACDG_ENQUETE_FLAG === 1).map(activite => {\n      return {\n        key: activite.ACDG_IDENT,\n        text: activite.ACDG_CODE_LIB_NIVEAU3,\n        value: activite.ACDG_IDENT\n      };\n    });\n    this.setState({\n      activites: newActivites\n    });\n  }\n\n  loadCpf(cpf) {\n    const newcpf = cpf.map(cpf => {\n      return {\n        key: cpf.CPF_IDENT,\n        text: cpf.CPF_CODE_LIBELLE,\n        value: cpf.CPF_IDENT\n      };\n    });\n    this.setState({\n      cpf: newcpf\n    });\n  }\n\n  componentDidMount() {\n    activiteService.getAllDocs().then(res => this.loadActivites(res));\n    cpfService.getAllDocs().then(res => this.loadCpf(res));\n  }\n\n  render() {\n    return React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      required: true,\n      control: Select,\n      options: this.state.activites,\n      label: \"Code DG\",\n      placeholder: \"Code DG\",\n      search: true,\n      defaultValue: this.props.activite,\n      onChange: this.props.activiteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      required: true,\n      control: Select,\n      options: this.state.cpf,\n      label: \"Code CPF\",\n      placeholder: \"Code CPF\",\n      search: true,\n      defaultValue: this.props.cpf,\n      onChange: this.props.cpfChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\nCodesField.propTypes = {\n  activiteChange: PropTypes.func.isRequired,\n  cpfChange: PropTypes.func.isRequired,\n  activite: PropTypes.number.isRequired,\n  cpf: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/components/fields/codes.component.js"],"names":["React","Form","Select","PropTypes","PouchDbServices","activiteService","services","activite","cpfService","cpf","CodesField","Component","constructor","props","state","activites","loadActivites","newActivites","filter","ACDG_ENQUETE_FLAG","map","key","ACDG_IDENT","text","ACDG_CODE_LIB_NIVEAU3","value","setState","loadCpf","newcpf","CPF_IDENT","CPF_CODE_LIBELLE","componentDidMount","getAllDocs","then","res","render","activiteChange","cpfChange","propTypes","func","isRequired","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Select } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport PouchDbServices from '../../services';\nlet activiteService = PouchDbServices.services.activite;\nlet cpfService = PouchDbServices.services.cpf;\n\nexport default class CodesField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activites: [],\n      cpf: []\n    };\n  }\n  loadActivites(activites) {\n    const newActivites = activites\n      .filter(activite => activite.ACDG_ENQUETE_FLAG === 1)\n      .map(activite => {\n        return {\n          key: activite.ACDG_IDENT,\n          text: activite.ACDG_CODE_LIB_NIVEAU3,\n          value: activite.ACDG_IDENT\n        };\n      });\n    this.setState({ activites: newActivites });\n  }\n  loadCpf(cpf) {\n    const newcpf = cpf.map(cpf => {\n      return {\n        key: cpf.CPF_IDENT,\n        text: cpf.CPF_CODE_LIBELLE,\n        value: cpf.CPF_IDENT\n      };\n    });\n    this.setState({ cpf: newcpf });\n  }\n\n  componentDidMount() {\n    activiteService.getAllDocs().then(res => this.loadActivites(res));\n    cpfService.getAllDocs().then(res => this.loadCpf(res));\n  }\n\n  render() {\n    return (\n      <Form.Group widths=\"equal\">\n        <Form.Field\n          required\n          control={Select}\n          options={this.state.activites}\n          label=\"Code DG\"\n          placeholder=\"Code DG\"\n          search\n          defaultValue={this.props.activite}\n          onChange={this.props.activiteChange}\n        />\n        <Form.Field\n          required\n          control={Select}\n          options={this.state.cpf}\n          label=\"Code CPF\"\n          placeholder=\"Code CPF\"\n          search\n          defaultValue={this.props.cpf}\n          onChange={this.props.cpfChange}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nCodesField.propTypes = {\n  activiteChange: PropTypes.func.isRequired,\n  cpfChange: PropTypes.func.isRequired,\n  activite: PropTypes.number.isRequired,\n  cpf: PropTypes.number.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}