{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visite/trame/trame.container.js\";\nimport React from 'react';\nimport { Grid, List } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nexport default class DossierComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: [{\n        title: \"Contrôler les prix\",\n        status: \"done\",\n        documentToFill: null\n      }, {\n        title: \"PV de prélévement\",\n        status: \"problem\",\n        documentToFill: \"PVprelevement.pdf\"\n      }, {\n        title: \"PV de déclaration\",\n        status: \"on-progress\",\n        documentToFill: \"PVdeclaration.pdf\"\n      }]\n    };\n  }\n\n  getIconFromStatus(status) {\n    return {\n      \"done\": React.createElement(List.Icon, {\n        name: \"check\",\n        color: \"green\",\n        size: \"large\",\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }),\n      \"on-progress\": React.createElement(List.Icon, {\n        name: \"circle\",\n        color: \"orange\",\n        size: \"large\",\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }),\n      \"problem\": React.createElement(List.Icon, {\n        name: \"warning circle\",\n        color: \"red\",\n        size: \"large\",\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })\n    }[status];\n  }\n\n  render() {\n    return React.createElement(Grid.Column, {\n      style: {\n        flex: 1,\n        margin: \"1em\",\n        overflow: \"auto\",\n        border: \"solid 1px black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(List, {\n      divided: true,\n      relaxed: true,\n      style: {\n        flex: 1,\n        padding: \"1em\",\n        margin: \"1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.taskList.map(task => React.createElement(List.Item, {\n      as: Link,\n      key: task.title,\n      to: \"visite/\" + task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.getIconFromStatus(task.status), React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(List.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, task.title))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visite/trame/trame.container.js"],"names":["React","Grid","List","Link","DossierComponent","Component","constructor","props","state","taskList","title","status","documentToFill","getIconFromStatus","render","flex","margin","overflow","border","padding","map","task","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,eAAe,MAAMC,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,oBADA;AAEPC,QAAAA,MAAM,EAAE,MAFD;AAGPC,QAAAA,cAAc,EAAE;AAHT,OAAD,EAKV;AACIF,QAAAA,KAAK,EAAE,mBADX;AAEIC,QAAAA,MAAM,EAAE,SAFZ;AAGIC,QAAAA,cAAc,EAAE;AAHpB,OALU,EAUV;AACIF,QAAAA,KAAK,EAAE,mBADX;AAEIC,QAAAA,MAAM,EAAE,aAFZ;AAGIC,QAAAA,cAAc,EAAE;AAHpB,OAVU;AADD,KAAb;AAiBH;;AAEDC,EAAAA,iBAAiB,CAACF,MAAD,EAAS;AACtB,WAAO;AACH,cAAQ,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,IAAI,EAAC,OAAhB;AAAwB,QAAA,KAAK,EAAC,OAA9B;AAAsC,QAAA,IAAI,EAAC,OAA3C;AAAmD,QAAA,aAAa,EAAC,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL;AAEH,qBAAe,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,IAAI,EAAC,QAAhB;AAAyB,QAAA,KAAK,EAAC,QAA/B;AAAwC,QAAA,IAAI,EAAC,OAA7C;AAAqD,QAAA,aAAa,EAAC,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFZ;AAGH,iBAAW,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,IAAI,EAAC,gBAAhB;AAAiC,QAAA,KAAK,EAAC,KAAvC;AAA6C,QAAA,IAAI,EAAC,OAAlD;AAA0D,QAAA,aAAa,EAAC,QAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR,MAILA,MAJK,CAAP;AAKH;;AAEDG,EAAAA,MAAM,GAAG;AACL,WAEI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,MAAM,EAAE,KAAnB;AAA0BC,QAAAA,QAAQ,EAAE,MAApC;AAA4CC,QAAAA,MAAM,EAAE;AAApD,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAM,MAAA,OAAO,MAAb;AAAc,MAAA,OAAO,MAArB;AACI,MAAA,KAAK,EAAE;AAAEH,QAAAA,IAAI,EAAE,CAAR;AAAWI,QAAAA,OAAO,EAAE,KAApB;AAA2BH,QAAAA,MAAM,EAAE;AAAnC,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKR,KAAL,CAAWC,QAAX,CAAoBW,GAApB,CAAwBC,IAAI,IACzB,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,EAAE,EAAElB,IAAf;AAAqB,MAAA,GAAG,EAAEkB,IAAI,CAACX,KAA/B;AAAsC,MAAA,EAAE,EAAE,YAAYW,IAAI,CAACC,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,iBAAL,CAAuBQ,IAAI,CAACV,MAA5B,CADL,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeU,IAAI,CAACX,KAApB,CADJ,CAFJ,CADH,CAHL,CAFJ,CAFJ;AAmBH;;AAlDyD","sourcesContent":["import React from 'react';\nimport { Grid, List } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nexport default class DossierComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            taskList: [{\n                title: \"Contrôler les prix\",\n                status: \"done\",\n                documentToFill: null\n            },\n            {\n                title: \"PV de prélévement\",\n                status: \"problem\",\n                documentToFill: \"PVprelevement.pdf\"\n            },\n            {\n                title: \"PV de déclaration\",\n                status: \"on-progress\",\n                documentToFill: \"PVdeclaration.pdf\"\n            }]\n        }\n    }\n\n    getIconFromStatus(status) {\n        return {\n            \"done\": <List.Icon name=\"check\" color=\"green\" size='large' verticalAlign='middle' />,\n            \"on-progress\": <List.Icon name=\"circle\" color=\"orange\" size='large' verticalAlign='middle' />,\n            \"problem\": <List.Icon name=\"warning circle\" color=\"red\" size='large' verticalAlign='middle' />\n        }[status]\n    }\n\n    render() {\n        return (\n\n            <Grid.Column style={{ flex: 1, margin: \"1em\", overflow: \"auto\", border: \"solid 1px black\" }}>\n\n                <List divided relaxed\n                    style={{ flex: 1, padding: \"1em\", margin: \"1em\", }}\n                >\n                    {this.state.taskList.map(task => (\n                        <List.Item as={Link} key={task.title} to={\"visite/\" + task.id} >\n                            {this.getIconFromStatus(task.status)}\n                            <List.Content>\n                                <List.Header >{task.title}</List.Header>\n                            </List.Content>\n                        </List.Item>\n                    ))}\n                </List>\n            </Grid.Column>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}