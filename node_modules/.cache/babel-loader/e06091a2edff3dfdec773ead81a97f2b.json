{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar moment_1 = __importDefault(require(\"moment\"));\n\nvar React = __importStar(require(\"react\"));\n\nvar BaseInput =\n/** @class */\nfunction (_super) {\n  __extends(BaseInput, _super);\n\n  function BaseInput() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.closePopup = function () {\n      _this.setState({\n        popupIsClosed: true\n      });\n    };\n\n    _this.openPopup = function () {\n      _this.setState({\n        popupIsClosed: false\n      });\n    };\n\n    _this.isPickerInFocus = function () {\n      return document.activeElement === _this.calendarNode;\n    };\n\n    _this.isTriggerInFocus = function () {\n      return document.activeElement === _this.inputNode;\n    };\n\n    _this.onModeSwitch = function () {\n      // when using keyboard for selecting values on inline calendar\n      // and when mode switches, picker looses focus.\n      // In order to preserve focus on active picker\n      // we call focus() on `calendarNode`.\n      // `calendarNode` goes from *View component via\n      // `this.onCalendarViewMount` callback\n      if (_this.props.inline && !_this.isPickerInFocus() && _this.calendarNode) {\n        _this.calendarNode.focus();\n      }\n    };\n\n    _this.onCalendarViewMount = function (calendarNode) {\n      _this.calendarNode = calendarNode;\n    };\n\n    _this.onInputViewMount = function (inputNode) {\n      _this.inputNode = inputNode;\n    };\n\n    return _this;\n  }\n\n  BaseInput.defaultProps = {\n    inline: false,\n    localization: moment_1.default.locale()\n  };\n  return BaseInput;\n}(React.Component);\n\nexports.default = BaseInput;","map":null,"metadata":{},"sourceType":"script"}