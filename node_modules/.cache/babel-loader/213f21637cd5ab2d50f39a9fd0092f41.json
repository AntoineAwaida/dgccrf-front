{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/components/swipeTabs.component.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Tab } from 'semantic-ui-react';\nimport { Swipeable } from 'react-swipeable';\nimport './swipeTabs.css';\nimport 'react-flex/index.css';\n\nclass SwipeTabsComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0,\n      panes: props.tabs.map(({\n        menuItem,\n        component\n      }) => ({\n        menuItem,\n        render: () => React.createElement(\"div\", {\n          style: {\n            fontSize: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, component)\n      }))\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.emitter) {\n      this.props.emitter.on('swipedright', () => {\n        this.setState({\n          activeIndex: this.state.activeIndex > 0 ? this.state.activeIndex - 1 : 0\n        });\n      });\n      this.props.emitter.on('swipedleft', () => {\n        this.setState({\n          activeIndex: this.state.activeIndex < this.state.panes.length - 1 ? this.state.activeIndex + 1 : this.state.panes.length - 1\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Tab, {\n      menu: {\n        secondary: true,\n        pointing: true,\n        style: {\n          borderBottom: 0,\n          display: 'flex',\n          justifyContent: 'center'\n        }\n      },\n      panes: this.state.panes //style={{ display: \"flex\", flex: 1, justifyContent: \"center\" }}\n      ,\n      activeIndex: this.state.activeIndex,\n      onTabChange: (e, data) => this.setState({\n        activeIndex: data.activeIndex\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n\n}\n\nSwipeTabsComponent.propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    menuItem: PropTypes.string,\n    component: PropTypes.node\n  })).isRequired\n};\nexport default SwipeTabsComponent;","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/components/swipeTabs.component.js"],"names":["React","PropTypes","Grid","Tab","Swipeable","SwipeTabsComponent","Component","constructor","props","state","activeIndex","panes","tabs","map","menuItem","component","render","fontSize","componentDidMount","emitter","on","setState","length","secondary","pointing","style","borderBottom","display","justifyContent","e","data","propTypes","arrayOf","shape","string","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,mBAA1B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAO,iBAAP;AAEA,OAAO,sBAAP;;AAEA,MAAMC,kBAAN,SAAiCL,KAAK,CAACM,SAAvC,CAAiD;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,CADF;AAEXC,MAAAA,KAAK,EAAEH,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAe,CAAC;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAD,MAA8B;AAClDD,QAAAA,QADkD;AAElDE,QAAAA,MAAM,EAAE,MAAM;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+BF,SAA/B;AAFoC,OAA9B,CAAf;AAFI,KAAb;AAOD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKV,KAAL,CAAWW,OAAf,EAAwB;AACtB,WAAKX,KAAL,CAAWW,OAAX,CAAmBC,EAAnB,CAAsB,aAAtB,EAAqC,MAAM;AACzC,aAAKC,QAAL,CAAc;AACZX,UAAAA,WAAW,EACT,KAAKD,KAAL,CAAWC,WAAX,GAAyB,CAAzB,GAA6B,KAAKD,KAAL,CAAWC,WAAX,GAAyB,CAAtD,GAA0D;AAFhD,SAAd;AAID,OALD;AAMA,WAAKF,KAAL,CAAWW,OAAX,CAAmBC,EAAnB,CAAsB,YAAtB,EAAoC,MAAM;AACxC,aAAKC,QAAL,CAAc;AACZX,UAAAA,WAAW,EACT,KAAKD,KAAL,CAAWC,WAAX,GAAyB,KAAKD,KAAL,CAAWE,KAAX,CAAiBW,MAAjB,GAA0B,CAAnD,GACI,KAAKb,KAAL,CAAWC,WAAX,GAAyB,CAD7B,GAEI,KAAKD,KAAL,CAAWE,KAAX,CAAiBW,MAAjB,GAA0B;AAJpB,SAAd;AAMD,OAPD;AAQD;AACF;;AAEDN,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,GAAD;AACE,MAAA,IAAI,EAAE;AACJO,QAAAA,SAAS,EAAE,IADP;AAEJC,QAAAA,QAAQ,EAAE,IAFN;AAGJC,QAAAA,KAAK,EAAE;AACLC,UAAAA,YAAY,EAAE,CADT;AAELC,UAAAA,OAAO,EAAE,MAFJ;AAGLC,UAAAA,cAAc,EAAE;AAHX;AAHH,OADR;AAUE,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWE,KAVpB,CAWE;AAXF;AAYE,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,WAZ1B;AAaE,MAAA,WAAW,EAAE,CAACmB,CAAD,EAAIC,IAAJ,KACX,KAAKT,QAAL,CAAc;AAAEX,QAAAA,WAAW,EAAEoB,IAAI,CAACpB;AAApB,OAAd,CAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAmBD;;AApD8C;;AAuDjDL,kBAAkB,CAAC0B,SAAnB,GAA+B;AAC7BnB,EAAAA,IAAI,EAAEX,SAAS,CAAC+B,OAAV,CACJ/B,SAAS,CAACgC,KAAV,CAAgB;AACdnB,IAAAA,QAAQ,EAAEb,SAAS,CAACiC,MADN;AAEdnB,IAAAA,SAAS,EAAEd,SAAS,CAACkC;AAFP,GAAhB,CADI,EAKJC;AAN2B,CAA/B;AASA,eAAe/B,kBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Tab } from 'semantic-ui-react';\nimport { Swipeable } from 'react-swipeable';\nimport './swipeTabs.css';\n\nimport 'react-flex/index.css';\n\nclass SwipeTabsComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeIndex: 0,\n      panes: props.tabs.map(({ menuItem, component }) => ({\n        menuItem,\n        render: () => <div style={{ fontSize: 15 }}>{component}</div>\n      }))\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.emitter) {\n      this.props.emitter.on('swipedright', () => {\n        this.setState({\n          activeIndex:\n            this.state.activeIndex > 0 ? this.state.activeIndex - 1 : 0\n        });\n      });\n      this.props.emitter.on('swipedleft', () => {\n        this.setState({\n          activeIndex:\n            this.state.activeIndex < this.state.panes.length - 1\n              ? this.state.activeIndex + 1\n              : this.state.panes.length - 1\n        });\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Tab\n        menu={{\n          secondary: true,\n          pointing: true,\n          style: {\n            borderBottom: 0,\n            display: 'flex',\n            justifyContent: 'center'\n          }\n        }}\n        panes={this.state.panes}\n        //style={{ display: \"flex\", flex: 1, justifyContent: \"center\" }}\n        activeIndex={this.state.activeIndex}\n        onTabChange={(e, data) =>\n          this.setState({ activeIndex: data.activeIndex })\n        }\n      />\n    );\n  }\n}\n\nSwipeTabsComponent.propTypes = {\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      menuItem: PropTypes.string,\n      component: PropTypes.node\n    })\n  ).isRequired\n};\n\nexport default SwipeTabsComponent;\n"]},"metadata":{},"sourceType":"module"}