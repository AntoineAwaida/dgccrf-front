{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/createVisite.js\";\nimport React from 'react';\nimport { Form, Grid, GridRow, GridColumn, Icon, Label } from 'semantic-ui-react';\nexport default class CreateVisiteComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actionList: [\"123\", \"342\", \"1112\"],\n      trameList: [\"Trame 1\", \"Trame 2\"],\n      addedActions: [undefined]\n    };\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      style: {\n        margin: \"auto\",\n        textAlign: \"left\"\n      },\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(GridRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(GridColumn, {\n      width: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: () => console.log(this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Etablissement\",\n      placeholder: \"Etablissement\",\n      onChange: e => this.setState({\n        enterpise: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      label: \"SIRET\",\n      placeholder: \"SIRET\",\n      onChange: e => this.setState({\n        siret: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      style: {\n        width: \"100%\",\n        margin: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.addedActions.map((addedAction, actionIndex) => React.createElement(GridRow, {\n      key: addedAction,\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: \"0\",\n        margin: \"0.2em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(GridColumn, {\n      width: 14,\n      style: {\n        margin: 0,\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Form.Select, {\n      fluid: true,\n      placeholder: \"Action\",\n      label: actionIndex == 0 ? \"Actions associÃ©es\" : undefined,\n      options: this.state.actionList.map(action => ({\n        key: action,\n        text: action,\n        value: action\n      })),\n      style: {\n        width: \"100%\"\n      },\n      value: this.state.addedActions[actionIndex],\n      onChange: (e, {\n        value\n      }) => {\n        let newActions = this.state.addedActions.map((el, i) => i === actionIndex ? value : el);\n        this.setState({\n          addedActions: newActions\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(GridColumn, {\n      width: 1,\n      style: {\n        padding: 0,\n        marginLeft: \"0.3em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, actionIndex !== 0 && React.createElement(Icon, {\n      color: \"red\",\n      name: \"minus\",\n      size: \"big\",\n      style: {\n        cursor: \"pointer\"\n      },\n      width: 1,\n      verticalAlign: \"bottom\",\n      onClick: () => {\n        let newActions = this.state.addedActions.filter((el, i) => i !== actionIndex);\n        this.setState({\n          addedActions: newActions\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        textAlign: \"center\",\n        marginTop: \"0.5em\"\n      },\n      onClick: () => {\n        let newActions = this.state.addedActions.map(el => el);\n        newActions.push(undefined);\n        this.setState({\n          addedActions: newActions\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"circle plus\",\n      size: \"big\",\n      color: \"green\",\n      style: {\n        cursor: \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      style: {\n        width: \"100%\",\n        backGroundColor: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Form.Select, {\n      fluid: true,\n      placeholder: \"Tr\\xE2me\",\n      label: \"Tr\\xE2me associ\\xE9e\",\n      style: {\n        width: \"100%\"\n      },\n      options: this.state.trameList.map(trame => ({\n        key: trame,\n        text: trame,\n        value: trame\n      })),\n      onChange: (e, {\n        value\n      }) => this.setState({\n        trame: value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Form.Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Valider\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/createVisite.js"],"names":["React","Form","Grid","GridRow","GridColumn","Icon","Label","CreateVisiteComponent","Component","constructor","props","state","actionList","trameList","addedActions","undefined","render","margin","textAlign","console","log","e","setState","enterpise","target","value","siret","width","map","addedAction","actionIndex","display","alignItems","padding","action","key","text","newActions","el","i","marginLeft","cursor","filter","marginTop","push","backGroundColor","trame"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Grid, GridRow, GridColumn, Icon, Label } from 'semantic-ui-react';\n\nexport default class CreateVisiteComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            actionList: [\"123\", \"342\", \"1112\"],\n            trameList: [\"Trame 1\", \"Trame 2\"],\n            addedActions: [undefined]\n        }\n    }\n\n    render() {\n        return (\n            <Grid style={{ margin: \"auto\", textAlign: \"left\" }} centered>\n                <GridRow >\n                    <GridColumn width={14} >\n                        <Form onSubmit={() => console.log(this.state)} >\n\n                            <Form.Group widths=\"equal\">\n\n                                <Form.Input fluid label=\"Etablissement\" placeholder=\"Etablissement\"\n                                    onChange={(e) => this.setState({ enterpise: e.target.value })} />\n\n                                <Form.Input fluid label=\"SIRET\" placeholder=\"SIRET\"\n                                    onChange={(e) => this.setState({ siret: e.target.value })} />\n\n                            </Form.Group>\n\n                            <Grid style={{ width: \"100%\", margin: 0 }}>\n                                {\n                                    this.state.addedActions.map((addedAction, actionIndex) => (\n\n                                        <GridRow key={addedAction} style={{ display: \"flex\", alignItems: \"center\", padding: \"0\", margin: \"0.2em\" }}>\n                                            <GridColumn width={14} style={{ margin: 0, padding: 0 }} >\n\n                                                <Form.Select fluid placeholder=\"Action\" label={actionIndex == 0 ? \"Actions associÃ©es\" : undefined}\n                                                    options={this.state.actionList.map(action => ({ key: action, text: action, value: action }))}\n                                                    style={{ width: \"100%\" }}\n                                                    value={this.state.addedActions[actionIndex]}\n                                                    onChange={(e, { value }) => {\n                                                        let newActions = this.state.addedActions.map((el, i) => i === actionIndex ? value : el);\n                                                        this.setState({ addedActions: newActions })\n                                                    }} />\n\n                                            </GridColumn>\n                                            <GridColumn width={1} style={{ padding: 0, marginLeft: \"0.3em\" }}\n                                            >\n                                                {actionIndex !== 0 &&\n                                                    <Icon color=\"red\" name=\"minus\" size=\"big\" style={{ cursor: \"pointer\" }}\n                                                        width={1}\n                                                        verticalAlign=\"bottom\"\n                                                        onClick={() => {\n                                                            let newActions = this.state.addedActions.filter((el, i) => i !== actionIndex);\n                                                            this.setState({ addedActions: newActions })\n                                                        }} />}\n\n                                            </GridColumn>\n                                        </GridRow>\n                                    )\n                                    )}\n                            </Grid>\n\n                            <div style={{ width: \"100%\", textAlign: \"center\", marginTop: \"0.5em\" }}\n                                onClick={() => {\n                                    let newActions = this.state.addedActions.map(el => el);\n                                    newActions.push(undefined);\n                                    this.setState({ addedActions: newActions })\n                                }}>\n\n                                <Icon name=\"circle plus\" size=\"big\" color=\"green\"\n                                    style={{ cursor: \"pointer\" }}\n                                />\n\n                            </div>\n\n                            <Form.Group style={{ width: \"100%\", backGroundColor: \"red\" }}\n                            >\n                                <Form.Select fluid placeholder=\"TrÃ¢me\" label=\"TrÃ¢me associÃ©e\"\n                                    style={{ width: \"100%\" }}\n                                    options={this.state.trameList.map(trame => ({ key: trame, text: trame, value: trame }))}\n                                    onChange={(e, { value }) => this.setState({ trame: value })\n                                    } />\n                            </Form.Group>\n\n\n                            <Form.Button>Valider</Form.Button>\n                        </Form >\n                    </GridColumn>\n                </GridRow>\n            </Grid >\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}