{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/auth/auth.container.js\";\nimport React from 'react';\nimport { Button, Container, Form, Input, Grid } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeAgent } from '../../services/actions';\nimport { FormGroup } from '@material-ui/core';\nimport axios from 'axios';\nimport config from '../../config';\n\nfunction mapStateToProps(state) {\n  return {\n    AGENT_DD_IDENT: state.dataReducer.AGENT_DD_IDENT\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeAgent: newAgentIdent => dispatch(changeAgent(newAgentIdent))\n  };\n}\n\nclass AuthComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = async () => {\n      try {\n        let res = await axios.get(config.backend.base_url + '/agent/' + this.state.idAgent);\n\n        if (window.confirm(\"Etes vous sur de vouloir changer d'utilisateur pour \" + res.data.AGENT_DD_LIBELLE + \".\\n Vous perdrez toutes les données actuelles pour télécharger les données du nounvel utilisateur.\")) {\n          this.props.changeAgent(this.state.idAgent);\n        }\n      } catch (err) {\n        console.log(err);\n\n        if (!err.response) {\n          window.alert('Vous devez être connecté à internet pour changer d\\'utilisateur.\\nVérifier votre connection avant de réeesayer');\n        } else if (err.response.status == 404) {\n          window.alert(\"L'utilisateur avec le code agent \" + this.state.idAgent + \" est introuvable\");\n        } else {\n          window.alert(err.response.status + \" An unknown error occured\");\n        }\n      }\n    };\n\n    this.state = {\n      AGENT_DD_IDENT: \"\"\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      style: {\n        paddingTop: \"2em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Input, {\n      label: \"Votre identifiant agent IRIS\",\n      onChange: (event, {\n        value\n      }) => this.setState({\n        idAgent: value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \" Valider \"))));\n  }\n\n}\n\nAuthComponent.propTypes = {\n  changeAgent: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthComponent);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/auth/auth.container.js"],"names":["React","Button","Container","Form","Input","Grid","PropTypes","connect","changeAgent","FormGroup","axios","config","mapStateToProps","state","AGENT_DD_IDENT","dataReducer","mapDispatchToProps","dispatch","newAgentIdent","AuthComponent","Component","constructor","props","onSubmit","res","get","backend","base_url","idAgent","window","confirm","data","AGENT_DD_LIBELLE","err","console","log","response","alert","status","bind","render","paddingTop","event","value","setState","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Container, Form, Input, Grid } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeAgent } from '../../services/actions';\nimport { FormGroup } from '@material-ui/core';\nimport axios from 'axios';\nimport config from '../../config';\n\n\nfunction mapStateToProps(state) {\n    return {\n        AGENT_DD_IDENT: state.dataReducer.AGENT_DD_IDENT\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeAgent: newAgentIdent => dispatch(changeAgent(newAgentIdent)),\n    };\n}\n\nclass AuthComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            AGENT_DD_IDENT: \"\"\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n\n    onSubmit = async () => {\n        try {\n            let res = await axios.get(config.backend.base_url + '/agent/' + this.state.idAgent);\n            if (window.confirm(\"Etes vous sur de vouloir changer d'utilisateur pour \" + res.data.AGENT_DD_LIBELLE + \".\\n Vous perdrez toutes les données actuelles pour télécharger les données du nounvel utilisateur.\")) {\n                this.props.changeAgent(this.state.idAgent);\n            }\n        } catch (err) {\n            console.log(err)\n            if (!err.response) {\n                window.alert('Vous devez être connecté à internet pour changer d\\'utilisateur.\\nVérifier votre connection avant de réeesayer')\n            }\n            else if (err.response.status == 404) {\n                window.alert(\"L'utilisateur avec le code agent \" + this.state.idAgent + \" est introuvable\")\n            }\n            else {\n                window.alert(err.response.status + \" An unknown error occured\");\n\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Container style={{ paddingTop: \"2em\" }}>\n                <Grid>\n                    <Form onSubmit={this.onSubmit}>\n                        <FormGroup>\n                            <Input label=\"Votre identifiant agent IRIS\"\n                                onChange={(event, { value }) => this.setState({ idAgent: value })} />\n\n                        </FormGroup>\n\n                        <Button> Valider </Button>\n                    </Form>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nAuthComponent.propTypes = {\n    changeAgent: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthComponent);"]},"metadata":{},"sourceType":"module"}