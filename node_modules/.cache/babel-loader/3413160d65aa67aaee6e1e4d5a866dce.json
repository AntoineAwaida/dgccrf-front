{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visite/photo/photo.js\";\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport Camera, { FACING_MODES } from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport './photo.css';\nimport FullScreen from 'react-full-screen';\nimport { Spinner } from 'react-activity';\nimport 'react-activity/dist/react-activity.css';\nimport { Button } from '@material-ui/core';\nimport Jimp from 'jimp';\nimport { Buffer } from 'buffer';\nimport { PropTypes } from 'prop-types';\nimport documentsService from '../../../services/documents.service';\n\nclass Photo extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.goFull = () => {\n      this.setState({\n        isFull: !this.state.isFull\n      });\n    };\n\n    this.close = () => {\n      this.props.setActiveTab(0);\n      this.goFull();\n    };\n\n    this.loaded = () => {\n      this.setState({\n        loaded: true\n      });\n    };\n\n    this.getFileSize = dataUri => {\n      console.log(dataUri);\n      const size = dataUri.length * (3 / 4) - 2;\n      return size;\n    };\n\n    this.reSizeImage = dataUri => new Promise(resolve => {\n      Jimp.read(Buffer.from(dataUri.replace(/^data:image\\/png;base64,/, ''), 'base64')).then(img => {\n        const n = img.quality(90);\n        n.getBase64(Jimp.MIME_JPEG, (err, res) => {\n          // console.log(this.getFileSize(res));\n          resolve(res);\n        });\n      });\n    });\n\n    this.state = {\n      isFull: false,\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.goFull();\n  }\n\n  async onTakePhoto(dataUri) {\n    // Do stuff with the dataUri photo...\n    let size = this.getFileSize(dataUri);\n    let img = dataUri;\n\n    while (size > 100000) {\n      img = await this.reSizeImage(dataUri);\n      size = this.getFileSize(img);\n    }\n\n    try {\n      await documentsService.postDocument({\n        document: img,\n        name: Date.now() + '.jpeg',\n        type: 'image/jpeg',\n        author: 4445,\n        visite: [this.props.visiteid],\n        date: Date.now(),\n        dossier: null,\n        categorie: 'photo'\n      });\n      console.log('File sent!');\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, !this.state.loaded && React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(FullScreen, {\n      enabled: this.state.isFull,\n      onChange: isFull => this.setState({\n        isFull\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.isFull && React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Camera, {\n      onCameraStart: () => this.loaded(),\n      idealFacingMode: FACING_MODES.ENVIRONMENT,\n      isImageMirror: false,\n      onTakePhoto: dataUri => {\n        this.onTakePhoto(dataUri);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: 50,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"large\",\n      color: \"secondary\",\n      variant: \"outlined\",\n      onClick: () => this.close(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Fermer\")))));\n  }\n\n}\n\nPhoto.propTypes = {\n  setActiveTab: PropTypes.func.isRequired,\n  visiteid: PropTypes.number.isRequired\n};\nexport default Photo;","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visite/photo/photo.js"],"names":["React","Component","Camera","FACING_MODES","FullScreen","Spinner","Button","Jimp","Buffer","PropTypes","documentsService","Photo","constructor","props","context","goFull","setState","isFull","state","close","setActiveTab","loaded","getFileSize","dataUri","console","log","size","length","reSizeImage","Promise","resolve","read","from","replace","then","img","n","quality","getBase64","MIME_JPEG","err","res","componentDidMount","onTakePhoto","postDocument","document","name","Date","now","type","author","visite","visiteid","date","dossier","categorie","e","render","backgroundColor","display","flexDirection","ENVIRONMENT","marginTop","alignItems","justifyContent","propTypes","func","isRequired","number"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport Camera, { FACING_MODES } from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport './photo.css';\nimport FullScreen from 'react-full-screen';\nimport { Spinner } from 'react-activity';\nimport 'react-activity/dist/react-activity.css';\nimport { Button } from '@material-ui/core';\nimport Jimp from 'jimp';\nimport { Buffer } from 'buffer';\nimport { PropTypes } from 'prop-types';\nimport documentsService from '../../../services/documents.service';\n\nclass Photo extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      isFull: false,\n      loaded: false\n    };\n  }\n  goFull = () => {\n    this.setState({ isFull: !this.state.isFull });\n  };\n\n  close = () => {\n    this.props.setActiveTab(0);\n    this.goFull();\n  };\n\n  componentDidMount() {\n    this.goFull();\n  }\n\n  loaded = () => {\n    this.setState({ loaded: true });\n  };\n\n  getFileSize = dataUri => {\n    console.log(dataUri);\n    const size = dataUri.length * (3 / 4) - 2;\n    return size;\n  };\n\n  reSizeImage = dataUri =>\n    new Promise(resolve => {\n      Jimp.read(\n        Buffer.from(dataUri.replace(/^data:image\\/png;base64,/, ''), 'base64')\n      ).then(img => {\n        const n = img.quality(90);\n        n.getBase64(Jimp.MIME_JPEG, (err, res) => {\n          // console.log(this.getFileSize(res));\n          resolve(res);\n        });\n      });\n    });\n\n  async onTakePhoto(dataUri) {\n    // Do stuff with the dataUri photo...\n\n    let size = this.getFileSize(dataUri);\n    let img = dataUri;\n    while (size > 100000) {\n      img = await this.reSizeImage(dataUri);\n      size = this.getFileSize(img);\n    }\n\n    try {\n      await documentsService.postDocument({\n        document: img,\n        name: Date.now() + '.jpeg',\n        type: 'image/jpeg',\n        author: 4445,\n        visite: [this.props.visiteid],\n        date: Date.now(),\n        dossier: null,\n        categorie: 'photo'\n      });\n      console.log('File sent!');\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ backgroundColor: 'black' }}>\n        {!this.state.loaded && <Spinner />}\n        <br />\n        <FullScreen\n          enabled={this.state.isFull}\n          onChange={isFull => this.setState({ isFull })}\n        >\n          {this.state.isFull && (\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column'\n              }}\n            >\n              <Camera\n                onCameraStart={() => this.loaded()}\n                idealFacingMode={FACING_MODES.ENVIRONMENT}\n                isImageMirror={false}\n                onTakePhoto={dataUri => {\n                  this.onTakePhoto(dataUri);\n                }}\n              />\n              <div\n                style={{\n                  marginTop: 50,\n\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                }}\n              >\n                <Button\n                  size=\"large\"\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  onClick={() => this.close()}\n                >\n                  Fermer\n                </Button>\n              </div>\n            </div>\n          )}\n        </FullScreen>\n      </div>\n    );\n  }\n}\n\nPhoto.propTypes = {\n  setActiveTab: PropTypes.func.isRequired,\n  visiteid: PropTypes.number.isRequired\n};\n\nexport default Photo;\n"]},"metadata":{},"sourceType":"module"}