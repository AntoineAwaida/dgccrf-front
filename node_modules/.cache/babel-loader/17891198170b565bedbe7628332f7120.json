{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/auth/auth.container.js\";\nimport React from 'react';\nimport { Button, Container, Card, Form, Input, Grid, GridColumn, Label, Header, GridRow } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeAgent } from '../../services/actions';\nimport { FormGroup } from '@material-ui/core';\nimport axios from 'axios';\nimport config from '../../config';\nimport PouchDBServices from '../../services';\n\nfunction mapStateToProps(state) {\n  return {\n    AGENT_DD_IDENT: state.dataReducer.AGENT_DD_IDENT\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeAgent: async newAgentIdent => {\n      await PouchDBServices.ChangeAgent(newAgentIdent);\n      dispatch(changeAgent(newAgentIdent));\n    }\n  };\n}\n\nclass AuthComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = async () => {\n      try {\n        let res = await axios.get(config.backend.base_url + '/agent/' + this.state.idAgent);\n\n        if (window.confirm(\"Etes vous sur de vouloir changer d'utilisateur pour \" + res.data.AGENT_DD_LIBELLE + \".\\n Vous perdrez toutes les données actuelles pour télécharger les données du nounvel utilisateur.\")) {\n          await this.props.changeAgent(res.data.AGENT_DD_IDENT);\n\n          if (this.props.location && this.props.location.pathname == \"/authentification\") {\n            this.props.history.push('/mes-dossiers');\n          }\n        }\n      } catch (err) {\n        console.log(err);\n\n        if (!err.response && err.request) {\n          window.alert('Vous devez être connecté à internet pour changer d\\'utilisateur.\\nVérifier votre connection avant de réeesayer');\n        } else if (err.response && err.response.status == 404) {\n          window.alert(\"L'utilisateur avec l'identifiant \" + this.state.idAgent + \" est introuvable\");\n        } else if (!err.response) {\n          window.alert(\"Une erreur locale s'est produite.\");\n        } else {\n          window.alert(err.response.status + \" An unknown error occured\");\n        }\n      }\n    };\n\n    this.state = {\n      idAgent: \"\",\n      isLoading: false\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      verticalAlign: \"middle\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(GridRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(GridColumn, {\n      width: 10,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      style: {\n        minWidth: \"300px\",\n        textAlign: \"center\",\n        paddingBottom: \"10em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      style: {\n        width: \"100%\",\n        paddingBottom: \"1.5em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      style: {\n        textAlign: \"left\",\n        marginBottom: \"0\",\n        marginLeft: \"0.3em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Identifiant agent IRIS \"), React.createElement(Input, {\n      value: this.state.idAgent,\n      size: \"big\",\n      placeholder: \"Identifiant du nouvel utilisateur\",\n      style: {\n        width: \"100%\"\n      },\n      onChange: (event, {\n        value\n      }) => this.setState({\n        idAgent: value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      style: {\n        width: \"100%\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"big\",\n      style: {\n        color: \"white\",\n        backgroundColor: \"#00b5ad\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" Changer d'utilisateur \")))))));\n  }\n\n}\n\nAuthComponent.propTypes = {\n  changeAgent: PropTypes.func.isRequired,\n  location: PropTypes.any,\n  history: PropTypes.any\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthComponent);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/auth/auth.container.js"],"names":["React","Button","Container","Card","Form","Input","Grid","GridColumn","Label","Header","GridRow","PropTypes","connect","changeAgent","FormGroup","axios","config","PouchDBServices","mapStateToProps","state","AGENT_DD_IDENT","dataReducer","mapDispatchToProps","dispatch","newAgentIdent","ChangeAgent","AuthComponent","Component","constructor","props","onSubmit","res","get","backend","base_url","idAgent","window","confirm","data","AGENT_DD_LIBELLE","location","pathname","history","push","err","console","log","response","request","alert","status","isLoading","bind","render","width","height","minWidth","textAlign","paddingBottom","marginBottom","marginLeft","event","value","setState","color","backgroundColor","propTypes","func","isRequired","any"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Container, Card, Form, Input, Grid, GridColumn, Label, Header, GridRow } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeAgent } from '../../services/actions';\nimport { FormGroup } from '@material-ui/core';\nimport axios from 'axios';\nimport config from '../../config';\nimport PouchDBServices from '../../services';\n\n\nfunction mapStateToProps(state) {\n    return {\n        AGENT_DD_IDENT: state.dataReducer.AGENT_DD_IDENT\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeAgent: async newAgentIdent => {\n            await PouchDBServices.ChangeAgent(newAgentIdent);\n            dispatch(changeAgent(newAgentIdent));\n        },\n    };\n}\n\nclass AuthComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            idAgent: \"\",\n            isLoading: false\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n\n    onSubmit = async () => {\n        try {\n            let res = await axios.get(config.backend.base_url + '/agent/' + this.state.idAgent);\n            if (window.confirm(\"Etes vous sur de vouloir changer d'utilisateur pour \" + res.data.AGENT_DD_LIBELLE + \".\\n Vous perdrez toutes les données actuelles pour télécharger les données du nounvel utilisateur.\")) {\n                await this.props.changeAgent(res.data.AGENT_DD_IDENT);\n                if (this.props.location && this.props.location.pathname == \"/authentification\") {\n                    this.props.history.push('/mes-dossiers')\n                }\n            }\n        } catch (err) {\n            console.log(err)\n            if (!err.response && err.request) {\n                window.alert('Vous devez être connecté à internet pour changer d\\'utilisateur.\\nVérifier votre connection avant de réeesayer')\n            }\n            else if (err.response && err.response.status == 404) {\n                window.alert(\"L'utilisateur avec l'identifiant \" + this.state.idAgent + \" est introuvable\")\n            }\n            else if (!err.response) {\n                window.alert(\"Une erreur locale s'est produite.\");\n            }\n            else {\n                window.alert(err.response.status + \" An unknown error occured\");\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Container style={{ width: \"100%\", height: \"100%\" }}>\n                <Grid style={{ width: \"100%\", height: \"100%\" }} verticalAlign=\"middle\" centered>\n                    <GridRow>\n                        <GridColumn width={10} centered >\n                            <Form onSubmit={this.onSubmit}\n                                style={{ minWidth: \"300px\", textAlign: \"center\", paddingBottom: \"10em\" }}>\n                                {/* <Header as=\"h1\">Changer d'utilisateur</Header> */}\n\n                                <FormGroup style={{ width: \"100%\", paddingBottom: \"1.5em\" }}>\n                                    <Header as=\"h3\" style={{ textAlign: \"left\", marginBottom: \"0\", marginLeft: \"0.3em\" }}>Identifiant agent IRIS </Header>\n                                    <Input value={this.state.idAgent}\n                                        size=\"big\"\n                                        placeholder=\"Identifiant du nouvel utilisateur\"\n                                        style={{ width: \"100%\" }}\n                                        onChange={(event, { value }) => this.setState({ idAgent: value })} />\n                                </FormGroup>\n\n                                <FormGroup style={{ width: \"100%\", textAlign: \"center\" }}>\n                                    <Button size=\"big\" style={{ color: \"white\", backgroundColor: \"#00b5ad\" }}> Changer d'utilisateur </Button>\n                                </FormGroup>\n                            </Form>\n                        </GridColumn>\n                    </GridRow>\n                </Grid >\n            </Container >\n        )\n    }\n}\n\nAuthComponent.propTypes = {\n    changeAgent: PropTypes.func.isRequired,\n    location: PropTypes.any,\n    history: PropTypes.any\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthComponent);"]},"metadata":{},"sourceType":"module"}