{"ast":null,"code":"import _objectSpread from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visite/trame/edit.js\";\nimport React from 'react';\nimport { Container, Button, Icon, Input, Responsive } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport TrameComponent from '../../preferences/trame/trame';\nimport PouchDBServices from '../../../services/index';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nclass EditComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onDragEnd = result => {\n      const destination = result.destination,\n            source = result.source;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const res = Array.from(this.state.taskList);\n\n      const _res$splice = res.splice(result.source.index, 1),\n            _res$splice2 = _slicedToArray(_res$splice, 1),\n            removed = _res$splice2[0];\n\n      res.splice(result.destination.index, 0, removed);\n      this.setState({\n        taskList: res\n      });\n    };\n\n    this.state = {\n      taskList: this.props.trame.trame,\n      index: this.props.trame.trame.length,\n      id: this.props.trame.trame.length,\n      isLoading: true,\n      _id: this.props.trame._id,\n      _rev: this.props.visite._rev\n    };\n    this.validateName = this.validateName.bind(this);\n    this.changeType = this.changeType.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.addDocument = this.addDocument.bind(this);\n    this.deleteDocument = this.deleteDocument.bind(this);\n  }\n\n  async saveTrame() {\n    if (window.confirm('Voulez-vous sauvegarder cette trame?')) {\n      try {\n        const answer = await PouchDBServices.services.visite.updateTrame(this.props.visite, this.state._rev, _objectSpread({}, this.props.trame, {\n          trame: this.state.taskList\n        }));\n        this.props.closeEdit();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  deleteTask(task) {\n    this.setState({\n      taskList: this.state.taskList.filter(t => {\n        return t != task;\n      })\n    });\n  }\n\n  addDocument(task, file) {\n    this.setState({\n      taskList: this.state.taskList.filter(t => {\n        if (t == task) {\n          t.innerContent = file;\n        }\n\n        return t;\n      })\n    });\n  }\n\n  deleteDocument(task) {\n    this.setState({\n      taskList: this.state.taskList.filter(t => {\n        if (t == task) {\n          t.innerContent = '';\n        }\n\n        return t;\n      })\n    });\n  }\n\n  validateName(task, name) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.title = name;\n      }\n\n      return t;\n    });\n    this.setState({\n      taskList\n    });\n  }\n\n  handleNameChange(e, data) {\n    this.setState({\n      trameName: data.value\n    });\n  }\n\n  handleTextChange(task, text) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.innerContent = text;\n      }\n\n      return t;\n    });\n    this.setState({\n      taskList\n    });\n  }\n\n  changeType(task, type) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.type = type;\n      }\n\n      return t;\n    });\n    this.setState({\n      taskList\n    });\n  }\n\n  addTask() {\n    //de 3 types: basic, text, ou document.\n    this.setState({\n      taskList: [...this.state.taskList, {\n        title: 'Nouvelle tÃ¢che' + this.state.index,\n        type: 'basic',\n        innerContent: '',\n        index: this.state.index,\n        id: this.state.id\n      }],\n      index: this.state.index + 1,\n      id: this.state.id + 1\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"hidescrollbar\",\n      style: {\n        display: 'flex',\n        height: '100%',\n        width: '100%',\n        backgroundColor: '#f2f2f2',\n        overflow: 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        justifyContent: 'center',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        overflow: 'hidden',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'fixed',\n        zIndex: 10,\n        width: '100%',\n        backgroundColor: '#f2f2f2',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        marginLeft: 5\n      },\n      color: \"teal\",\n      icon: true,\n      onClick: () => this.addTask(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.saveTrame(),\n      color: \"red\",\n      disabled: this.state.taskList.length === 0,\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"save\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        flex: 10,\n        overflowY: 'auto',\n        marginTop: 80,\n        width: '100%'\n      },\n      className: \"hidescrollbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(TrameComponent, {\n      validateName: this.validateName,\n      taskList: this.state.taskList,\n      changeType: this.changeType,\n      handleTextChange: this.handleTextChange,\n      deleteTask: this.deleteTask,\n      addDocument: this.addDocument,\n      deleteDocument: this.deleteDocument,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), provided.placeholder))))))));\n  }\n\n}\n\nEditComponent.propTypes = {\n  trame: PropTypes.object\n};\nexport default EditComponent;","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visite/trame/edit.js"],"names":["React","Container","Button","Icon","Input","Responsive","PropTypes","TrameComponent","PouchDBServices","DragDropContext","Droppable","EditComponent","Component","constructor","props","onDragEnd","result","destination","source","droppableId","index","res","Array","from","state","taskList","splice","removed","setState","trame","length","id","isLoading","_id","_rev","visite","validateName","bind","changeType","handleTextChange","handleNameChange","deleteTask","addDocument","deleteDocument","saveTrame","window","confirm","answer","services","updateTrame","closeEdit","e","console","log","task","filter","t","file","innerContent","name","title","data","trameName","value","text","type","addTask","render","display","height","width","backgroundColor","overflow","justifyContent","textAlign","flexDirection","alignItems","position","zIndex","padding","marginLeft","flex","overflowY","marginTop","provided","innerRef","droppableProps","placeholder","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Button, Icon, Input, Responsive } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\n\nimport TrameComponent from '../../preferences/trame/trame';\n\nimport PouchDBServices from '../../../services/index';\n\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nclass EditComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: this.props.trame.trame,\n      index: this.props.trame.trame.length,\n      id: this.props.trame.trame.length,\n      isLoading: true,\n      _id: this.props.trame._id,\n      _rev: this.props.visite._rev\n    };\n    this.validateName = this.validateName.bind(this);\n    this.changeType = this.changeType.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.addDocument = this.addDocument.bind(this);\n    this.deleteDocument = this.deleteDocument.bind(this);\n  }\n\n  async saveTrame() {\n    if (window.confirm('Voulez-vous sauvegarder cette trame?')) {\n      try {\n        const answer = await PouchDBServices.services.visite.updateTrame(\n          this.props.visite,\n          this.state._rev,\n          {\n            ...this.props.trame,\n            trame: this.state.taskList\n          }\n        );\n\n        this.props.closeEdit();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  deleteTask(task) {\n    this.setState({\n      taskList: this.state.taskList.filter(t => {\n        return t != task;\n      })\n    });\n  }\n\n  addDocument(task, file) {\n    this.setState({\n      taskList: this.state.taskList.filter(t => {\n        if (t == task) {\n          t.innerContent = file;\n        }\n        return t;\n      })\n    });\n  }\n\n  deleteDocument(task) {\n    this.setState({\n      taskList: this.state.taskList.filter(t => {\n        if (t == task) {\n          t.innerContent = '';\n        }\n        return t;\n      })\n    });\n  }\n\n  validateName(task, name) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.title = name;\n      }\n\n      return t;\n    });\n\n    this.setState({ taskList });\n  }\n\n  handleNameChange(e, data) {\n    this.setState({ trameName: data.value });\n  }\n\n  handleTextChange(task, text) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.innerContent = text;\n      }\n\n      return t;\n    });\n    this.setState({ taskList });\n  }\n\n  changeType(task, type) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.type = type;\n      }\n\n      return t;\n    });\n\n    this.setState({ taskList });\n  }\n\n  addTask() {\n    //de 3 types: basic, text, ou document.\n    this.setState({\n      taskList: [\n        ...this.state.taskList,\n        {\n          title: 'Nouvelle tÃ¢che' + this.state.index,\n          type: 'basic',\n          innerContent: '',\n          index: this.state.index,\n          id: this.state.id\n        }\n      ],\n      index: this.state.index + 1,\n      id: this.state.id + 1\n    });\n  }\n\n  onDragEnd = result => {\n    const { destination, source } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const res = Array.from(this.state.taskList);\n\n    const [removed] = res.splice(result.source.index, 1);\n    res.splice(result.destination.index, 0, removed);\n\n    this.setState({ taskList: res });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"hidescrollbar\"\n        style={{\n          display: 'flex',\n          height: '100%',\n          width: '100%',\n\n          backgroundColor: '#f2f2f2',\n          overflow: 'hidden'\n        }}\n      >\n        <div\n          style={{\n            width: '100%',\n            justifyContent: 'center',\n            textAlign: 'center'\n          }}\n        >\n          <Container style={{ height: '100%' }}>\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                overflow: 'hidden',\n                height: '100%'\n              }}\n            >\n              <div\n                style={{\n                  position: 'fixed',\n                  zIndex: 10,\n                  width: '100%',\n                  backgroundColor: '#f2f2f2',\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n\n                  padding: 20\n                }}\n              >\n                <div>\n                  <Button\n                    style={{ marginLeft: 5 }}\n                    color=\"teal\"\n                    icon\n                    onClick={() => this.addTask()}\n                  >\n                    <Icon name=\"plus\" color=\"white\"></Icon>\n                  </Button>\n                </div>\n                <div>\n                  <Button\n                    onClick={() => this.saveTrame()}\n                    color=\"red\"\n                    disabled={this.state.taskList.length === 0}\n                    icon\n                  >\n                    <Icon name=\"save\" color=\"white\"></Icon>\n                  </Button>\n                </div>\n\n                {/* <Tabs\n                  value={this.state.activeIndex}\n                  fullWidth\n                  onChange={this.handleChange}\n                >\n                  <Tab label=\"Avant\" />\n                  <Tab label=\"Pendant\" />\n                  <Tab label=\"AprÃ¨s\" />\n                </Tabs> */}\n              </div>\n              <div\n                style={{\n                  flex: 10,\n                  overflowY: 'auto',\n                  marginTop: 80,\n\n                  width: '100%'\n                }}\n                className=\"hidescrollbar\"\n              >\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                  <Droppable droppableId=\"droppable\">\n                    {provided => (\n                      <div ref={provided.innerRef} {...provided.droppableProps}>\n                        <TrameComponent\n                          validateName={this.validateName}\n                          taskList={this.state.taskList}\n                          changeType={this.changeType}\n                          handleTextChange={this.handleTextChange}\n                          deleteTask={this.deleteTask}\n                          addDocument={this.addDocument}\n                          deleteDocument={this.deleteDocument}\n                        />\n                        {provided.placeholder}\n                      </div>\n                    )}\n                  </Droppable>\n                </DragDropContext>\n              </div>\n            </div>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditComponent.propTypes = {\n  trame: PropTypes.object\n};\n\nexport default EditComponent;\n"]},"metadata":{},"sourceType":"module"}