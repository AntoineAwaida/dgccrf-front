{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/createVisite.js\";\nimport React from 'react';\nimport { Form, Grid, GridRow, GridColumn, Icon, Label } from 'semantic-ui-react';\nexport default class CreateVisiteComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actionList: [\"123\", \"342\", \"1112\"],\n      addedActions: [undefined]\n    };\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      style: {\n        margin: \"auto\"\n      },\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(GridRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(GridColumn, {\n      width: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: () => console.log(this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Etablissement\",\n      placeholder: \"Etablissement\",\n      onChange: e => this.setState({\n        enterpise: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      label: \"SIRET\",\n      placeholder: \"SIRET\",\n      onChange: e => this.setState({\n        siret: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })), this.state.addedActions.map((addedAction, actionIndex) => React.createElement(Form.Group, {\n      key: addedAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        width: \"100%\",\n        margin: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(GridRow, {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(GridColumn, {\n      width: 15,\n      style: {\n        margin: 0,\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Form.Select, {\n      fluid: true,\n      placeholder: \"Action\",\n      label: actionIndex == 0 ? \"Actions associÃ©es\" : undefined,\n      options: this.state.actionList.map(action => ({\n        key: action,\n        text: action,\n        value: action\n      })),\n      style: {\n        width: \"100%\"\n      },\n      value: this.state.addedActions[actionIndex],\n      onChange: (e, {\n        value\n      }) => {\n        let newActions = this.state.addedActions.map((el, i) => i === actionIndex ? value : el);\n        this.setState({\n          addedActions: newActions\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(GridColumn, {\n      width: 1,\n      style: {\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, actionIndex !== 0 && React.createElement(Icon, {\n      color: \"red\",\n      name: \"minus\",\n      size: \"big\",\n      style: {\n        cursor: \"pointer\"\n      },\n      width: 1,\n      verticalAlign: \"bottom\",\n      onClick: () => {\n        let newActions = this.state.addedActions.filter((el, i) => i !== actionIndex);\n        this.setState({\n          addedActions: newActions\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        textAlign: \"center\",\n        margin: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"circle plus\",\n      size: \"big\",\n      color: \"green\",\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: () => {\n        let newActions = this.state.addedActions.map(el => el);\n        newActions.push(undefined);\n        this.setState({\n          addedActions: newActions\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Form.Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Valider\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/createVisite.js"],"names":["React","Form","Grid","GridRow","GridColumn","Icon","Label","CreateVisiteComponent","Component","constructor","props","state","actionList","addedActions","undefined","render","margin","console","log","e","setState","enterpise","target","value","siret","map","addedAction","actionIndex","width","display","alignItems","padding","action","key","text","newActions","el","i","cursor","filter","textAlign","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Grid, GridRow, GridColumn, Icon, Label } from 'semantic-ui-react';\n\nexport default class CreateVisiteComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            actionList: [\"123\", \"342\", \"1112\"],\n            addedActions: [undefined]\n        }\n    }\n\n    render() {\n        return (\n            <Grid style={{ margin: \"auto\" }} centered>\n                <GridRow >\n                    <GridColumn width={14} >\n                        <Form onSubmit={() => console.log(this.state)} >\n\n                            <Form.Group widths=\"equal\">\n                                <Form.Input fluid label=\"Etablissement\" placeholder=\"Etablissement\"\n                                    onChange={(e) => this.setState({ enterpise: e.target.value })} />\n                                <Form.Input fluid label=\"SIRET\" placeholder=\"SIRET\"\n                                    onChange={(e) => this.setState({ siret: e.target.value })} />\n                            </Form.Group>\n\n                            {\n                                this.state.addedActions.map((addedAction, actionIndex) => (\n                                    <Form.Group key={addedAction} >\n                                        <Grid style={{ width: \"100%\", margin: 0 }}>\n                                            <GridRow style={{ display: \"flex\", alignItems: \"center\", padding: 0 }}>\n                                                <GridColumn width={15} style={{ margin: 0, padding: 0 }} >\n                                                    <Form.Select fluid placeholder=\"Action\" label={actionIndex == 0 ? \"Actions associÃ©es\" : undefined}\n                                                        options={this.state.actionList.map(action => ({ key: action, text: action, value: action }))}\n                                                        style={{ width: \"100%\" }}\n                                                        value={this.state.addedActions[actionIndex]}\n                                                        onChange={(e, { value }) => {\n                                                            let newActions = this.state.addedActions.map((el, i) => i === actionIndex ? value : el);\n                                                            this.setState({ addedActions: newActions })\n                                                        }} />\n                                                </GridColumn>\n                                                <GridColumn width={1} style={{ padding: 0 }}\n                                                >\n                                                    {actionIndex !== 0 &&\n                                                        <Icon color=\"red\" name=\"minus\" size=\"big\" style={{ cursor: \"pointer\" }}\n                                                            width={1}\n                                                            verticalAlign=\"bottom\"\n                                                            onClick={() => {\n                                                                let newActions = this.state.addedActions.filter((el, i) => i !== actionIndex);\n                                                                this.setState({ addedActions: newActions })\n                                                            }} />}\n                                                </GridColumn>\n                                            </GridRow>\n                                        </Grid>\n                                    </Form.Group>\n                                )\n                                )}\n                            <div style={{ width: \"100%\", textAlign: \"center\", margin: \"auto\" }}>\n                                <Icon name=\"circle plus\" size=\"big\" color=\"green\"\n                                    style={{ cursor: \"pointer\" }}\n                                    onClick={() => {\n                                        let newActions = this.state.addedActions.map(el => el);\n                                        newActions.push(undefined);\n                                        this.setState({ addedActions: newActions })\n                                    }} />\n                            </div>\n\n                            <Form.Button>Valider</Form.Button>\n                        </Form >\n                    </GridColumn>\n                </GridRow>\n            </Grid >\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}