{"ast":null,"code":"import _slicedToArray from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const _window = window,\n        width = _window.innerWidth,\n        height = _window.innerHeight;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const _useState = useState(getWindowDimensions()),\n        _useState2 = _slicedToArray(_useState, 2),\n        windowDimensions = _useState2[0],\n        setWindowDimensions = _useState2[1];\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return windowDimensions;\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/components/useWindowDimensions.js"],"names":["useState","useEffect","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,mBAAT,GAA+B;AAAA,kBACsBC,MADtB;AAAA,QACTC,KADS,WACrBC,UADqB;AAAA,QACWC,MADX,WACFC,WADE;AAE7B,SAAO;AACLH,IAAAA,KADK;AAELE,IAAAA;AAFK,GAAP;AAID;;AAED,eAAe,SAASE,mBAAT,GAA+B;AAAA,oBACIR,QAAQ,CACtDE,mBAAmB,EADmC,CADZ;AAAA;AAAA,QACrCO,gBADqC;AAAA,QACnBC,mBADmB;;AAK5CT,EAAAA,SAAS,CAAC,MAAM;AACd,aAASU,YAAT,GAAwB;AACtBD,MAAAA,mBAAmB,CAACR,mBAAmB,EAApB,CAAnB;AACD;;AAEDC,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMR,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOF,gBAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n"]},"metadata":{},"sourceType":"module"}