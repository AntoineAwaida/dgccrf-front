{"ast":null,"code":"import PouchDB from 'pouchdb';\nimport config from '../config';\n\nclass pouchDbService {\n  constructor(pouchDbUrl) {\n    this.db = new PouchDB('my_ddd', {\n      ajax: {\n        withCredentials: false\n      }\n    });\n    var opts = {\n      live: true,\n      retry: true,\n      ajax: {\n        withCredentials: false\n      }\n    };\n    this.db.replicate.to(pouchDbUrl, opts);\n    this.db.replicate.from(pouchDbUrl, opts);\n    console.log('ok');\n  }\n\n  getAllDocs() {\n    return this.db.allDocs({\n      include_docs: true,\n      descending: true\n    });\n  }\n\n}\n\nexport default new pouchDbService(config.couchDb.url);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/services/PouchDB.service.js"],"names":["PouchDB","config","pouchDbService","constructor","pouchDbUrl","db","ajax","withCredentials","opts","live","retry","replicate","to","from","console","log","getAllDocs","allDocs","include_docs","descending","couchDb","url"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKC,EAAL,GAAU,IAAIL,OAAJ,CAAY,QAAZ,EAAsB;AAC5BM,MAAAA,IAAI,EAAE;AACFC,QAAAA,eAAe,EAAE;AADf;AADsB,KAAtB,CAAV;AAKA,QAAIC,IAAI,GAAG;AACPC,MAAAA,IAAI,EAAE,IADC;AACKC,MAAAA,KAAK,EAAE,IADZ;AACkBJ,MAAAA,IAAI,EAAE;AAC3BC,QAAAA,eAAe,EAAE;AADU;AADxB,KAAX;AAKA,SAAKF,EAAL,CAAQM,SAAR,CAAkBC,EAAlB,CAAqBR,UAArB,EAAiCI,IAAjC;AACA,SAAKH,EAAL,CAAQM,SAAR,CAAkBE,IAAlB,CAAuBT,UAAvB,EAAmCI,IAAnC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAEH;;AAEDC,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKX,EAAL,CAAQY,OAAR,CAAgB;AAAEC,MAAAA,YAAY,EAAE,IAAhB;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KAAhB,CAAP;AACH;;AApBgB;;AAuBrB,eAAe,IAAIjB,cAAJ,CAAmBD,MAAM,CAACmB,OAAP,CAAeC,GAAlC,CAAf","sourcesContent":["import PouchDB from 'pouchdb';\nimport config from '../config';\n\nclass pouchDbService {\n    constructor(pouchDbUrl) {\n        this.db = new PouchDB('my_ddd', {\n            ajax: {\n                withCredentials: false\n            }\n        });\n        var opts = {\n            live: true, retry: true, ajax: {\n                withCredentials: false\n            }\n        };\n        this.db.replicate.to(pouchDbUrl, opts);\n        this.db.replicate.from(pouchDbUrl, opts);\n        console.log('ok')\n\n    }\n\n    getAllDocs() {\n        return this.db.allDocs({ include_docs: true, descending: true });\n    }\n}\n\nexport default new pouchDbService(config.couchDb.url);"]},"metadata":{},"sourceType":"module"}