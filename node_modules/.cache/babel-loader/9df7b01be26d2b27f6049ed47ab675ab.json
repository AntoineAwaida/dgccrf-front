{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visiteCreation/createVisite.container.js\";\n\n/* eslint-disable no-undef */\nimport React from 'react';\nimport { Form, Grid, GridRow, GridColumn, Icon, TextArea, Button } from 'semantic-ui-react';\nimport { DateInput } from 'semantic-ui-calendar-react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { changeNameOfPage, changeBackUrl, changeActivePage } from '../navbar/actions';\nimport { connect } from 'react-redux';\nimport PouchDbServices from '../../services';\nimport ControleComponent from './controles.container';\nlet visitesService = PouchDbServices.services.visite;\nlet dossierService = PouchDbServices.services.dossier;\n\nfunction mapStateToProps(state) {\n  return {\n    agentIdent: state.dataReducer.AGENT_DD_IDENT\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: newName => dispatch(changeNameOfPage(newName)),\n    changeBackUrl: newBackUrl => dispatch(changeBackUrl(newBackUrl)),\n    changeActivePage: () => dispatch(changeActivePage('mesDossiers', '/nouvelle-visite'))\n  };\n}\n\nclass CreateVisiteComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cpmm: false,\n      mutualisee: false,\n      date: '',\n      etab: '',\n      SIRET: '',\n      observations: '',\n      trame: '',\n      trameList: ['trame 1', 'trame 2'],\n      controlesList: []\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.changeNameOfPage('Création de visite');\n    this.props.changeBackUrl('/mes-dossiers'); // TODO : change for /dossier/:idDossier\n\n    this.props.changeActivePage();\n    dossierService.getAllActionCode().then(actionList => this.setState({\n      actionList\n    }));\n  }\n\n  onSubmit() {\n    visitesService.postControlesByVisite({\n      ETOB_RAISON_SOCIALE: this.state.etab,\n      ETOB_SIRET: this.state.SIRET,\n      VIS_DATE: this.state.date,\n      VIS_OBSERVATIONS: this.state.observations,\n      VIS_MUTUALISEE: this.state.mutualisee,\n      VIS_CPMM: this.state.cpmm,\n      trame: this.state.trame,\n      AG_IDENT: this.props.agentIdent\n    }, this.state.controlesList).then(() => window.alert('La visite a bien été ajoutée.'));\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      style: {\n        margin: 'auto',\n        textAlign: 'left'\n      },\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(GridRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(GridColumn, {\n      width: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Form.Checkbox, {\n      label: \"CPMM\",\n      onChange: e => this.setState({\n        cpmm: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Form.Checkbox, {\n      label: \"Visite Mutualis\\xE9e\",\n      onChange: e => this.setState({\n        mutualisee: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(DateInput, {\n      label: \"Date de la visite\",\n      name: \"date\",\n      placeholder: \"Date de la visite\",\n      required: true,\n      value: this.state.date,\n      iconPosition: \"right\",\n      onChange: (event, {\n        value\n      }) => this.setState({\n        date: value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      required: true,\n      label: \"Etablissement\",\n      placeholder: \"Raison Sociale\",\n      onChange: e => this.setState({\n        etab: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      required: true,\n      label: \"SIRET\",\n      placeholder: \"SIRET\",\n      onChange: e => this.setState({\n        siret: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      style: {\n        margin: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        width: '100%',\n        margin: 0\n      },\n      verticalAlign: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(GridRow, {\n      style: {\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 14,\n      style: {\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Form.Select, {\n      fluid: true,\n      placeholder: \"Tr\\xE2me\",\n      label: \"Tr\\xE2me associ\\xE9e\",\n      style: {\n        width: '100%'\n      },\n      options: this.state.trameList.map(trame => ({\n        key: trame,\n        text: trame,\n        value: trame\n      })),\n      onChange: (e, {\n        value\n      }) => this.setState({\n        trame: value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      width: 1,\n      style: {\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/nouvelle-trame\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        textAlign: 'center',\n        cursor: 'pointer',\n        paddingBottom: '0.3em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus\",\n      size: \"big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))))))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      placeholder: \"Observations\",\n      onChange: e => this.setState({\n        observations: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })))), React.createElement(ControleComponent, {\n      controles: this.state.controlesList,\n      changeControle: controlesList => this.setState({\n        controlesList\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        marginTop: '20px'\n      },\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Valider\"))));\n  }\n\n}\n\nCreateVisiteComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired,\n  agentIdent: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateVisiteComponent);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visiteCreation/createVisite.container.js"],"names":["React","Form","Grid","GridRow","GridColumn","Icon","TextArea","Button","DateInput","Link","PropTypes","changeNameOfPage","changeBackUrl","changeActivePage","connect","PouchDbServices","ControleComponent","visitesService","services","visite","dossierService","dossier","mapStateToProps","state","agentIdent","dataReducer","AGENT_DD_IDENT","mapDispatchToProps","dispatch","newName","newBackUrl","CreateVisiteComponent","Component","constructor","props","cpmm","mutualisee","date","etab","SIRET","observations","trame","trameList","controlesList","onSubmit","bind","componentDidMount","getAllActionCode","then","actionList","setState","postControlesByVisite","ETOB_RAISON_SOCIALE","ETOB_SIRET","VIS_DATE","VIS_OBSERVATIONS","VIS_MUTUALISEE","VIS_CPMM","AG_IDENT","window","alert","render","margin","textAlign","e","target","value","event","siret","width","display","padding","map","key","text","cursor","paddingBottom","marginTop","propTypes","func","isRequired","string"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,OAHF,EAIEC,UAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,MAPF,QAQO,mBARP;AASA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,gBAHF,QAIO,mBAJP;AAKA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,gBAA5B;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AACA,IAAIC,cAAc,GAAGF,eAAe,CAACG,QAAhB,CAAyBC,MAA9C;AACA,IAAIC,cAAc,GAAGL,eAAe,CAACG,QAAhB,CAAyBG,OAA9C;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,UAAU,EAAED,KAAK,CAACE,WAAN,CAAkBC;AADzB,GAAP;AAGD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLjB,IAAAA,gBAAgB,EAAEkB,OAAO,IAAID,QAAQ,CAACjB,gBAAgB,CAACkB,OAAD,CAAjB,CADhC;AAELjB,IAAAA,aAAa,EAAEkB,UAAU,IAAIF,QAAQ,CAAChB,aAAa,CAACkB,UAAD,CAAd,CAFhC;AAGLjB,IAAAA,gBAAgB,EAAE,MAChBe,QAAQ,CAACf,gBAAgB,CAAC,aAAD,EAAgB,kBAAhB,CAAjB;AAJL,GAAP;AAMD;;AAED,MAAMkB,qBAAN,SAAoC/B,KAAK,CAACgC,SAA1C,CAAoD;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKX,KAAL,GAAa;AACXY,MAAAA,IAAI,EAAE,KADK;AAEXC,MAAAA,UAAU,EAAE,KAFD;AAGXC,MAAAA,IAAI,EAAE,EAHK;AAIXC,MAAAA,IAAI,EAAE,EAJK;AAKXC,MAAAA,KAAK,EAAE,EALI;AAMXC,MAAAA,YAAY,EAAE,EANH;AAOXC,MAAAA,KAAK,EAAE,EAPI;AAQXC,MAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,SAAZ,CARA;AASXC,MAAAA,aAAa,EAAE;AATJ,KAAb;AAWA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,KAAL,CAAWvB,gBAAX,CAA4B,oBAA5B;AACA,SAAKuB,KAAL,CAAWtB,aAAX,CAAyB,eAAzB,EAFkB,CAEyB;;AAC3C,SAAKsB,KAAL,CAAWrB,gBAAX;AACAO,IAAAA,cAAc,CACX2B,gBADH,GAEGC,IAFH,CAEQC,UAAU,IAAI,KAAKC,QAAL,CAAc;AAAED,MAAAA;AAAF,KAAd,CAFtB;AAGD;;AAEDL,EAAAA,QAAQ,GAAG;AACT3B,IAAAA,cAAc,CACXkC,qBADH,CAEI;AACEC,MAAAA,mBAAmB,EAAE,KAAK7B,KAAL,CAAWe,IADlC;AAEEe,MAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWgB,KAFzB;AAGEe,MAAAA,QAAQ,EAAE,KAAK/B,KAAL,CAAWc,IAHvB;AAIEkB,MAAAA,gBAAgB,EAAE,KAAKhC,KAAL,CAAWiB,YAJ/B;AAKEgB,MAAAA,cAAc,EAAE,KAAKjC,KAAL,CAAWa,UAL7B;AAMEqB,MAAAA,QAAQ,EAAE,KAAKlC,KAAL,CAAWY,IANvB;AAOEM,MAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWkB,KAPpB;AAQEiB,MAAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWV;AARvB,KAFJ,EAYI,KAAKD,KAAL,CAAWoB,aAZf,EAcGK,IAdH,CAcQ,MAAMW,MAAM,CAACC,KAAP,CAAa,+BAAb,CAdd;AAeD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAAb;AAAoD,MAAA,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKnB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,QAAN;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,QAAQ,EAAEoB,CAAC,IAAI,KAAKd,QAAL,CAAc;AAAEf,QAAAA,IAAI,EAAE6B,CAAC,CAACC,MAAF,CAASC;AAAjB,OAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,IAAD,CAAM,QAAN;AACE,MAAA,KAAK,EAAC,sBADR;AAEE,MAAA,QAAQ,EAAEF,CAAC,IAAI,KAAKd,QAAL,CAAc;AAAEd,QAAAA,UAAU,EAAE4B,CAAC,CAACC,MAAF,CAASC;AAAvB,OAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,EAWE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,mBADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,mBAHd;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,KAAK,EAAE,KAAK3C,KAAL,CAAWc,IALpB;AAME,MAAA,YAAY,EAAC,OANf;AAOE,MAAA,QAAQ,EAAE,CAAC8B,KAAD,EAAQ;AAAED,QAAAA;AAAF,OAAR,KACR,KAAKhB,QAAL,CAAc;AAAEb,QAAAA,IAAI,EAAE6B;AAAR,OAAd,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXF,EAwBE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,MADP;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,KAAK,EAAC,eAHR;AAIE,MAAA,WAAW,EAAC,gBAJd;AAKE,MAAA,QAAQ,EAAEF,CAAC,IAAI,KAAKd,QAAL,CAAc;AAAEZ,QAAAA,IAAI,EAAE0B,CAAC,CAACC,MAAF,CAASC;AAAjB,OAAd,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,MADP;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,WAAW,EAAC,OAJd;AAKE,MAAA,QAAQ,EAAEF,CAAC,IAAI,KAAKd,QAAL,CAAc;AAAEkB,QAAAA,KAAK,EAAEJ,CAAC,CAACC,MAAF,CAASC;AAAlB,OAAd,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CAxBF,EAyCE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEJ,QAAAA,MAAM,EAAE;AAAV,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAEO,QAAAA,KAAK,EAAE,MAAT;AAAiBP,QAAAA,MAAM,EAAE;AAAzB,OADT;AAEE,MAAA,aAAa,EAAC,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEQ,QAAAA,OAAO,EAAE;AAAX,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,EAApB;AAAwB,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AACE,MAAA,KAAK,MADP;AAEE,MAAA,WAAW,EAAC,UAFd;AAGE,MAAA,KAAK,EAAC,sBAHR;AAIE,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE;AAAT,OAJT;AAKE,MAAA,OAAO,EAAE,KAAK9C,KAAL,CAAWmB,SAAX,CAAqB8B,GAArB,CAAyB/B,KAAK,KAAK;AAC1CgC,QAAAA,GAAG,EAAEhC,KADqC;AAE1CiC,QAAAA,IAAI,EAAEjC,KAFoC;AAG1CyB,QAAAA,KAAK,EAAEzB;AAHmC,OAAL,CAA9B,CALX;AAUE,MAAA,QAAQ,EAAE,CAACuB,CAAD,EAAI;AAAEE,QAAAA;AAAF,OAAJ,KACR,KAAKhB,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAEyB;AAAT,OAAd,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAkBE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAuB,MAAA,KAAK,EAAE;AAAEK,QAAAA,OAAO,EAAE;AAAX,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLF,QAAAA,KAAK,EAAE,MADF;AAELN,QAAAA,SAAS,EAAE,QAFN;AAGLY,QAAAA,MAAM,EAAE,SAHH;AAILC,QAAAA,aAAa,EAAE;AAJV,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,IAAI,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,CADF,CAlBF,CAJF,CADF,CAzCF,EAiFE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,WAAW,EAAC,cADd;AAEE,MAAA,QAAQ,EAAEZ,CAAC,IACT,KAAKd,QAAL,CAAc;AAAEV,QAAAA,YAAY,EAAEwB,CAAC,CAACC,MAAF,CAASC;AAAzB,OAAd,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAjFF,CADF,EA6FE,oBAAC,iBAAD;AACE,MAAA,SAAS,EAAE,KAAK3C,KAAL,CAAWoB,aADxB;AAEE,MAAA,cAAc,EAAEA,aAAa,IAAI,KAAKO,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd,CAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7FF,EAiGE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEkC,QAAAA,SAAS,EAAE;AAAb,OAAf;AAAsC,MAAA,OAAO,EAAE,KAAKjC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAjGF,CADF,CADF,CADF;AA2GD;;AAxJiD;;AA2JpDb,qBAAqB,CAAC+C,SAAtB,GAAkC;AAChCnE,EAAAA,gBAAgB,EAAED,SAAS,CAACqE,IAAV,CAAeC,UADD;AAEhCpE,EAAAA,aAAa,EAAEF,SAAS,CAACqE,IAAV,CAAeC,UAFE;AAGhCnE,EAAAA,gBAAgB,EAAEH,SAAS,CAACqE,IAAV,CAAeC,UAHD;AAIhCxD,EAAAA,UAAU,EAAEd,SAAS,CAACuE,MAAV,CAAiBD;AAJG,CAAlC;AAOA,eAAelE,OAAO,CACpBQ,eADoB,EAEpBK,kBAFoB,CAAP,CAGbI,qBAHa,CAAf","sourcesContent":["/* eslint-disable no-undef */\nimport React from 'react';\nimport {\n  Form,\n  Grid,\n  GridRow,\n  GridColumn,\n  Icon,\n  TextArea,\n  Button\n} from 'semantic-ui-react';\nimport { DateInput } from 'semantic-ui-calendar-react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport {\n  changeNameOfPage,\n  changeBackUrl,\n  changeActivePage\n} from '../navbar/actions';\nimport { connect } from 'react-redux';\nimport PouchDbServices from '../../services';\nimport ControleComponent from './controles.container';\nlet visitesService = PouchDbServices.services.visite;\nlet dossierService = PouchDbServices.services.dossier;\n\nfunction mapStateToProps(state) {\n  return {\n    agentIdent: state.dataReducer.AGENT_DD_IDENT\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: newName => dispatch(changeNameOfPage(newName)),\n    changeBackUrl: newBackUrl => dispatch(changeBackUrl(newBackUrl)),\n    changeActivePage: () =>\n      dispatch(changeActivePage('mesDossiers', '/nouvelle-visite'))\n  };\n}\n\nclass CreateVisiteComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cpmm: false,\n      mutualisee: false,\n      date: '',\n      etab: '',\n      SIRET: '',\n      observations: '',\n      trame: '',\n      trameList: ['trame 1', 'trame 2'],\n      controlesList: []\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.changeNameOfPage('Création de visite');\n    this.props.changeBackUrl('/mes-dossiers'); // TODO : change for /dossier/:idDossier\n    this.props.changeActivePage();\n    dossierService\n      .getAllActionCode()\n      .then(actionList => this.setState({ actionList }));\n  }\n\n  onSubmit() {\n    visitesService\n      .postControlesByVisite(\n        {\n          ETOB_RAISON_SOCIALE: this.state.etab,\n          ETOB_SIRET: this.state.SIRET,\n          VIS_DATE: this.state.date,\n          VIS_OBSERVATIONS: this.state.observations,\n          VIS_MUTUALISEE: this.state.mutualisee,\n          VIS_CPMM: this.state.cpmm,\n          trame: this.state.trame,\n          AG_IDENT: this.props.agentIdent\n        },\n        this.state.controlesList\n      )\n      .then(() => window.alert('La visite a bien été ajoutée.'));\n  }\n\n  render() {\n    return (\n      <Grid style={{ margin: 'auto', textAlign: 'left' }} centered>\n        <GridRow>\n          <GridColumn width={14}>\n            <Form onSubmit={this.onSubmit}>\n              <Form.Group widths=\"equal\">\n                <Form.Checkbox\n                  label=\"CPMM\"\n                  onChange={e => this.setState({ cpmm: e.target.value })}\n                />\n                <Form.Checkbox\n                  label=\"Visite Mutualisée\"\n                  onChange={e => this.setState({ mutualisee: e.target.value })}\n                />\n              </Form.Group>\n              <Form.Group widths=\"equal\">\n                <DateInput\n                  label=\"Date de la visite\"\n                  name=\"date\"\n                  placeholder=\"Date de la visite\"\n                  required\n                  value={this.state.date}\n                  iconPosition=\"right\"\n                  onChange={(event, { value }) =>\n                    this.setState({ date: value })\n                  }\n                />\n              </Form.Group>\n              <Form.Group widths=\"equal\">\n                <Form.Input\n                  fluid\n                  required\n                  label=\"Etablissement\"\n                  placeholder=\"Raison Sociale\"\n                  onChange={e => this.setState({ etab: e.target.value })}\n                />\n\n                <Form.Input\n                  fluid\n                  required\n                  label=\"SIRET\"\n                  placeholder=\"SIRET\"\n                  onChange={e => this.setState({ siret: e.target.value })}\n                />\n              </Form.Group>\n              <Form.Group style={{ margin: 0 }}>\n                <Grid\n                  style={{ width: '100%', margin: 0 }}\n                  verticalAlign=\"bottom\"\n                >\n                  <GridRow style={{ display: 'flex' }}>\n                    <Grid.Column width={14} style={{ padding: 0 }}>\n                      <Form.Select\n                        fluid\n                        placeholder=\"Trâme\"\n                        label=\"Trâme associée\"\n                        style={{ width: '100%' }}\n                        options={this.state.trameList.map(trame => ({\n                          key: trame,\n                          text: trame,\n                          value: trame\n                        }))}\n                        onChange={(e, { value }) =>\n                          this.setState({ trame: value })\n                        }\n                      />\n                    </Grid.Column>\n\n                    <Grid.Column width={1} style={{ padding: 0 }}>\n                      <Link to=\"/nouvelle-trame\">\n                        <div\n                          style={{\n                            width: '100%',\n                            textAlign: 'center',\n                            cursor: 'pointer',\n                            paddingBottom: '0.3em'\n                          }}\n                        >\n                          <Icon name=\"plus\" size=\"big\" />\n                        </div>\n                      </Link>\n                    </Grid.Column>\n                  </GridRow>\n                </Grid>\n              </Form.Group>\n              <Form.Group>\n                <Form.Field width={16}>\n                  <TextArea\n                    placeholder=\"Observations\"\n                    onChange={e =>\n                      this.setState({ observations: e.target.value })\n                    }\n                  />\n                </Form.Field>\n              </Form.Group>\n            </Form>\n            <ControleComponent\n              controles={this.state.controlesList}\n              changeControle={controlesList => this.setState({ controlesList })}\n            />\n            <Button style={{ marginTop: '20px' }} onClick={this.onSubmit}>\n              Valider\n            </Button>\n          </GridColumn>\n        </GridRow>\n      </Grid>\n    );\n  }\n}\n\nCreateVisiteComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired,\n  agentIdent: PropTypes.string.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateVisiteComponent);\n"]},"metadata":{},"sourceType":"module"}