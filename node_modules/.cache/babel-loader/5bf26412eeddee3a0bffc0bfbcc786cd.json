{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visite/trame/index.js\";\nimport React from 'react';\nimport Avant from './avant.container';\nimport Pendant from './pendant.container';\nimport Apres from './après.container';\nimport SwipeableViews from 'react-swipeable-views';\nimport './visite.css';\nimport PouchDbService from '../../../services/index';\nimport MyActivityIndicator from '../../../components/myActivityIndicator.component';\nimport PropTypes from 'prop-types';\nimport EditComponent from './edit';\n\nclass Trame extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      activeIndex: 0,\n      isLoading: true,\n      trame: [],\n      visite: null,\n      rev: null\n    };\n    this.getActiveIndex = this.getActiveIndex.bind(this);\n    this.setStatus = this.setStatus.bind(this);\n    this.closeEdit = this.closeEdit.bind(this);\n    this.setText = this.setText.bind(this);\n    this.sendText = this.sendText.bind(this);\n  }\n\n  async getTrame() {\n    const visite = await PouchDbService.services.visite.getVisiteById(this.props.match.params.id);\n    this.setState({\n      visite: visite,\n      rev: visite._rev,\n      trame: visite.trame,\n      isLoading: false\n    });\n  }\n\n  componentDidMount() {\n    this.getTrame();\n  }\n\n  async closeEdit() {\n    await this.getTrame();\n    this.props.close();\n  }\n\n  sendText() {\n    PouchDbService.services.visite.updateTrame(this.state.visite, this.state.rev, this.state.trame).then(res => {\n      this.setState({\n        rev: res.rev\n      });\n    });\n  }\n\n  setText(newtext, index) {\n    let trame = this.state.trame;\n\n    if (this.state.activeIndex === 0) {\n      trame.trameAvant[index].innerContent = newtext;\n      this.setState({\n        trame\n      });\n    } else if (this.state.activeIndex === 1) {\n      trame.tramePendant[index].innerContent = newtext;\n      this.setState({\n        trame\n      });\n    } else {\n      trame.trameAprès[index].innerContent = newtext;\n      this.setState({\n        trame\n      });\n    }\n  }\n\n  setStatus(newstatus, index) {\n    let trame = this.state.trame;\n\n    if (this.state.activeIndex === 0) {\n      trame.trameAvant[index].status = newstatus;\n      this.setState({\n        trame\n      });\n    } else if (this.state.activeIndex === 1) {\n      trame.tramePendant[index].status = newstatus;\n      this.setState({\n        trame\n      });\n    } else {\n      trame.trameAprès[index].status = newstatus;\n      this.setState({\n        trame\n      });\n    }\n\n    PouchDbService.services.visite.updateTrame(this.state.visite, this.state.rev, trame).then(res => {\n      this.setState({\n        rev: res.rev\n      });\n    });\n  }\n\n  getActiveIndex(e) {\n    this.setState({\n      activeIndex: e\n    });\n  }\n\n  render() {\n    return this.state.isLoading ? React.createElement(MyActivityIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%',\n        height: '100%',\n        justifyContent: 'center',\n        overflow: 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.props.editMode ? React.createElement(EditComponent, Object.assign({\n      visite: this.state.visite,\n      setStatus: this.setStatus,\n      isLoading: this.state.isLoading,\n      trame: this.state.trame,\n      closeEdit: this.closeEdit\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })) : React.createElement(SwipeableViews, {\n      style: {\n        width: '100%'\n      },\n      className: \"hidescrollbar\",\n      index: this.props.index,\n      onChangeIndex: this.props.handleChangeIndex,\n      slideClassName: \"hidescrollbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Avant, Object.assign({\n      visite: this.state.visite,\n      setStatus: this.setStatus,\n      setText: this.setText,\n      sendText: this.sendText,\n      isLoading: this.state.isLoading,\n      trame: this.state.trame,\n      closeEdit: this.closeEdit\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(Pendant, Object.assign({\n      visite: this.state.visite,\n      setStatus: this.setStatus,\n      setText: this.setText,\n      sendText: this.sendText,\n      isLoading: this.state.isLoading,\n      trame: this.state.trame,\n      closeEdit: this.closeEdit\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(Apres, Object.assign({\n      visite: this.state.visite,\n      setStatus: this.setStatus,\n      sendText: this.sendText,\n      setText: this.setText,\n      isLoading: this.state.isLoading,\n      trame: this.state.trame,\n      closeEdit: this.closeEdit\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nTrame.propTypes = {\n  match: PropTypes.any,\n  handleChangeIndex: PropTypes.func,\n  index: PropTypes.number\n};\nexport default Trame;","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visite/trame/index.js"],"names":["React","Avant","Pendant","Apres","SwipeableViews","PouchDbService","MyActivityIndicator","PropTypes","EditComponent","Trame","Component","constructor","props","context","state","activeIndex","isLoading","trame","visite","rev","getActiveIndex","bind","setStatus","closeEdit","setText","sendText","getTrame","services","getVisiteById","match","params","id","setState","_rev","componentDidMount","close","updateTrame","then","res","newtext","index","trameAvant","innerContent","tramePendant","trameAprès","newstatus","status","e","render","display","width","height","justifyContent","overflow","editMode","handleChangeIndex","propTypes","any","func","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,OAAO,cAAP;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,mBAAP,MAAgC,mDAAhC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,QAA1B;;AAEA,MAAMC,KAAN,SAAoBT,KAAK,CAACU,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,CADF;AAEXC,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,MAAM,EAAE,IAJG;AAKXC,MAAAA,GAAG,EAAE;AALM,KAAb;AAOA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKG,OAAL,GAAe,KAAKA,OAAL,CAAaH,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKI,QAAL,GAAgB,KAAKA,QAAL,CAAcJ,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAED,QAAMK,QAAN,GAAiB;AACf,UAAMR,MAAM,GAAG,MAAMb,cAAc,CAACsB,QAAf,CAAwBT,MAAxB,CAA+BU,aAA/B,CACnB,KAAKhB,KAAL,CAAWiB,KAAX,CAAiBC,MAAjB,CAAwBC,EADL,CAArB;AAIA,SAAKC,QAAL,CAAc;AACZd,MAAAA,MAAM,EAAEA,MADI;AAEZC,MAAAA,GAAG,EAAED,MAAM,CAACe,IAFA;AAGZhB,MAAAA,KAAK,EAAEC,MAAM,CAACD,KAHF;AAIZD,MAAAA,SAAS,EAAE;AAJC,KAAd;AAMD;;AAEDkB,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,QAAL;AACD;;AAED,QAAMH,SAAN,GAAkB;AAChB,UAAM,KAAKG,QAAL,EAAN;AACA,SAAKd,KAAL,CAAWuB,KAAX;AACD;;AAEDV,EAAAA,QAAQ,GAAG;AACTpB,IAAAA,cAAc,CAACsB,QAAf,CAAwBT,MAAxB,CACGkB,WADH,CACe,KAAKtB,KAAL,CAAWI,MAD1B,EACkC,KAAKJ,KAAL,CAAWK,GAD7C,EACkD,KAAKL,KAAL,CAAWG,KAD7D,EAEGoB,IAFH,CAEQC,GAAG,IAAI;AACX,WAAKN,QAAL,CAAc;AAAEb,QAAAA,GAAG,EAAEmB,GAAG,CAACnB;AAAX,OAAd;AACD,KAJH;AAKD;;AAEDK,EAAAA,OAAO,CAACe,OAAD,EAAUC,KAAV,EAAiB;AACtB,QAAIvB,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAvB;;AACA,QAAI,KAAKH,KAAL,CAAWC,WAAX,KAA2B,CAA/B,EAAkC;AAChCE,MAAAA,KAAK,CAACwB,UAAN,CAAiBD,KAAjB,EAAwBE,YAAxB,GAAuCH,OAAvC;AACA,WAAKP,QAAL,CAAc;AACZf,QAAAA;AADY,OAAd;AAGD,KALD,MAKO,IAAI,KAAKH,KAAL,CAAWC,WAAX,KAA2B,CAA/B,EAAkC;AACvCE,MAAAA,KAAK,CAAC0B,YAAN,CAAmBH,KAAnB,EAA0BE,YAA1B,GAAyCH,OAAzC;AACA,WAAKP,QAAL,CAAc;AACZf,QAAAA;AADY,OAAd;AAGD,KALM,MAKA;AACLA,MAAAA,KAAK,CAAC2B,UAAN,CAAiBJ,KAAjB,EAAwBE,YAAxB,GAAuCH,OAAvC;AACA,WAAKP,QAAL,CAAc;AACZf,QAAAA;AADY,OAAd;AAGD;AACF;;AAEDK,EAAAA,SAAS,CAACuB,SAAD,EAAYL,KAAZ,EAAmB;AAC1B,QAAIvB,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAvB;;AACA,QAAI,KAAKH,KAAL,CAAWC,WAAX,KAA2B,CAA/B,EAAkC;AAChCE,MAAAA,KAAK,CAACwB,UAAN,CAAiBD,KAAjB,EAAwBM,MAAxB,GAAiCD,SAAjC;AACA,WAAKb,QAAL,CAAc;AACZf,QAAAA;AADY,OAAd;AAGD,KALD,MAKO,IAAI,KAAKH,KAAL,CAAWC,WAAX,KAA2B,CAA/B,EAAkC;AACvCE,MAAAA,KAAK,CAAC0B,YAAN,CAAmBH,KAAnB,EAA0BM,MAA1B,GAAmCD,SAAnC;AACA,WAAKb,QAAL,CAAc;AACZf,QAAAA;AADY,OAAd;AAGD,KALM,MAKA;AACLA,MAAAA,KAAK,CAAC2B,UAAN,CAAiBJ,KAAjB,EAAwBM,MAAxB,GAAiCD,SAAjC;AACA,WAAKb,QAAL,CAAc;AACZf,QAAAA;AADY,OAAd;AAGD;;AACDZ,IAAAA,cAAc,CAACsB,QAAf,CAAwBT,MAAxB,CACGkB,WADH,CACe,KAAKtB,KAAL,CAAWI,MAD1B,EACkC,KAAKJ,KAAL,CAAWK,GAD7C,EACkDF,KADlD,EAEGoB,IAFH,CAEQC,GAAG,IAAI;AACX,WAAKN,QAAL,CAAc;AAAEb,QAAAA,GAAG,EAAEmB,GAAG,CAACnB;AAAX,OAAd;AACD,KAJH;AAKD;;AAEDC,EAAAA,cAAc,CAAC2B,CAAD,EAAI;AAChB,SAAKf,QAAL,CAAc;AAAEjB,MAAAA,WAAW,EAAEgC;AAAf,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKlC,KAAL,CAAWE,SAAX,GACL,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,GAGL;AACE,MAAA,KAAK,EAAE;AACLiC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,KAAK,EAAE,MAFF;AAGLC,QAAAA,MAAM,EAAE,MAHH;AAILC,QAAAA,cAAc,EAAE,QAJX;AAKLC,QAAAA,QAAQ,EAAE;AALL,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,KAAKzC,KAAL,CAAW0C,QAAX,GACC,oBAAC,aAAD;AACE,MAAA,MAAM,EAAE,KAAKxC,KAAL,CAAWI,MADrB;AAEE,MAAA,SAAS,EAAE,KAAKI,SAFlB;AAGE,MAAA,SAAS,EAAE,KAAKR,KAAL,CAAWE,SAHxB;AAIE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KAJpB;AAKE,MAAA,SAAS,EAAE,KAAKM;AALlB,OAMM,KAAKX,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,GAUC,oBAAC,cAAD;AACE,MAAA,KAAK,EAAE;AAAEsC,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,SAAS,EAAC,eAFZ;AAGE,MAAA,KAAK,EAAE,KAAKtC,KAAL,CAAW4B,KAHpB;AAIE,MAAA,aAAa,EAAE,KAAK5B,KAAL,CAAW2C,iBAJ5B;AAKE,MAAA,cAAc,EAAC,eALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE,KAAKzC,KAAL,CAAWI,MADrB;AAEE,MAAA,SAAS,EAAE,KAAKI,SAFlB;AAGE,MAAA,OAAO,EAAE,KAAKE,OAHhB;AAIE,MAAA,QAAQ,EAAE,KAAKC,QAJjB;AAKE,MAAA,SAAS,EAAE,KAAKX,KAAL,CAAWE,SALxB;AAME,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KANpB;AAOE,MAAA,SAAS,EAAE,KAAKM;AAPlB,OAQM,KAAKX,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPF,EAiBE,oBAAC,OAAD;AACE,MAAA,MAAM,EAAE,KAAKE,KAAL,CAAWI,MADrB;AAEE,MAAA,SAAS,EAAE,KAAKI,SAFlB;AAGE,MAAA,OAAO,EAAE,KAAKE,OAHhB;AAIE,MAAA,QAAQ,EAAE,KAAKC,QAJjB;AAKE,MAAA,SAAS,EAAE,KAAKX,KAAL,CAAWE,SALxB;AAME,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KANpB;AAOE,MAAA,SAAS,EAAE,KAAKM;AAPlB,OAQM,KAAKX,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAjBF,EA2BE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE,KAAKE,KAAL,CAAWI,MADrB;AAEE,MAAA,SAAS,EAAE,KAAKI,SAFlB;AAGE,MAAA,QAAQ,EAAE,KAAKG,QAHjB;AAIE,MAAA,OAAO,EAAE,KAAKD,OAJhB;AAKE,MAAA,SAAS,EAAE,KAAKV,KAAL,CAAWE,SALxB;AAME,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KANpB;AAOE,MAAA,SAAS,EAAE,KAAKM;AAPlB,OAQM,KAAKX,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA3BF,CAnBJ,CAHF;AA+DD;;AAhKiC;;AAmKpCH,KAAK,CAAC+C,SAAN,GAAkB;AAChB3B,EAAAA,KAAK,EAAEtB,SAAS,CAACkD,GADD;AAEhBF,EAAAA,iBAAiB,EAAEhD,SAAS,CAACmD,IAFb;AAGhBlB,EAAAA,KAAK,EAAEjC,SAAS,CAACoD;AAHD,CAAlB;AAMA,eAAelD,KAAf","sourcesContent":["import React from 'react';\n\nimport Avant from './avant.container';\nimport Pendant from './pendant.container';\nimport Apres from './après.container';\nimport SwipeableViews from 'react-swipeable-views';\n\nimport './visite.css';\nimport PouchDbService from '../../../services/index';\nimport MyActivityIndicator from '../../../components/myActivityIndicator.component';\n\nimport PropTypes from 'prop-types';\nimport EditComponent from './edit';\n\nclass Trame extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      activeIndex: 0,\n      isLoading: true,\n      trame: [],\n      visite: null,\n      rev: null\n    };\n    this.getActiveIndex = this.getActiveIndex.bind(this);\n    this.setStatus = this.setStatus.bind(this);\n    this.closeEdit = this.closeEdit.bind(this);\n    this.setText = this.setText.bind(this);\n    this.sendText = this.sendText.bind(this);\n  }\n\n  async getTrame() {\n    const visite = await PouchDbService.services.visite.getVisiteById(\n      this.props.match.params.id\n    );\n\n    this.setState({\n      visite: visite,\n      rev: visite._rev,\n      trame: visite.trame,\n      isLoading: false\n    });\n  }\n\n  componentDidMount() {\n    this.getTrame();\n  }\n\n  async closeEdit() {\n    await this.getTrame();\n    this.props.close();\n  }\n\n  sendText() {\n    PouchDbService.services.visite\n      .updateTrame(this.state.visite, this.state.rev, this.state.trame)\n      .then(res => {\n        this.setState({ rev: res.rev });\n      });\n  }\n\n  setText(newtext, index) {\n    let trame = this.state.trame;\n    if (this.state.activeIndex === 0) {\n      trame.trameAvant[index].innerContent = newtext;\n      this.setState({\n        trame\n      });\n    } else if (this.state.activeIndex === 1) {\n      trame.tramePendant[index].innerContent = newtext;\n      this.setState({\n        trame\n      });\n    } else {\n      trame.trameAprès[index].innerContent = newtext;\n      this.setState({\n        trame\n      });\n    }\n  }\n\n  setStatus(newstatus, index) {\n    let trame = this.state.trame;\n    if (this.state.activeIndex === 0) {\n      trame.trameAvant[index].status = newstatus;\n      this.setState({\n        trame\n      });\n    } else if (this.state.activeIndex === 1) {\n      trame.tramePendant[index].status = newstatus;\n      this.setState({\n        trame\n      });\n    } else {\n      trame.trameAprès[index].status = newstatus;\n      this.setState({\n        trame\n      });\n    }\n    PouchDbService.services.visite\n      .updateTrame(this.state.visite, this.state.rev, trame)\n      .then(res => {\n        this.setState({ rev: res.rev });\n      });\n  }\n\n  getActiveIndex(e) {\n    this.setState({ activeIndex: e });\n  }\n\n  render() {\n    return this.state.isLoading ? (\n      <MyActivityIndicator />\n    ) : (\n      <div\n        style={{\n          display: 'flex',\n          width: '100%',\n          height: '100%',\n          justifyContent: 'center',\n          overflow: 'hidden'\n        }}\n      >\n        {this.props.editMode ? (\n          <EditComponent\n            visite={this.state.visite}\n            setStatus={this.setStatus}\n            isLoading={this.state.isLoading}\n            trame={this.state.trame}\n            closeEdit={this.closeEdit}\n            {...this.props}\n          />\n        ) : (\n          <SwipeableViews\n            style={{ width: '100%' }}\n            className=\"hidescrollbar\"\n            index={this.props.index}\n            onChangeIndex={this.props.handleChangeIndex}\n            slideClassName=\"hidescrollbar\"\n          >\n            <Avant\n              visite={this.state.visite}\n              setStatus={this.setStatus}\n              setText={this.setText}\n              sendText={this.sendText}\n              isLoading={this.state.isLoading}\n              trame={this.state.trame}\n              closeEdit={this.closeEdit}\n              {...this.props}\n            />\n            <Pendant\n              visite={this.state.visite}\n              setStatus={this.setStatus}\n              setText={this.setText}\n              sendText={this.sendText}\n              isLoading={this.state.isLoading}\n              trame={this.state.trame}\n              closeEdit={this.closeEdit}\n              {...this.props}\n            />\n            <Apres\n              visite={this.state.visite}\n              setStatus={this.setStatus}\n              sendText={this.sendText}\n              setText={this.setText}\n              isLoading={this.state.isLoading}\n              trame={this.state.trame}\n              closeEdit={this.closeEdit}\n              {...this.props}\n            />\n          </SwipeableViews>\n        )}\n      </div>\n    );\n  }\n}\n\nTrame.propTypes = {\n  match: PropTypes.any,\n  handleChangeIndex: PropTypes.func,\n  index: PropTypes.number\n};\n\nexport default Trame;\n"]},"metadata":{},"sourceType":"module"}