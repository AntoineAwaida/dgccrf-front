{"ast":null,"code":"import _extends from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/trameList.js\";\nimport React, { Component } from 'react';\nimport TrameComponent from './trame';\nimport SwipeableViews from 'react-swipeable-views';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nexport default class TrameList extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      onDrag: false\n    };\n  }\n\n  render() {\n    const props = _extends({}, this.props);\n\n    let tasks = this.props.activeIndex === 0 ? this.props.taskListAvant : this.props.activeIndex === 1 ? this.props.taskListPendant : this.props.taskListAprès;\n    return !this.props.locked ? React.createElement(SwipeableViews, {\n      style: {\n        height: '100%'\n      },\n      className: \"hidescrollbar\",\n      index: this.props.activeIndex,\n      onChangeIndex: this.props.handleChangeIndex,\n      slideClassName: \"hidescrollbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(TrameComponent, Object.assign({\n      taskList: tasks\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(TrameComponent, Object.assign({\n      taskList: tasks\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(TrameComponent, Object.assign({\n      taskList: tasks\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: \"hidescrollbar\",\n      slideClassName: \"hidescrollbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(DragDropContext, {\n      onDragEnd: this.props.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(TrameComponent, Object.assign({\n      taskList: tasks\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), provided.placeholder))));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/trameList.js"],"names":["React","Component","TrameComponent","SwipeableViews","DragDropContext","Droppable","TrameList","constructor","props","context","state","onDrag","render","tasks","activeIndex","taskListAvant","taskListPendant","taskListAprès","locked","height","handleChangeIndex","onDragEnd","provided","innerRef","droppableProps","placeholder"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,SAA3B;AAEA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,qBAA3C;AAEA,eAAe,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAC/CM,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACIJ,KADJ,gBACc,KAAKA,KADnB;;AAEP,QAAIK,KAAK,GACP,KAAKL,KAAL,CAAWM,WAAX,KAA2B,CAA3B,GACI,KAAKN,KAAL,CAAWO,aADf,GAEI,KAAKP,KAAL,CAAWM,WAAX,KAA2B,CAA3B,GACA,KAAKN,KAAL,CAAWQ,eADX,GAEA,KAAKR,KAAL,CAAWS,aALjB;AAOA,WAAO,CAAC,KAAKT,KAAL,CAAWU,MAAZ,GACL,oBAAC,cAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADT;AAEE,MAAA,SAAS,EAAC,eAFZ;AAGE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWM,WAHpB;AAIE,MAAA,aAAa,EAAE,KAAKN,KAAL,CAAWY,iBAJ5B;AAKE,MAAA,cAAc,EAAC,eALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEP;AAA1B,OAAqCL,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPF,EAQE,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEK;AAA1B,OAAqCL,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OARF,EASE,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEK;AAA1B,OAAqCL,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OATF,CADK,GAaL;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,cAAc,EAAC,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,KAAKA,KAAL,CAAWa,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,QAAQ,IACP;AAAK,MAAA,GAAG,EAAEA,QAAQ,CAACC;AAAnB,OAAiCD,QAAQ,CAACE,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEX;AAA1B,OAAqCL,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAEGc,QAAQ,CAACG,WAFZ,CAFJ,CADF,CADF,CAbF;AA0BD;;AA3C8C","sourcesContent":["import React, { Component } from 'react';\nimport TrameComponent from './trame';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nexport default class TrameList extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      onDrag: false\n    };\n  }\n\n  render() {\n    const { ...props } = this.props;\n    let tasks =\n      this.props.activeIndex === 0\n        ? this.props.taskListAvant\n        : this.props.activeIndex === 1\n        ? this.props.taskListPendant\n        : this.props.taskListAprès;\n\n    return !this.props.locked ? (\n      <SwipeableViews\n        style={{ height: '100%' }}\n        className=\"hidescrollbar\"\n        index={this.props.activeIndex}\n        onChangeIndex={this.props.handleChangeIndex}\n        slideClassName=\"hidescrollbar\"\n      >\n        <TrameComponent taskList={tasks} {...props} />\n        <TrameComponent taskList={tasks} {...props} />\n        <TrameComponent taskList={tasks} {...props} />\n      </SwipeableViews>\n    ) : (\n      <div className=\"hidescrollbar\" slideClassName=\"hidescrollbar\">\n        <DragDropContext onDragEnd={this.props.onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {provided => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                <TrameComponent taskList={tasks} {...props} />\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}