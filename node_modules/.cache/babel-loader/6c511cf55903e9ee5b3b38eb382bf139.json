{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/trame.js\";\nimport React, { Component } from 'react';\nimport { List, Icon, TextArea, Form, Button, Responsive, Popup } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport MyDraggable from './draggable';\nimport FormModal from '../../../components/visites/formModal.component';\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nclass TrameComponent extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.fileInputRef = React.createRef();\n\n    this.handleDoubleClick = document => {\n      this.editName(document);\n    };\n\n    this.state = {\n      taskEdited: null,\n      taskName: null,\n      activeDropdowns: [],\n      opened: false\n    };\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.clickCount = null;\n    this.singleClickTimer = '';\n  }\n\n  handleTextChange(e, data, task) {\n    this.props.handleTextChange(task, data.value);\n  }\n\n  addForm(task) {\n    this.props.addForm(task);\n  }\n\n  handleClicks(document) {\n    this.clickCount++;\n\n    if (this.clickCount === 1) {\n      this.singleClickTimer = setTimeout(function () {\n        this.clickCount = 0;\n      }.bind(this), 300);\n    } else if (this.clickCount === 2) {\n      clearTimeout(this.singleClickTimer);\n      this.clickCount = 0;\n      this.handleDoubleClick(document);\n    }\n  }\n\n  getColor(type) {\n    if (type.includes('image')) {\n      return ['teal', 'file image'];\n    } else if (type.includes('pdf')) {\n      return ['red', 'file pdf'];\n    } else if (type.includes('sheet')) {\n      return ['green', 'file excel'];\n    } else if (type.includes('word') || type.includes('opendocument.text')) {\n      return ['blue', 'file word'];\n    } else {\n      return ['grey', 'file'];\n    }\n  }\n\n  async fileChange(task, e) {\n    const file = e.target.files[0];\n    const file64 = await getBase64(file);\n    this.props.addDocument(task, {\n      document: file64,\n      name: file.name,\n      type: file.type\n    });\n  }\n\n  handleChangeName(event) {\n    this.setState({\n      taskName: event.target.value.toUpperCase()\n    });\n  }\n\n  handleClick(index) {\n    const i = this.state.activeDropdowns.indexOf(index);\n    i === -1 ? this.setState({\n      activeDropdowns: [...this.state.activeDropdowns, index]\n    }) : this.setState({\n      activeDropdowns: this.state.activeDropdowns.filter(e => e !== index)\n    });\n  }\n\n  validateName(task, name) {\n    this.props.validateName(task, name);\n    this.setState({\n      taskEdited: null,\n      taskName: null\n    });\n  }\n\n  editName(task) {\n    this.setState({\n      taskEdited: task,\n      taskName: task.title.toUpperCase()\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      opened: !this.state.opened\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(FormModal, Object.assign({}, this.props, {\n      opened: this.state.opened,\n      close: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(List, {\n      className: \"responsivepadding\",\n      relaxed: true,\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.props.taskList.map((task, i) => React.createElement(MyDraggable, Object.assign({}, this.props, {\n      key: i,\n      task: task,\n      index: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        borderRadius: 3,\n        borderBottom: '3px solid #c0c1c4',\n        margin: 15,\n        boxShadow: '6px 1px 12px 2px #cfcfcf',\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      style: {\n        borderTopLeftRadius: 3,\n        borderTopRightRadius: 3,\n        padding: 15,\n        backgroundColor: '#4286f4'\n      },\n      key: task.title // onClick={() => task.documentToFill && this.handleClick(i)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"times circle\",\n      style: {\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        color: 'red',\n        cursor: 'pointer',\n        fontSize: '1em'\n      },\n      onClick: () => this.props.deleteTask(task),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        flex: 8,\n        color: 'white',\n        flexDirection: 'row',\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: () => {\n        this.handleClicks(task);\n      },\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, task != this.state.taskEdited ? React.createElement(\"div\", {\n      style: {\n        background: 'transparent',\n        border: '0',\n        outline: 'none',\n        color: 'white',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, task.title.toUpperCase()) : React.createElement(\"input\", {\n      disabled: task != this.state.taskEdited,\n      type: \"text\",\n      style: {\n        fontFamily: 'inherit',\n        background: 'transparent',\n        border: '0',\n        outline: 'none',\n        color: 'white',\n        width: '100%'\n      },\n      value: task != this.state.taskEdited ? task.title.toUpperCase() : this.state.taskName,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), task != this.state.taskEdited ? React.createElement(Icon, {\n      style: {\n        marginLeft: 10,\n        cursor: 'pointer'\n      },\n      onClick: () => this.editName(task),\n      name: \"pencil\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }) : React.createElement(Icon, {\n      style: {\n        marginLeft: 10,\n        cursor: 'pointer'\n      },\n      onClick: () => this.validateName(task, this.state.taskName),\n      name: \"check\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        flex: 1,\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, task.type === 'basic' ? React.createElement(Icon, {\n      name: \"ellipsis horizontal\",\n      style: {\n        cursor: 'pointer',\n        color: 'white'\n      },\n      onClick: () => this.props.changeType(task, 'text'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }) : task.type === 'text' ? React.createElement(Icon, {\n      name: \"text cursor\",\n      style: {\n        cursor: 'pointer',\n        color: 'white'\n      },\n      onClick: () => this.props.changeType(task, 'document'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }) : React.createElement(Icon, {\n      name: \"file\",\n      style: {\n        cursor: 'pointer',\n        color: 'white'\n      },\n      onClick: () => this.props.changeType(task, 'basic'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), task.type === 'text' || task.type === 'document' ? this.state.activeDropdowns.includes(task.index) ? React.createElement(List.Icon, {\n      onClick: () => this.handleClick(task.index),\n      name: \"caret up\",\n      style: {\n        color: 'white',\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }) : React.createElement(List.Icon, {\n      onClick: () => this.handleClick(task.index),\n      name: \"caret down\",\n      style: {\n        color: 'white',\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }) : React.createElement(List.Icon, {\n      color: \"grey\",\n      name: \"caret down\",\n      style: {\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    })))), React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, this.state.activeDropdowns.includes(task.index) && React.createElement(\"div\", {\n      style: {\n        padding: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, task.type === 'text' ? React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      value: task.innerContent,\n      onChange: (e, data) => this.handleTextChange(e, data, task),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    })) : task.innerContent ? React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 0.1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, task.innerContent === 'form1&9' ? React.createElement(Popup, {\n      trigger: React.createElement(Button, {\n        color: \"red\",\n        labelPosition: \"right\",\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Formulaire \\xE0 remplir\", ' ', React.createElement(Icon, {\n        name: \"file pdf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      })),\n      position: \"bottom center\",\n      content: \"Ce formulaire sera \\xE0 remplir dans la trame de la visite.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }) : !task.innerContent.type.includes('image') ? React.createElement(Button, {\n      as: \"a\",\n      href: !task.innerContent.type.includes('image') ? task.innerContent.document : undefined,\n      download: task.innerContent.name,\n      onClick: () => {\n        task.innerContent.type.includes('image') && this.showModal(document);\n      },\n      icon: true,\n      labelPosition: \"right\",\n      color: this.getColor(task.innerContent.type)[0],\n      basic: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, task.innerContent.name, React.createElement(Icon, {\n      style: {\n        background: 'none'\n      },\n      name: this.getColor(task.innerContent.type)[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    })) : React.createElement(\"img\", {\n      style: {\n        maxHeight: 200,\n        maxWidth: '100%'\n      },\n      src: task.innerContent.document,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        flex: 0.1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"red\",\n      onClick: () => this.props.deleteDocument(task),\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"times\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    })))) : React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: '#3C4586',\n        color: 'white'\n      },\n      content: React.createElement(Responsive, {\n        minWidth: 540,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, \"Ajouter un document\"),\n      labelPosition: \"left\",\n      icon: \"file\",\n      onClick: () => this.fileInputRef.current.click(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      ref: this.fileInputRef,\n      type: \"file\",\n      hidden: true,\n      onChange: e => this.fileChange(task, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }), React.createElement(Button.Or, {\n      text: \"ou\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        background: 'red',\n        color: 'white'\n      },\n      onClick: () => this.addForm(task),\n      content: React.createElement(Responsive, {\n        minWidth: 540,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, \"Formulaire \\xE0 remplir\"),\n      labelPosition: \"right\",\n      icon: \"file pdf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }))))))))));\n  }\n\n}\n\nTrameComponent.propTypes = {\n  taskList: PropTypes.array,\n  changeType: PropTypes.func,\n  validateName: PropTypes.func,\n  deleteTask: PropTypes.func,\n  addDocument: PropTypes.func,\n  deleteDocument: PropTypes.func\n};\nexport default TrameComponent;","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/trame.js"],"names":["React","Component","List","Icon","TextArea","Form","Button","Responsive","Popup","PropTypes","MyDraggable","FormModal","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","TrameComponent","constructor","props","context","fileInputRef","createRef","handleDoubleClick","document","editName","state","taskEdited","taskName","activeDropdowns","opened","handleChangeName","bind","clickCount","singleClickTimer","handleTextChange","e","data","task","value","addForm","handleClicks","setTimeout","clearTimeout","getColor","type","includes","fileChange","target","files","file64","addDocument","name","event","setState","toUpperCase","handleClick","index","i","indexOf","filter","validateName","title","closeModal","render","textAlign","taskList","map","borderRadius","borderBottom","margin","boxShadow","position","borderTopLeftRadius","borderTopRightRadius","padding","backgroundColor","top","left","color","cursor","fontSize","deleteTask","display","width","flex","flexDirection","background","border","outline","fontFamily","marginLeft","changeType","innerContent","justifyContent","marginTop","alignItems","undefined","showModal","maxHeight","maxWidth","deleteDocument","current","click","propTypes","array","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  List,\n  Icon,\n  TextArea,\n  Form,\n  Button,\n  Responsive,\n  Popup\n} from 'semantic-ui-react';\n\nimport PropTypes from 'prop-types';\nimport MyDraggable from './draggable';\nimport FormModal from '../../../components/visites/formModal.component';\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\nclass TrameComponent extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      taskEdited: null,\n      taskName: null,\n      activeDropdowns: [],\n\n      opened: false\n    };\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.clickCount = null;\n    this.singleClickTimer = '';\n  }\n\n  fileInputRef = React.createRef();\n\n  handleTextChange(e, data, task) {\n    this.props.handleTextChange(task, data.value);\n  }\n\n  addForm(task) {\n    this.props.addForm(task);\n  }\n\n  handleDoubleClick = document => {\n    this.editName(document);\n  };\n  handleClicks(document) {\n    this.clickCount++;\n    if (this.clickCount === 1) {\n      this.singleClickTimer = setTimeout(\n        function() {\n          this.clickCount = 0;\n        }.bind(this),\n        300\n      );\n    } else if (this.clickCount === 2) {\n      clearTimeout(this.singleClickTimer);\n      this.clickCount = 0;\n      this.handleDoubleClick(document);\n    }\n  }\n\n  getColor(type) {\n    if (type.includes('image')) {\n      return ['teal', 'file image'];\n    } else if (type.includes('pdf')) {\n      return ['red', 'file pdf'];\n    } else if (type.includes('sheet')) {\n      return ['green', 'file excel'];\n    } else if (type.includes('word') || type.includes('opendocument.text')) {\n      return ['blue', 'file word'];\n    } else {\n      return ['grey', 'file'];\n    }\n  }\n\n  async fileChange(task, e) {\n    const file = e.target.files[0];\n    const file64 = await getBase64(file);\n\n    this.props.addDocument(task, {\n      document: file64,\n      name: file.name,\n      type: file.type\n    });\n  }\n\n  handleChangeName(event) {\n    this.setState({ taskName: event.target.value.toUpperCase() });\n  }\n\n  handleClick(index) {\n    const i = this.state.activeDropdowns.indexOf(index);\n    i === -1\n      ? this.setState({\n          activeDropdowns: [...this.state.activeDropdowns, index]\n        })\n      : this.setState({\n          activeDropdowns: this.state.activeDropdowns.filter(e => e !== index)\n        });\n  }\n\n  validateName(task, name) {\n    this.props.validateName(task, name);\n    this.setState({ taskEdited: null, taskName: null });\n  }\n\n  editName(task) {\n    this.setState({\n      taskEdited: task,\n      taskName: task.title.toUpperCase()\n    });\n  }\n\n  closeModal() {\n    this.setState({ opened: !this.state.opened });\n  }\n\n  render() {\n    return (\n      <>\n        <FormModal\n          {...this.props}\n          opened={this.state.opened}\n          close={() => this.closeModal()}\n        />\n\n        <List\n          className=\"responsivepadding\"\n          relaxed\n          style={{ textAlign: 'left' }}\n        >\n          {this.props.taskList.map((task, i) => (\n            <MyDraggable {...this.props} key={i} task={task} index={i}>\n              <div\n                style={{\n                  borderRadius: 3,\n                  borderBottom: '3px solid #c0c1c4',\n\n                  margin: 15,\n                  boxShadow: '6px 1px 12px 2px #cfcfcf',\n                  position: 'relative'\n                }}\n              >\n                <List.Item\n                  style={{\n                    borderTopLeftRadius: 3,\n                    borderTopRightRadius: 3,\n                    padding: 15,\n                    backgroundColor: '#4286f4'\n                  }}\n                  key={task.title}\n                  // onClick={() => task.documentToFill && this.handleClick(i)}\n                >\n                  <Icon\n                    name=\"times circle\"\n                    style={{\n                      position: 'absolute',\n                      top: '0',\n                      left: '0',\n\n                      color: 'red',\n                      cursor: 'pointer',\n                      fontSize: '1em'\n                    }}\n                    onClick={() => this.props.deleteTask(task)}\n                  ></Icon>\n                  <div\n                    style={{\n                      display: 'flex',\n                      width: '100%'\n                    }}\n                  >\n                    <div style={{ flex: 1 }}>\n                      {/* {this.getIconFromStatus(task.status)} */}\n                    </div>\n                    <div\n                      style={{\n                        flex: 8,\n                        color: 'white',\n                        flexDirection: 'row',\n                        display: 'flex'\n                      }}\n                    >\n                      <div\n                        onClick={() => {\n                          this.handleClicks(task);\n                        }}\n                        style={{ width: '100%' }}\n                      >\n                        {task != this.state.taskEdited ? (\n                          <div\n                            style={{\n                              background: 'transparent',\n                              border: '0',\n                              outline: 'none',\n                              color: 'white',\n                              width: '100%'\n                            }}\n                          >\n                            {task.title.toUpperCase()}\n                          </div>\n                        ) : (\n                          <input\n                            disabled={task != this.state.taskEdited}\n                            type=\"text\"\n                            style={{\n                              fontFamily: 'inherit',\n                              background: 'transparent',\n                              border: '0',\n                              outline: 'none',\n                              color: 'white',\n                              width: '100%'\n                            }}\n                            value={\n                              task != this.state.taskEdited\n                                ? task.title.toUpperCase()\n                                : this.state.taskName\n                            }\n                            onChange={this.handleChangeName}\n                          ></input>\n                        )}\n                      </div>\n                      {task != this.state.taskEdited ? (\n                        <Icon\n                          style={{ marginLeft: 10, cursor: 'pointer' }}\n                          onClick={() => this.editName(task)}\n                          name=\"pencil\"\n                          color=\"white\"\n                        ></Icon>\n                      ) : (\n                        <Icon\n                          style={{ marginLeft: 10, cursor: 'pointer' }}\n                          onClick={() =>\n                            this.validateName(task, this.state.taskName)\n                          }\n                          name=\"check\"\n                          color=\"white\"\n                        ></Icon>\n                      )}\n                    </div>\n                    <div\n                      style={{\n                        flex: 1,\n                        textAlign: 'right'\n                      }}\n                    >\n                      {task.type === 'basic' ? (\n                        <Icon\n                          name=\"ellipsis horizontal\"\n                          style={{ cursor: 'pointer', color: 'white' }}\n                          onClick={() => this.props.changeType(task, 'text')}\n                        ></Icon>\n                      ) : task.type === 'text' ? (\n                        <Icon\n                          name=\"text cursor\"\n                          style={{ cursor: 'pointer', color: 'white' }}\n                          onClick={() =>\n                            this.props.changeType(task, 'document')\n                          }\n                        ></Icon>\n                      ) : (\n                        <Icon\n                          name=\"file\"\n                          style={{ cursor: 'pointer', color: 'white' }}\n                          onClick={() => this.props.changeType(task, 'basic')}\n                        ></Icon>\n                      )}\n\n                      {task.type === 'text' || task.type === 'document' ? (\n                        this.state.activeDropdowns.includes(task.index) ? (\n                          <List.Icon\n                            onClick={() => this.handleClick(task.index)}\n                            name=\"caret up\"\n                            style={{ color: 'white', cursor: 'pointer' }}\n                          ></List.Icon>\n                        ) : (\n                          <List.Icon\n                            onClick={() => this.handleClick(task.index)}\n                            name=\"caret down\"\n                            style={{ color: 'white', cursor: 'pointer' }}\n                          ></List.Icon>\n                        )\n                      ) : (\n                        <List.Icon\n                          color=\"grey\"\n                          name=\"caret down\"\n                          style={{ cursor: 'pointer' }}\n                        ></List.Icon>\n                      )}\n                    </div>\n                  </div>\n                </List.Item>\n                <List.Item>\n                  {this.state.activeDropdowns.includes(task.index) && (\n                    <div style={{ padding: 15 }}>\n                      {task.type === 'text' ? (\n                        <Form>\n                          <TextArea\n                            value={task.innerContent}\n                            onChange={(e, data) =>\n                              this.handleTextChange(e, data, task)\n                            }\n                          />\n                          <div\n                            style={{\n                              width: '100%',\n                              display: 'flex',\n                              justifyContent: 'flex-end',\n                              marginTop: 10\n                            }}\n                          ></div>\n                        </Form>\n                      ) : task.innerContent ? (\n                        <div\n                          style={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center'\n                          }}\n                        >\n                          <div style={{ flex: 0.1 }}></div>\n                          <div\n                            style={{\n                              flex: 1,\n                              display: 'flex',\n                              justifyContent: 'center'\n                            }}\n                          >\n                            {task.innerContent === 'form1&9' ? (\n                              <Popup\n                                trigger={\n                                  <Button\n                                    color=\"red\"\n                                    labelPosition=\"right\"\n                                    icon\n                                  >\n                                    Formulaire à remplir{' '}\n                                    <Icon name=\"file pdf\"></Icon>\n                                  </Button>\n                                }\n                                position=\"bottom center\"\n                                content=\"Ce formulaire sera à remplir dans la trame de la visite.\"\n                              ></Popup>\n                            ) : !task.innerContent.type.includes('image') ? (\n                              <Button\n                                as=\"a\"\n                                href={\n                                  !task.innerContent.type.includes('image')\n                                    ? task.innerContent.document\n                                    : undefined\n                                }\n                                download={task.innerContent.name}\n                                onClick={() => {\n                                  task.innerContent.type.includes('image') &&\n                                    this.showModal(document);\n                                }}\n                                icon\n                                labelPosition=\"right\"\n                                color={this.getColor(task.innerContent.type)[0]}\n                                basic\n                              >\n                                {task.innerContent.name}\n                                <Icon\n                                  style={{ background: 'none' }}\n                                  name={\n                                    this.getColor(task.innerContent.type)[1]\n                                  }\n                                ></Icon>\n                              </Button>\n                            ) : (\n                              <img\n                                style={{ maxHeight: 200, maxWidth: '100%' }}\n                                src={task.innerContent.document}\n                              ></img>\n                            )}\n                          </div>\n                          <div style={{ flex: 0.1 }}>\n                            <Button\n                              color=\"red\"\n                              onClick={() => this.props.deleteDocument(task)}\n                              icon\n                            >\n                              <Icon name=\"times\" color=\"white\"></Icon>\n                            </Button>\n                          </div>\n                        </div>\n                      ) : (\n                        <div\n                          style={{\n                            display: 'flex',\n                            justifyContent: 'center'\n                          }}\n                        >\n                          <Button.Group>\n                            <Button\n                              style={{\n                                background: '#3C4586',\n                                color: 'white'\n                              }}\n                              content={\n                                <Responsive minWidth={540}>\n                                  Ajouter un document\n                                </Responsive>\n                              }\n                              labelPosition=\"left\"\n                              icon=\"file\"\n                              onClick={() => this.fileInputRef.current.click()}\n                            />\n                            <input\n                              ref={this.fileInputRef}\n                              type=\"file\"\n                              hidden\n                              onChange={e => this.fileChange(task, e)}\n                            />\n\n                            <Button.Or text=\"ou\" />\n                            <Button\n                              style={{\n                                background: 'red',\n                                color: 'white'\n                              }}\n                              onClick={() => this.addForm(task)}\n                              content={\n                                <Responsive minWidth={540}>\n                                  Formulaire à remplir\n                                </Responsive>\n                              }\n                              labelPosition=\"right\"\n                              icon=\"file pdf\"\n                            />\n                          </Button.Group>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </List.Item>\n              </div>\n            </MyDraggable>\n          ))}\n        </List>\n      </>\n    );\n  }\n}\n\nTrameComponent.propTypes = {\n  taskList: PropTypes.array,\n  changeType: PropTypes.func,\n  validateName: PropTypes.func,\n  deleteTask: PropTypes.func,\n  addDocument: PropTypes.func,\n  deleteDocument: PropTypes.func\n};\n\nexport default TrameComponent;\n"]},"metadata":{},"sourceType":"module"}