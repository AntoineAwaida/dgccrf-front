{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visite/trame/trame.container.js\";\nimport React from 'react';\nimport { List, Icon, Button, TextArea, Form } from 'semantic-ui-react';\nimport './visite.css';\nimport FormModal from '../../../components/visites/formModal.component';\nexport default class DossierComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      activeDropdowns: [],\n      textModified: null,\n      opened: false\n    };\n  }\n\n  showFormModal() {\n    this.setState({\n      opened: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      opened: !this.state.opened\n    });\n  }\n\n  getColor(type) {\n    if (type.includes('image')) {\n      return ['teal', 'file image'];\n    } else if (type.includes('pdf')) {\n      return ['red', 'file pdf'];\n    } else if (type.includes('sheet')) {\n      return ['green', 'file excel'];\n    } else if (type.includes('word') || type.includes('opendocument.text')) {\n      return ['blue', 'file word'];\n    } else {\n      return ['grey', 'file'];\n    }\n  }\n\n  handleTextChange(e, data, i) {\n    this.props.setText(data.value, i);\n  }\n\n  modifyText(i) {\n    this.state.textModified ? this.setState({\n      textModified: null\n    }) : this.setState({\n      textModified: i\n    });\n  }\n\n  saveText() {\n    this.props.sendText();\n    this.setState({\n      textModified: null\n    });\n  }\n\n  handleClick(index) {\n    const i = this.state.activeDropdowns.indexOf(index);\n    i === -1 ? this.setState({\n      activeDropdowns: [...this.state.activeDropdowns, index]\n    }) : this.setState({\n      activeDropdowns: this.state.activeDropdowns.filter(e => e !== index)\n    });\n  }\n\n  setStatus(e, newstatus, index) {\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n    this.props.setStatus(newstatus, index);\n  }\n\n  getIconFromStatus(status, index) {\n    return {\n      done: React.createElement(List.Icon, {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: e => this.setStatus(e, 'problem', index),\n        name: \"check\",\n        color: \"green\",\n        size: \"large\",\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }),\n      'on-progress': React.createElement(List.Icon, {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: e => this.setStatus(e, 'done', index),\n        name: \"circle\",\n        color: \"orange\",\n        size: \"large\",\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }),\n      problem: React.createElement(List.Icon, {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: e => this.setStatus(e, 'on-progress', index),\n        name: \"warning circle\",\n        color: \"red\",\n        size: \"large\",\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }),\n      undefined: React.createElement(List.Icon, {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: e => this.setStatus(e, 'on-progress', index),\n        name: \"warning circle\",\n        color: \"red\",\n        size: \"large\",\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })\n    }[status];\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(FormModal, Object.assign({}, this.props, {\n      opened: this.state.opened,\n      close: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(List, {\n      className: \"responsivepadding\",\n      relaxed: true,\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.props.taskList.map((task, i) => React.createElement(\"div\", {\n      key: i,\n      style: {\n        borderRadius: 3,\n        borderBottom: '3px solid #c0c1c4',\n        margin: 15,\n        boxShadow: '6px 1px 12px 2px #cfcfcf'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      style: {\n        borderTopLeftRadius: 3,\n        borderTopRightRadius: 3,\n        padding: 15,\n        backgroundColor: '#4286f4',\n        cursor: task.innerContent && 'pointer'\n      },\n      key: task.title,\n      onClick: () => task.innerContent && this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.getIconFromStatus(task.status, i)), React.createElement(\"div\", {\n      style: {\n        flex: 8,\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, task.title.toUpperCase()), React.createElement(\"div\", {\n      style: {\n        flex: 1,\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, task.innerContent && (this.state.activeDropdowns.includes(i) ? React.createElement(List.Icon, {\n      name: \"caret up\",\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }) : React.createElement(List.Icon, {\n      name: \"caret down\",\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))))), React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.activeDropdowns.includes(i) && (task.type === 'text' ? React.createElement(\"div\", {\n      style: {\n        padding: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 10,\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, this.state.textModified ? React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      value: task.innerContent,\n      onChange: (e, data) => this.handleTextChange(e, data, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })) : task.innerContent), React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, this.state.textModified ? React.createElement(Icon, {\n      style: {\n        cursor: 'pointer',\n        color: '#4286f4'\n      },\n      name: \"check\",\n      onClick: () => this.saveText(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }) : React.createElement(Icon, {\n      style: {\n        cursor: 'pointer',\n        color: '#4286f4'\n      },\n      name: \"pencil\",\n      onClick: () => this.modifyText(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })))) : React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, task.innerContent === 'form1&9' ? React.createElement(Button, {\n      color: \"red\",\n      labelPosition: \"right\",\n      icon: true,\n      onClick: () => this.showFormModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Remplir un formulaire \", React.createElement(Icon, {\n      name: \"file pdf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })) : !task.innerContent.type.includes('image') ? React.createElement(Button, {\n      as: \"a\",\n      href: !task.innerContent.type.includes('image') ? task.innerContent.document : undefined,\n      download: task.innerContent.name,\n      onClick: () => {\n        task.innerContent.type.includes('image') && this.showModal(document);\n      },\n      icon: true,\n      labelPosition: \"right\",\n      color: this.getColor(task.innerContent.type)[0],\n      basic: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, task.innerContent.name, React.createElement(Icon, {\n      style: {\n        background: 'none'\n      },\n      name: this.getColor(task.innerContent.type)[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    })) : React.createElement(\"img\", {\n      style: {\n        maxHeight: 200,\n        maxWidth: '100%'\n      },\n      src: task.innerContent.document,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/visite/trame/trame.container.js"],"names":["React","List","Icon","Button","TextArea","Form","FormModal","DossierComponent","Component","constructor","props","handleClick","bind","state","activeDropdowns","textModified","opened","showFormModal","setState","closeModal","getColor","type","includes","handleTextChange","e","data","i","setText","value","modifyText","saveText","sendText","index","indexOf","filter","setStatus","newstatus","stopPropagation","nativeEvent","stopImmediatePropagation","getIconFromStatus","status","done","cursor","problem","undefined","render","textAlign","taskList","map","task","borderRadius","borderBottom","margin","boxShadow","borderTopLeftRadius","borderTopRightRadius","padding","backgroundColor","innerContent","title","display","width","flex","color","toUpperCase","marginRight","justifyContent","marginTop","alignItems","document","name","showModal","background","maxHeight","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { List, Icon, Button, TextArea, Form } from 'semantic-ui-react';\n\nimport './visite.css';\nimport FormModal from '../../../components/visites/formModal.component';\n\nexport default class DossierComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      activeDropdowns: [],\n      textModified: null,\n      opened: false\n    };\n  }\n\n  showFormModal() {\n    this.setState({ opened: true });\n  }\n\n  closeModal() {\n    this.setState({ opened: !this.state.opened });\n  }\n\n  getColor(type) {\n    if (type.includes('image')) {\n      return ['teal', 'file image'];\n    } else if (type.includes('pdf')) {\n      return ['red', 'file pdf'];\n    } else if (type.includes('sheet')) {\n      return ['green', 'file excel'];\n    } else if (type.includes('word') || type.includes('opendocument.text')) {\n      return ['blue', 'file word'];\n    } else {\n      return ['grey', 'file'];\n    }\n  }\n\n  handleTextChange(e, data, i) {\n    this.props.setText(data.value, i);\n  }\n\n  modifyText(i) {\n    this.state.textModified\n      ? this.setState({ textModified: null })\n      : this.setState({ textModified: i });\n  }\n\n  saveText() {\n    this.props.sendText();\n    this.setState({ textModified: null });\n  }\n\n  handleClick(index) {\n    const i = this.state.activeDropdowns.indexOf(index);\n    i === -1\n      ? this.setState({\n          activeDropdowns: [...this.state.activeDropdowns, index]\n        })\n      : this.setState({\n          activeDropdowns: this.state.activeDropdowns.filter(e => e !== index)\n        });\n  }\n\n  setStatus(e, newstatus, index) {\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n    this.props.setStatus(newstatus, index);\n  }\n\n  getIconFromStatus(status, index) {\n    return {\n      done: (\n        <List.Icon\n          style={{ cursor: 'pointer' }}\n          onClick={e => this.setStatus(e, 'problem', index)}\n          name=\"check\"\n          color=\"green\"\n          size=\"large\"\n          verticalAlign=\"middle\"\n        />\n      ),\n      'on-progress': (\n        <List.Icon\n          style={{ cursor: 'pointer' }}\n          onClick={e => this.setStatus(e, 'done', index)}\n          name=\"circle\"\n          color=\"orange\"\n          size=\"large\"\n          verticalAlign=\"middle\"\n        />\n      ),\n      problem: (\n        <List.Icon\n          style={{ cursor: 'pointer' }}\n          onClick={e => this.setStatus(e, 'on-progress', index)}\n          name=\"warning circle\"\n          color=\"red\"\n          size=\"large\"\n          verticalAlign=\"middle\"\n        />\n      ),\n      undefined: (\n        <List.Icon\n          style={{ cursor: 'pointer' }}\n          onClick={e => this.setStatus(e, 'on-progress', index)}\n          name=\"warning circle\"\n          color=\"red\"\n          size=\"large\"\n          verticalAlign=\"middle\"\n        />\n      )\n    }[status];\n  }\n\n  render() {\n    return (\n      <>\n        <FormModal\n          {...this.props}\n          opened={this.state.opened}\n          close={() => this.closeModal()}\n        />\n        <List\n          className=\"responsivepadding\"\n          relaxed\n          style={{\n            textAlign: 'left'\n          }}\n        >\n          {this.props.taskList.map((task, i) => (\n            <div\n              key={i}\n              style={{\n                borderRadius: 3,\n                borderBottom: '3px solid #c0c1c4',\n\n                margin: 15,\n                boxShadow: '6px 1px 12px 2px #cfcfcf'\n              }}\n            >\n              <List.Item\n                style={{\n                  borderTopLeftRadius: 3,\n                  borderTopRightRadius: 3,\n                  padding: 15,\n                  backgroundColor: '#4286f4',\n                  cursor: task.innerContent && 'pointer'\n                }}\n                key={task.title}\n                onClick={() => task.innerContent && this.handleClick(i)}\n              >\n                <div\n                  style={{\n                    display: 'flex',\n                    width: '100%'\n                  }}\n                >\n                  <div style={{ flex: 1 }}>\n                    {this.getIconFromStatus(task.status, i)}\n                  </div>\n                  <div style={{ flex: 8, color: 'white' }}>\n                    {task.title.toUpperCase()}\n                  </div>\n                  <div\n                    style={{\n                      flex: 1,\n                      textAlign: 'right'\n                    }}\n                  >\n                    {task.innerContent &&\n                      (this.state.activeDropdowns.includes(i) ? (\n                        <List.Icon\n                          name=\"caret up\"\n                          style={{ color: 'white' }}\n                        ></List.Icon>\n                      ) : (\n                        <List.Icon\n                          name=\"caret down\"\n                          style={{ color: 'white' }}\n                        ></List.Icon>\n                      ))}\n                  </div>\n                </div>\n              </List.Item>\n              <List.Item>\n                {this.state.activeDropdowns.includes(i) &&\n                  (task.type === 'text' ? (\n                    <div style={{ padding: 15 }}>\n                      <div style={{ display: 'flex' }}>\n                        <div style={{ flex: 10, marginRight: 10 }}>\n                          {this.state.textModified ? (\n                            <Form>\n                              <TextArea\n                                value={task.innerContent}\n                                onChange={(e, data) =>\n                                  this.handleTextChange(e, data, i)\n                                }\n                              />\n                              <div\n                                style={{\n                                  width: '100%',\n                                  display: 'flex',\n                                  justifyContent: 'flex-end',\n                                  marginTop: 10\n                                }}\n                              ></div>\n                            </Form>\n                          ) : (\n                            task.innerContent\n                          )}\n                        </div>\n                        <div style={{ flex: 1 }}>\n                          {this.state.textModified ? (\n                            <Icon\n                              style={{ cursor: 'pointer', color: '#4286f4' }}\n                              name=\"check\"\n                              onClick={() => this.saveText()}\n                            ></Icon>\n                          ) : (\n                            <Icon\n                              style={{ cursor: 'pointer', color: '#4286f4' }}\n                              name=\"pencil\"\n                              onClick={() => this.modifyText(i)}\n                            ></Icon>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        padding: 15\n                      }}\n                    >\n                      {task.innerContent === 'form1&9' ? (\n                        <Button\n                          color=\"red\"\n                          labelPosition=\"right\"\n                          icon\n                          onClick={() => this.showFormModal()}\n                        >\n                          Remplir un formulaire <Icon name=\"file pdf\"></Icon>\n                        </Button>\n                      ) : !task.innerContent.type.includes('image') ? (\n                        <Button\n                          as=\"a\"\n                          href={\n                            !task.innerContent.type.includes('image')\n                              ? task.innerContent.document\n                              : undefined\n                          }\n                          download={task.innerContent.name}\n                          onClick={() => {\n                            task.innerContent.type.includes('image') &&\n                              this.showModal(document);\n                          }}\n                          icon\n                          labelPosition=\"right\"\n                          color={this.getColor(task.innerContent.type)[0]}\n                          basic\n                        >\n                          {task.innerContent.name}\n                          <Icon\n                            style={{ background: 'none' }}\n                            name={this.getColor(task.innerContent.type)[1]}\n                          ></Icon>\n                        </Button>\n                      ) : (\n                        <img\n                          style={{ maxHeight: 200, maxWidth: '100%' }}\n                          src={task.innerContent.document}\n                        ></img>\n                      )}\n                    </div>\n                  ))}\n              </List.Item>\n            </div>\n          ))}\n        </List>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}