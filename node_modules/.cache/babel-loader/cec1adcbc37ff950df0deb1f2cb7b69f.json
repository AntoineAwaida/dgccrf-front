{"ast":null,"code":"import _slicedToArray from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/trameCreation.container.js\";\nimport React from 'react';\nimport { Container, Button, Icon, Input, Responsive } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport { changeNameOfPage, changeBackUrl, changeActivePage } from '../../navbar/actions';\nimport { connect } from 'react-redux';\nimport TrameComponent from './trame';\nimport PouchDBServices from '../../../services/index';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport MyActivityIndicator from '../../../components/myActivityIndicator.component';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: () => dispatch(changeNameOfPage('Création de trame')),\n    changeBackUrl: () => dispatch(changeBackUrl('/preferences')),\n    changeActivePage: () => dispatch(changeActivePage('mesDossiers', '/creation-trame'))\n  };\n}\n\nclass TrameCreationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onDragEnd = result => {\n      const destination = result.destination,\n            source = result.source;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const res = Array.from(this.state.taskList);\n\n      const _res$splice = res.splice(result.source.index, 1),\n            _res$splice2 = _slicedToArray(_res$splice, 1),\n            removed = _res$splice2[0];\n\n      res.splice(result.destination.index, 0, removed);\n      this.setState({\n        taskList: res\n      });\n    };\n\n    this.state = {\n      taskList: [],\n      index: 0,\n      id: 0,\n      trameName: '',\n      isLoading: true,\n      _id: null,\n      _rev: null\n    };\n    this.validateName = this.validateName.bind(this);\n    this.changeType = this.changeType.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.addDocument = this.addDocument.bind(this);\n    this.deleteDocument = this.deleteDocument.bind(this);\n    this.saveTrame = this.saveTrame.bind(this);\n  }\n\n  async saveTrame() {\n    if (window.confirm('Voulez-vous sauvegarder cette trame?')) {\n      try {\n        await PouchDBServices.services.trame.postDocument(!this.state._id ? {\n          name: this.state.trameName,\n          trame: this.state.taskList,\n          author: 4447\n        } : {\n          name: this.state.trameName,\n          trame: this.state.taskList,\n          author: 4447,\n          _id: this.state._id,\n          _rev: this.state._rev\n        });\n        console.log('trame saved!');\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.props.changeNameOfPage();\n    this.props.changeBackUrl();\n    this.props.changeActivePage();\n\n    if (this.props.match.params.id) {\n      this.getTrame(this.props.match.params.id);\n    } else {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  async getTrame(trameid) {\n    try {\n      const trame = (await PouchDBServices.services.trame.getTrameById(trameid))[0];\n      console.log(trame);\n      this.setState({\n        taskList: trame.trame,\n        trameName: trame.name,\n        _id: trame._id,\n        index: trame.trame.length,\n        id: trame.trame.length,\n        isLoading: false,\n        _rev: trame._rev\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  deleteTask(task) {\n    this.setState({\n      taskList: this.state.taskList.filter(t => {\n        return t != task;\n      })\n    });\n  }\n\n  addDocument(task, file) {\n    this.setState({\n      taskList: this.state.taskList.filter(t => {\n        if (t == task) {\n          t.innerContent = file;\n        }\n\n        return t;\n      })\n    });\n  }\n\n  deleteDocument(task) {\n    this.setState({\n      taskList: this.state.taskList.filter(t => {\n        if (t == task) {\n          t.innerContent = '';\n        }\n\n        return t;\n      })\n    });\n  }\n\n  validateName(task, name) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.title = name;\n      }\n\n      return t;\n    });\n    this.setState({\n      taskList\n    });\n  }\n\n  handleNameChange(e, data) {\n    this.setState({\n      trameName: data.value\n    });\n  }\n\n  handleTextChange(task, text) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.innerContent = text;\n      }\n\n      return t;\n    });\n    this.setState({\n      taskList\n    });\n  }\n\n  changeType(task, type) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.type = type;\n      }\n\n      return t;\n    });\n    this.setState({\n      taskList\n    });\n  }\n\n  addTask() {\n    //de 3 types: basic, text, ou document.\n    this.setState({\n      taskList: [...this.state.taskList, {\n        title: 'Nouvelle tâche' + this.state.index,\n        type: 'basic',\n        innerContent: '',\n        index: this.state.index,\n        id: this.state.id\n      }],\n      index: this.state.index + 1,\n      id: this.state.id + 1\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"hidescrollbar\",\n      style: {\n        display: 'flex',\n        height: '100%',\n        width: '100%',\n        backgroundColor: '#f2f2f2',\n        overflow: 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        justifyContent: 'center',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, this.state.isLoading ? React.createElement(MyActivityIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        overflow: 'hidden',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'fixed',\n        zIndex: 10,\n        width: '100%',\n        backgroundColor: '#f2f2f2',\n        display: 'flex',\n        flexDirection: 'row',\n        padding: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Responsive, {\n      minWidth: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 0.3\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: 150\n      },\n      placeholder: \"Nom de la trame...\",\n      value: this.state.trameName,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        marginLeft: 5\n      },\n      color: \"teal\",\n      icon: true,\n      onClick: () => this.addTask(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        flex: 0.3,\n        justifyContent: 'flex-end',\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.saveTrame,\n      color: \"red\",\n      disabled: this.state.trameName.length === 0 || this.state.taskList.length === 0,\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"save\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        flex: 10,\n        overflowY: 'auto',\n        marginTop: 80,\n        width: '100%'\n      },\n      className: \"hidescrollbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), React.createElement(TrameComponent, {\n      validateName: this.validateName,\n      taskList: this.state.taskList,\n      changeType: this.changeType,\n      handleTextChange: this.handleTextChange,\n      deleteTask: this.deleteTask,\n      addDocument: this.addDocument,\n      deleteDocument: this.deleteDocument,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }), provided.placeholder))))))));\n  }\n\n}\n\nTrameCreationComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TrameCreationComponent);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/trameCreation.container.js"],"names":["React","Container","Button","Icon","Input","Responsive","PropTypes","changeNameOfPage","changeBackUrl","changeActivePage","connect","TrameComponent","PouchDBServices","DragDropContext","Droppable","MyActivityIndicator","mapStateToProps","mapDispatchToProps","dispatch","TrameCreationComponent","Component","constructor","props","onDragEnd","result","destination","source","droppableId","index","res","Array","from","state","taskList","splice","removed","setState","id","trameName","isLoading","_id","_rev","validateName","bind","changeType","handleTextChange","handleNameChange","deleteTask","addDocument","deleteDocument","saveTrame","window","confirm","services","trame","postDocument","name","author","console","log","e","componentDidMount","match","params","getTrame","trameid","getTrameById","length","task","filter","t","file","innerContent","title","data","value","text","type","addTask","render","display","height","width","backgroundColor","overflow","justifyContent","textAlign","flexDirection","alignItems","position","zIndex","padding","flex","marginLeft","overflowY","marginTop","provided","innerRef","droppableProps","placeholder","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Button, Icon, Input, Responsive } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport {\n  changeNameOfPage,\n  changeBackUrl,\n  changeActivePage\n} from '../../navbar/actions';\nimport { connect } from 'react-redux';\n\nimport TrameComponent from './trame';\n\nimport PouchDBServices from '../../../services/index';\n\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport MyActivityIndicator from '../../../components/myActivityIndicator.component';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: () => dispatch(changeNameOfPage('Création de trame')),\n    changeBackUrl: () => dispatch(changeBackUrl('/preferences')),\n    changeActivePage: () =>\n      dispatch(changeActivePage('mesDossiers', '/creation-trame'))\n  };\n}\n\nclass TrameCreationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: [],\n      index: 0,\n      id: 0,\n      trameName: '',\n      isLoading: true,\n      _id: null,\n      _rev: null\n    };\n    this.validateName = this.validateName.bind(this);\n    this.changeType = this.changeType.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.addDocument = this.addDocument.bind(this);\n    this.deleteDocument = this.deleteDocument.bind(this);\n    this.saveTrame = this.saveTrame.bind(this);\n  }\n\n  async saveTrame() {\n    if (window.confirm('Voulez-vous sauvegarder cette trame?')) {\n      try {\n        await PouchDBServices.services.trame.postDocument(\n          !this.state._id\n            ? {\n                name: this.state.trameName,\n                trame: this.state.taskList,\n                author: 4447\n              }\n            : {\n                name: this.state.trameName,\n                trame: this.state.taskList,\n                author: 4447,\n                _id: this.state._id,\n                _rev: this.state._rev\n              }\n        );\n        console.log('trame saved!');\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.props.changeNameOfPage();\n    this.props.changeBackUrl();\n    this.props.changeActivePage();\n\n    if (this.props.match.params.id) {\n      this.getTrame(this.props.match.params.id);\n    } else {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async getTrame(trameid) {\n    try {\n      const trame = (await PouchDBServices.services.trame.getTrameById(\n        trameid\n      ))[0];\n      console.log(trame);\n      this.setState({\n        taskList: trame.trame,\n        trameName: trame.name,\n        _id: trame._id,\n        index: trame.trame.length,\n        id: trame.trame.length,\n        isLoading: false,\n        _rev: trame._rev\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  deleteTask(task) {\n    this.setState({\n      taskList: this.state.taskList.filter(t => {\n        return t != task;\n      })\n    });\n  }\n\n  addDocument(task, file) {\n    this.setState({\n      taskList: this.state.taskList.filter(t => {\n        if (t == task) {\n          t.innerContent = file;\n        }\n        return t;\n      })\n    });\n  }\n\n  deleteDocument(task) {\n    this.setState({\n      taskList: this.state.taskList.filter(t => {\n        if (t == task) {\n          t.innerContent = '';\n        }\n        return t;\n      })\n    });\n  }\n\n  validateName(task, name) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.title = name;\n      }\n\n      return t;\n    });\n\n    this.setState({ taskList });\n  }\n\n  handleNameChange(e, data) {\n    this.setState({ trameName: data.value });\n  }\n\n  handleTextChange(task, text) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.innerContent = text;\n      }\n\n      return t;\n    });\n    this.setState({ taskList });\n  }\n\n  changeType(task, type) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.type = type;\n      }\n\n      return t;\n    });\n\n    this.setState({ taskList });\n  }\n\n  addTask() {\n    //de 3 types: basic, text, ou document.\n    this.setState({\n      taskList: [\n        ...this.state.taskList,\n        {\n          title: 'Nouvelle tâche' + this.state.index,\n          type: 'basic',\n          innerContent: '',\n          index: this.state.index,\n          id: this.state.id\n        }\n      ],\n      index: this.state.index + 1,\n      id: this.state.id + 1\n    });\n  }\n\n  onDragEnd = result => {\n    const { destination, source } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const res = Array.from(this.state.taskList);\n\n    const [removed] = res.splice(result.source.index, 1);\n    res.splice(result.destination.index, 0, removed);\n\n    this.setState({ taskList: res });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"hidescrollbar\"\n        style={{\n          display: 'flex',\n          height: '100%',\n          width: '100%',\n\n          backgroundColor: '#f2f2f2',\n          overflow: 'hidden'\n        }}\n      >\n        <div\n          style={{\n            width: '100%',\n            justifyContent: 'center',\n            textAlign: 'center'\n          }}\n        >\n          <Container style={{ height: '100%' }}>\n            {this.state.isLoading ? (\n              <MyActivityIndicator />\n            ) : (\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  overflow: 'hidden',\n                  height: '100%'\n                }}\n              >\n                <div\n                  style={{\n                    position: 'fixed',\n                    zIndex: 10,\n                    width: '100%',\n                    backgroundColor: '#f2f2f2',\n                    display: 'flex',\n                    flexDirection: 'row',\n\n                    padding: 20\n                  }}\n                >\n                  <Responsive minWidth={400}>\n                    <div style={{ flex: 0.3 }}></div>\n                  </Responsive>\n                  <div style={{ flex: 1 }}>\n                    <Input\n                      style={{ width: 150 }}\n                      placeholder=\"Nom de la trame...\"\n                      value={this.state.trameName}\n                      onChange={this.handleNameChange}\n                    ></Input>\n                    <Button\n                      style={{ marginLeft: 5 }}\n                      color=\"teal\"\n                      icon\n                      onClick={() => this.addTask()}\n                    >\n                      <Icon name=\"plus\" color=\"white\"></Icon>\n                    </Button>\n                  </div>\n                  <div\n                    style={{\n                      flex: 0.3,\n                      justifyContent: 'flex-end',\n                      display: 'flex'\n                    }}\n                  >\n                    <Button\n                      onClick={this.saveTrame}\n                      color=\"red\"\n                      disabled={\n                        this.state.trameName.length === 0 ||\n                        this.state.taskList.length === 0\n                      }\n                      icon\n                    >\n                      <Icon name=\"save\" color=\"white\"></Icon>\n                    </Button>\n                  </div>\n\n                  {/* <Tabs\n                  value={this.state.activeIndex}\n                  fullWidth\n                  onChange={this.handleChange}\n                >\n                  <Tab label=\"Avant\" />\n                  <Tab label=\"Pendant\" />\n                  <Tab label=\"Après\" />\n                </Tabs> */}\n                </div>\n                <div\n                  style={{\n                    flex: 10,\n                    overflowY: 'auto',\n                    marginTop: 80,\n\n                    width: '100%'\n                  }}\n                  className=\"hidescrollbar\"\n                >\n                  <DragDropContext onDragEnd={this.onDragEnd}>\n                    <Droppable droppableId=\"droppable\">\n                      {provided => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.droppableProps}\n                        >\n                          <TrameComponent\n                            validateName={this.validateName}\n                            taskList={this.state.taskList}\n                            changeType={this.changeType}\n                            handleTextChange={this.handleTextChange}\n                            deleteTask={this.deleteTask}\n                            addDocument={this.addDocument}\n                            deleteDocument={this.deleteDocument}\n                          />\n                          {provided.placeholder}\n                        </div>\n                      )}\n                    </Droppable>\n                  </DragDropContext>\n                </div>\n              </div>\n            )}\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nTrameCreationComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrameCreationComponent);\n"]},"metadata":{},"sourceType":"module"}