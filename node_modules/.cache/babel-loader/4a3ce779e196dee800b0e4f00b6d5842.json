{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/controle.container.js\";\nimport React from 'react';\nimport { Form, Select } from 'semantic-ui-react';\nimport dossierService from '../../services/dossier.service';\nexport default class ControleComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dossiers: [],\n      dossier: '',\n      tp: ''\n    };\n  }\n\n  loadDossiers(dossiers) {\n    const newDossiers = dossiers.filter(dossier => !(dossier.TYPE_DOSSIER_LIBELLE === 'Information')).map(dossier => {\n      return {\n        key: dossier.DOSSIER_IDENT,\n        text: dossier.DOSSIER_LIBELLE,\n        value: dossier.DOSSIER_IDENT\n      };\n    });\n    this.setState({\n      dossiers: newDossiers\n    });\n  }\n\n  componentDidMount() {\n    dossierService.getAllDocs().then(res => this.loadDossiers(res));\n  }\n\n  render() {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      required: true,\n      control: Select,\n      options: this.state.dossiers,\n      label: \"Dossier\",\n      placeholder: \"Dossier\",\n      search: true,\n      onChange: (e, data) => {\n        this.setState({\n          dossier: data.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      required: true,\n      label: \"T\\xE2che Programm\\xE9e\",\n      placeholder: \"T\\xE2che Programm\\xE9e\",\n      onChange: e => this.setState({\n        dg: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      required: true,\n      label: \"Code DG\",\n      placeholder: \"Code DG\",\n      onChange: e => this.setState({\n        dg: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      required: true,\n      label: \"Code CPF\",\n      placeholder: \"Code CPF\",\n      onChange: e => this.setState({\n        cpf: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(Form.Input, {\n      fluid: true,\n      required: true,\n      label: \"Stade\",\n      placeholder: \"Stade\",\n      onChange: e => this.setState({\n        stade: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Form.Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Valider\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/controle.container.js"],"names":["React","Form","Select","dossierService","ControleComponent","Component","constructor","props","state","dossiers","dossier","tp","loadDossiers","newDossiers","filter","TYPE_DOSSIER_LIBELLE","map","key","DOSSIER_IDENT","text","DOSSIER_LIBELLE","value","setState","componentDidMount","getAllDocs","then","res","render","e","data","dg","target","cpf","stade"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AAEA,eAAe,MAAMC,iBAAN,SAAgCJ,KAAK,CAACK,SAAtC,CAAgD;AAC7DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,EAAE,EAAE;AAHO,KAAb;AAKD;;AAEDC,EAAAA,YAAY,CAACH,QAAD,EAAW;AACrB,UAAMI,WAAW,GAAGJ,QAAQ,CACzBK,MADiB,CACVJ,OAAO,IAAI,EAAEA,OAAO,CAACK,oBAAR,KAAiC,aAAnC,CADD,EAEjBC,GAFiB,CAEbN,OAAO,IAAI;AACd,aAAO;AACLO,QAAAA,GAAG,EAAEP,OAAO,CAACQ,aADR;AAELC,QAAAA,IAAI,EAAET,OAAO,CAACU,eAFT;AAGLC,QAAAA,KAAK,EAAEX,OAAO,CAACQ;AAHV,OAAP;AAKD,KARiB,CAApB;AASA,SAAKI,QAAL,CAAc;AAAEb,MAAAA,QAAQ,EAAEI;AAAZ,KAAd;AACD;;AAEDU,EAAAA,iBAAiB,GAAG;AAClBpB,IAAAA,cAAc,CAACqB,UAAf,GAA4BC,IAA5B,CAAiCC,GAAG,IAAI,KAAKd,YAAL,CAAkBc,GAAlB,CAAxC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,OAAO,EAAEzB,MAFX;AAGE,MAAA,OAAO,EAAE,KAAKM,KAAL,CAAWC,QAHtB;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,WAAW,EAAC,SALd;AAME,MAAA,MAAM,MANR;AAOE,MAAA,QAAQ,EAAE,CAACmB,CAAD,EAAIC,IAAJ,KAAa;AACrB,aAAKP,QAAL,CAAc;AAAEZ,UAAAA,OAAO,EAAEmB,IAAI,CAACR;AAAhB,SAAd;AACD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,MADP;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,KAAK,EAAC,wBAHR;AAIE,MAAA,WAAW,EAAC,wBAJd;AAKE,MAAA,QAAQ,EAAEO,CAAC,IAAI,KAAKN,QAAL,CAAc;AAAEQ,QAAAA,EAAE,EAAEF,CAAC,CAACG,MAAF,CAASV;AAAf,OAAd,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF,EAqBE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,MADP;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,WAAW,EAAC,SAJd;AAKE,MAAA,QAAQ,EAAEO,CAAC,IAAI,KAAKN,QAAL,CAAc;AAAEQ,QAAAA,EAAE,EAAEF,CAAC,CAACG,MAAF,CAASV;AAAf,OAAd,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,MADP;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,WAAW,EAAC,UAJd;AAKE,MAAA,QAAQ,EAAEO,CAAC,IAAI,KAAKN,QAAL,CAAc;AAAEU,QAAAA,GAAG,EAAEJ,CAAC,CAACG,MAAF,CAASV;AAAhB,OAAd,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CArBF,EAsCE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,MADP;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,WAAW,EAAC,OAJd;AAKE,MAAA,QAAQ,EAAEO,CAAC,IAAI,KAAKN,QAAL,CAAc;AAAEW,QAAAA,KAAK,EAAEL,CAAC,CAACG,MAAF,CAASV;AAAlB,OAAd,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCF,EA6CE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA7CF,CADF;AAiDD;;AA7E4D","sourcesContent":["import React from 'react';\nimport { Form, Select } from 'semantic-ui-react';\nimport dossierService from '../../services/dossier.service';\n\nexport default class ControleComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dossiers: [],\n      dossier: '',\n      tp: ''\n    };\n  }\n\n  loadDossiers(dossiers) {\n    const newDossiers = dossiers\n      .filter(dossier => !(dossier.TYPE_DOSSIER_LIBELLE === 'Information'))\n      .map(dossier => {\n        return {\n          key: dossier.DOSSIER_IDENT,\n          text: dossier.DOSSIER_LIBELLE,\n          value: dossier.DOSSIER_IDENT\n        };\n      });\n    this.setState({ dossiers: newDossiers });\n  }\n\n  componentDidMount() {\n    dossierService.getAllDocs().then(res => this.loadDossiers(res));\n  }\n\n  render() {\n    return (\n      <Form>\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            required\n            control={Select}\n            options={this.state.dossiers}\n            label=\"Dossier\"\n            placeholder=\"Dossier\"\n            search\n            onChange={(e, data) => {\n              this.setState({ dossier: data.value });\n            }}\n          />\n          <Form.Input\n            fluid\n            required\n            label=\"Tâche Programmée\"\n            placeholder=\"Tâche Programmée\"\n            onChange={e => this.setState({ dg: e.target.value })}\n          />\n        </Form.Group>\n        <Form.Group widths=\"equal\">\n          <Form.Input\n            fluid\n            required\n            label=\"Code DG\"\n            placeholder=\"Code DG\"\n            onChange={e => this.setState({ dg: e.target.value })}\n          />\n\n          <Form.Input\n            fluid\n            required\n            label=\"Code CPF\"\n            placeholder=\"Code CPF\"\n            onChange={e => this.setState({ cpf: e.target.value })}\n          />\n        </Form.Group>\n        <Form.Input\n          fluid\n          required\n          label=\"Stade\"\n          placeholder=\"Stade\"\n          onChange={e => this.setState({ stade: e.target.value })}\n        />\n        <Form.Button>Valider</Form.Button>\n      </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}