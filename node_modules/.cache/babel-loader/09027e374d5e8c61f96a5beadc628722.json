{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/AddDocs.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport PouchDB from \"pouchdb\";\nexport class AddDocs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      list: []\n    };\n    this.db = new PouchDB(\"my_database\");\n    var remoteCouch = \"http://Admin:password@172.17.64.136:5984/test\";\n    this.db.changes({\n      since: \"now\",\n      live: true\n    }).on(\"change\", this.updateTodos.bind(this));\n    var opts = {\n      live: true,\n      retry: true,\n      filter: 'filter/by_agent',\n      query_params: {\n        \"agent\": this.props.user\n      }\n    };\n    this.db.replicate.to(remoteCouch, {\n      live: true,\n      retry: true\n    }, console.log);\n    this.db.replicate.from(remoteCouch, opts, console.log);\n    this.updateTodos();\n    this.updateTodos = this.updateTodos.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  updateTodos() {\n    this.db.allDocs({\n      include_docs: true,\n      descending: true\n    }, (err, doc) => {\n      this.setState({\n        list: doc.rows.map(row => row.doc)\n      });\n    });\n  }\n\n  addTodo(text, user) {\n    var todo = {\n      _id: new Date().toISOString(),\n      text: text,\n      user: user\n    };\n    this.db.put(todo, function callback(err, result) {\n      if (!err) {\n        console.log(\"Successfully posted a todo!\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: e => this.setState({\n        text: e.target.value\n      }),\n      placeholder: \"Text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.addTodo(this.state.text, this.props.user),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Ajouter\"), React.createElement(\"button\", {\n      onClick: () => this.getTodos(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"refresh\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, JSON.stringify(this.state.list)));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/AddDocs.js"],"names":["React","PouchDB","AddDocs","Component","constructor","props","state","text","list","db","remoteCouch","changes","since","live","on","updateTodos","bind","opts","retry","filter","query_params","user","replicate","to","console","log","from","addTodo","allDocs","include_docs","descending","err","doc","setState","rows","map","row","todo","_id","Date","toISOString","put","callback","result","render","e","target","value","getTodos","JSON","stringify"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport PouchDB from \"pouchdb\";\n\nexport class AddDocs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      list: []\n    };\n\n    this.db = new PouchDB(\"my_database\");\n    var remoteCouch = \"http://Admin:password@172.17.64.136:5984/test\";\n\n    this.db\n      .changes({\n        since: \"now\",\n        live: true\n      })\n      .on(\"change\", this.updateTodos.bind(this));\n\n    var opts = {\n        live: true,\n        retry:true, \n        filter: 'filter/by_agent',\n        query_params: { \"agent\": this.props.user },\n    };\n    this.db.replicate.to(remoteCouch, {live:true,retry:true}, console.log);\n    this.db.replicate.from(remoteCouch, opts, console.log);\n    this.updateTodos();\n\n    this.updateTodos = this.updateTodos.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  updateTodos() {\n    this.db.allDocs({ include_docs: true, descending: true }, (err, doc) => {\n      this.setState({ list: doc.rows.map(row => row.doc) });\n    });\n  }\n\n  addTodo(text, user) {\n    var todo = {\n      _id: new Date().toISOString(),\n      text: text,\n      user: user\n    };\n    this.db.put(todo, function callback(err, result) {\n      if (!err) {\n        console.log(\"Successfully posted a todo!\");\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          onChange={e => this.setState({ text: e.target.value })}\n          placeholder=\"Text\"\n        />\n        <button onClick={() => this.addTodo(this.state.text, this.props.user)}>\n          Ajouter\n        </button>\n        <button onClick={() => this.getTodos()}>refresh</button>\n        <div>{JSON.stringify(this.state.list)}</div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}