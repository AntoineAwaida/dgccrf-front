{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/components/documents/documentsList.js\";\nimport React, { Component } from 'react';\nimport { Button, Header, Icon, Input } from 'semantic-ui-react';\nimport DocumentModal from './documentModal.component';\nimport PouchdbServices from '../../services';\nlet documentsService = PouchdbServices.services.documents;\n\nfunction removeExtension(documentname) {\n  const split = documentname.split('.');\n  return [split.slice(0, -1).join('.'), split.slice(-1)];\n}\n\nexport default class documentsList extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleDoubleClick = document => {\n      this.editName(document);\n    };\n\n    this.state = {\n      modal: false,\n      documentSelected: null,\n      documentname: null,\n      documentEdited: null\n    };\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.deleteDocument = this.deleteDocument.bind(this);\n    this.clickCount = null;\n    this.singleClickTimer = '';\n  }\n\n  handleClicks(document) {\n    this.clickCount++;\n\n    if (this.clickCount === 1) {\n      this.singleClickTimer = setTimeout(function () {\n        this.clickCount = 0;\n      }.bind(this), 300);\n    } else if (this.clickCount === 2) {\n      clearTimeout(this.singleClickTimer);\n      this.clickCount = 0;\n      this.handleDoubleClick(document);\n    }\n  }\n\n  showModal(document) {\n    this.setState({\n      modal: true,\n      documentSelected: document\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      modal: false\n    });\n  }\n\n  handleChangeName(event, data) {\n    this.setState({\n      documentname: data.value\n    });\n  }\n\n  editName(document) {\n    this.setState({\n      documentEdited: document,\n      documentname: removeExtension(document.name)[0]\n    });\n  }\n\n  validateName(document) {\n    document.name = this.state.documentname + '.' + removeExtension(document.name)[1];\n    documentsService.editName(document).then(res => console.log('ok')).catch(e => console.log(e));\n  }\n\n  getColor(type) {\n    if (type.includes('image')) {\n      return ['teal', 'file image'];\n    } else if (type.includes('pdf')) {\n      return ['red', 'file pdf'];\n    } else if (type.includes('sheet')) {\n      return ['green', 'file excel'];\n    } else if (type.includes('word') || type.includes('opendocument.text')) {\n      return ['blue', 'file word'];\n    } else {\n      return ['grey', 'file'];\n    }\n  }\n\n  async deleteDocument(e, document) {\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n    window.confirm('Êtes-vous sûr de vouloir supprimer ce document?') && (await documentsService.deleteDocument(document));\n  }\n\n  render() {\n    const documents = this.props.documents;\n    return React.createElement(React.Fragment, null, this.state.modal && this.state.documentSelected && React.createElement(DocumentModal, {\n      document: this.state.documentSelected,\n      opened: this.state.modal,\n      close: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        paddingBottom: 110\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, documents.map((document, i) => React.createElement(\"div\", {\n      key: i,\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        margin: '1em',\n        marginBottom: '1em',\n        display: 'flex',\n        height: '10em',\n        width: '10em',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'relative'\n      },\n      basic: true,\n      color: this.getColor(document.type)[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(Button, {\n      as: \"a\",\n      color: this.getColor(document.type)[0],\n      style: {\n        background: 'none'\n      },\n      icon: true,\n      href: !document.type.includes('image') ? document.document : undefined,\n      download: document.name,\n      onClick: () => {\n        document.type.includes('image') && this.showModal(document);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, document.type.includes('image') ? React.createElement(\"img\", {\n      src: document.document,\n      style: {\n        maxWidth: '8em',\n        maxHeight: '8em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }) : React.createElement(Icon, {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: '4em',\n        margin: 0,\n        color: this.getColor(document.type)[0]\n      },\n      name: this.getColor(document.type)[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(Icon, {\n      style: {\n        position: 'absolute',\n        top: 10,\n        right: 0,\n        fontSize: '2em',\n        cursor: 'pointer'\n      },\n      name: \"times\",\n      color: \"red\",\n      onClick: e => this.deleteDocument(e, document),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"hidescrollbar\",\n      style: {\n        width: '10em',\n        display: 'flex',\n        justifyContent: 'center',\n        height: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, this.state.documentEdited != document ? React.createElement(React.Fragment, null, React.createElement(Header, {\n      onClick: () => this.handleClicks(document),\n      as: \"h4\",\n      className: \"hidescrollbar\",\n      style: {\n        overflowWrap: 'break-word',\n        overflowX: 'hidden'\n      },\n      color: this.getColor(document.type)[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, document.name), React.createElement(Icon, {\n      onClick: () => this.editName(document),\n      style: {\n        marginLeft: 5,\n        cursor: 'pointer'\n      },\n      name: \"pencil\",\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      style: {\n        height: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        height: 30\n      },\n      value: this.state.documentname,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      onClick: () => this.validateName(document),\n      name: \"check\",\n      color: \"grey\",\n      style: {\n        marginLeft: 5,\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/components/documents/documentsList.js"],"names":["React","Component","Button","Header","Icon","Input","DocumentModal","PouchdbServices","documentsService","services","documents","removeExtension","documentname","split","slice","join","documentsList","constructor","props","context","handleDoubleClick","document","editName","state","modal","documentSelected","documentEdited","handleChangeName","bind","deleteDocument","clickCount","singleClickTimer","handleClicks","setTimeout","clearTimeout","showModal","setState","closeModal","event","data","value","name","validateName","then","res","console","log","catch","e","getColor","type","includes","stopPropagation","nativeEvent","stopImmediatePropagation","window","confirm","render","display","flexWrap","justifyContent","paddingBottom","map","i","alignItems","flexDirection","margin","marginBottom","height","width","position","background","undefined","maxWidth","maxHeight","fontSize","color","top","right","cursor","overflowWrap","overflowX","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Header, Icon, Input } from 'semantic-ui-react';\nimport DocumentModal from './documentModal.component';\n\nimport PouchdbServices from '../../services';\nlet documentsService = PouchdbServices.services.documents;\n\n\nfunction removeExtension(documentname) {\n  const split = documentname.split('.');\n  return [split.slice(0, -1).join('.'), split.slice(-1)];\n}\n\nexport default class documentsList extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      modal: false,\n      documentSelected: null,\n      documentname: null,\n      documentEdited: null\n    };\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.deleteDocument = this.deleteDocument.bind(this);\n    this.clickCount = null;\n    this.singleClickTimer = '';\n  }\n\n  handleDoubleClick = document => {\n    this.editName(document);\n  };\n  handleClicks(document) {\n    this.clickCount++;\n    if (this.clickCount === 1) {\n      this.singleClickTimer = setTimeout(\n        function () {\n          this.clickCount = 0;\n        }.bind(this),\n        300\n      );\n    } else if (this.clickCount === 2) {\n      clearTimeout(this.singleClickTimer);\n      this.clickCount = 0;\n      this.handleDoubleClick(document);\n    }\n  }\n\n  showModal(document) {\n    this.setState({\n      modal: true,\n      documentSelected: document\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      modal: false\n    });\n  }\n\n  handleChangeName(event, data) {\n    this.setState({ documentname: data.value });\n  }\n\n  editName(document) {\n    this.setState({\n      documentEdited: document,\n      documentname: removeExtension(document.name)[0]\n    });\n  }\n\n  validateName(document) {\n    document.name =\n      this.state.documentname + '.' + removeExtension(document.name)[1];\n    documentsService\n      .editName(document)\n      .then(res => console.log('ok'))\n      .catch(e => console.log(e));\n  }\n\n  getColor(type) {\n    if (type.includes('image')) {\n      return ['teal', 'file image'];\n    } else if (type.includes('pdf')) {\n      return ['red', 'file pdf'];\n    } else if (type.includes('sheet')) {\n      return ['green', 'file excel'];\n    } else if (type.includes('word') || type.includes('opendocument.text')) {\n      return ['blue', 'file word'];\n    } else {\n      return ['grey', 'file'];\n    }\n  }\n\n  async deleteDocument(e, document) {\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    window.confirm('Êtes-vous sûr de vouloir supprimer ce document?') &&\n      (await documentsService.deleteDocument(document));\n  }\n\n  render() {\n    const { documents } = this.props;\n    return (\n      <>\n        {this.state.modal && this.state.documentSelected && (\n          <DocumentModal\n            document={this.state.documentSelected}\n            opened={this.state.modal}\n            close={() => this.closeModal()}\n          />\n        )}\n        <div\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n            paddingBottom: 110\n          }}\n        >\n          {documents.map((document, i) => (\n            <div\n              key={i}\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                flexDirection: 'column'\n              }}\n            >\n              <Button\n\n                style={{\n                  margin: '1em',\n                  marginBottom: '1em',\n                  display: 'flex',\n                  height: '10em',\n                  width: '10em',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  position: 'relative'\n                }}\n                basic\n                color={this.getColor(document.type)[0]}\n              >\n                <>\n                  <Button as=\"a\"\n                    color={this.getColor(document.type)[0]}\n                    style={{ background: 'none' }}\n                    icon\n                    href={\n                      !document.type.includes('image')\n                        ? document.document\n                        : undefined\n                    }\n                    download={document.name}\n                    onClick={() => {\n                      document.type.includes('image') && this.showModal(document);\n                    }}>\n                    {document.type.includes('image') ? (\n                      <img\n                        src={document.document}\n                        style={{ maxWidth: '8em', maxHeight: '8em' }}\n                      ></img>\n                    ) : (\n                        <Icon\n                          style={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            fontSize: '4em',\n                            margin: 0,\n                            color: this.getColor(document.type)[0]\n                          }}\n                          name={this.getColor(document.type)[1]}\n                        ></Icon>\n                      )}\n                  </Button>\n                  <Icon\n                    style={{\n                      position: 'absolute',\n                      top: 10,\n                      right: 0,\n                      fontSize: '2em',\n                      cursor: 'pointer'\n                    }}\n                    name=\"times\"\n                    color=\"red\"\n                    onClick={e => this.deleteDocument(e, document)}\n                  ></Icon>\n                </>\n              </Button>\n\n              <div\n                className=\"hidescrollbar\"\n                style={{\n                  width: '10em',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  height: 50\n                }}\n              >\n                {this.state.documentEdited != document ? (\n                  <>\n                    <Header\n                      onClick={() => this.handleClicks(document)}\n                      as=\"h4\"\n                      className=\"hidescrollbar\"\n                      style={{\n                        overflowWrap: 'break-word',\n                        overflowX: 'hidden'\n                      }}\n                      color={this.getColor(document.type)[0]}\n                    >\n                      {document.name}\n                    </Header>\n                    <Icon\n                      onClick={() => this.editName(document)}\n                      style={{ marginLeft: 5, cursor: 'pointer' }}\n                      name=\"pencil\"\n                      color=\"grey\"\n                    ></Icon>\n                  </>\n                ) : (\n                    <div style={{ height: 30 }}>\n                      <Input\n                        style={{ height: 30 }}\n                        value={this.state.documentname}\n                        onChange={this.handleChangeName}\n                      ></Input>\n                      <Icon\n                        onClick={() => this.validateName(document)}\n                        name=\"check\"\n                        color=\"grey\"\n                        style={{ marginLeft: 5, cursor: 'pointer' }}\n                      ></Icon>\n                    </div>\n                  )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}