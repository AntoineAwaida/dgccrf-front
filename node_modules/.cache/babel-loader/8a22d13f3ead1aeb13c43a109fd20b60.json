{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/draggable.js\";\nimport { Draggable } from 'react-beautiful-dnd';\nimport React from 'react';\nexport default function MyDraggable(props) {\n  return props.locked ? React.createElement(Draggable, {\n    key: props.task.id.toString(),\n    draggableId: props.task.id.toString(),\n    index: props.index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, provided => React.createElement(\"div\", Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n    ref: provided.innerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), props.children)) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/draggable.js"],"names":["Draggable","React","MyDraggable","props","locked","task","id","toString","index","provided","draggableProps","dragHandleProps","innerRef","children"],"mappings":";AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,SAAOA,KAAK,CAACC,MAAN,GACL,oBAAC,SAAD;AACE,IAAA,GAAG,EAAED,KAAK,CAACE,IAAN,CAAWC,EAAX,CAAcC,QAAd,EADP;AAEE,IAAA,WAAW,EAAEJ,KAAK,CAACE,IAAN,CAAWC,EAAX,CAAcC,QAAd,EAFf;AAGE,IAAA,KAAK,EAAEJ,KAAK,CAACK,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGC,QAAQ,IACP,6CACMA,QAAQ,CAACC,cADf,EAEMD,QAAQ,CAACE,eAFf;AAGE,IAAA,GAAG,EAAEF,QAAQ,CAACG,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKGT,KAAK,CAACU,QALT,CANJ,CADK,GAiBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMV,KAAK,CAACU,QAAZ,CAjBF;AAmBD","sourcesContent":["import { Draggable } from 'react-beautiful-dnd';\nimport React from 'react';\n\nexport default function MyDraggable(props) {\n  return props.locked ? (\n    <Draggable\n      key={props.task.id.toString()}\n      draggableId={props.task.id.toString()}\n      index={props.index}\n    >\n      {provided => (\n        <div\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          {props.children}\n        </div>\n      )}\n    </Draggable>\n  ) : (\n    <div>{props.children}</div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}