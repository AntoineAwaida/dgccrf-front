{"ast":null,"code":"import PouchDB from 'pouchdb';\nimport PouchDBFind from 'pouchdb-find';\nimport config from '../config';\nPouchDB.plugin(PouchDBFind);\n\nclass pouchDbService {\n  constructor(pouchDbUrl) {\n    this.db = new PouchDB('mes-dossiers');\n    var opts = {\n      live: true,\n      retry: true,\n      filter: 'filters/by_user',\n      query_params: {\n        AGENT_DD_IDENT: 4447\n      }\n    }; // this.db.replicate.from(pouchDbUrl, opts);\n\n    this.db.createIndex({\n      index: {\n        fields: ['DOSSIER_IDENT']\n      }\n    });\n    this.db.createIndex({\n      index: {\n        fields: ['ACDG_CODE_ACTION']\n      }\n    });\n  } //call the callback on db changes\n\n\n  onChanges(cb) {\n    this.db.changes({\n      since: 'now',\n      live: true\n    }).on('change', cb);\n  } //getAllDocsOfTheDB\n\n\n  getAllDocs() {\n    return this.db.allDocs({\n      include_docs: true,\n      descending: true\n    }).then(table => table.rows.map(item => item.doc).filter(item => !(item._id.split('/')[0] == '_design')));\n  }\n\n  getAllActionCode() {\n    return this.getAllDocs().then(array => array.map(item => item.ACDG_CODE_ACTION).filter((value, index, self) => self.indexOf(value) === index));\n  }\n\n  getDossierIdFromActionCode(actionCode) {\n    return this.db.find({\n      selector: {\n        ACDG_CODE_ACTION: actionCode\n      }\n    }).then(items => items.docs[0].DOSSIER_IDENT);\n  }\n\n  getDossierById(dossier) {\n    return this.db.find({\n      selector: {\n        DOSSIER_IDENT: parseInt(dossier)\n      }\n    }).then(res => res.docs[0]);\n  }\n\n}\n\nexport default new pouchDbService(config.couchDb.url_dossiers);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/services/dossier.service.js"],"names":["PouchDB","PouchDBFind","config","plugin","pouchDbService","constructor","pouchDbUrl","db","opts","live","retry","filter","query_params","AGENT_DD_IDENT","createIndex","index","fields","onChanges","cb","changes","since","on","getAllDocs","allDocs","include_docs","descending","then","table","rows","map","item","doc","_id","split","getAllActionCode","array","ACDG_CODE_ACTION","value","self","indexOf","getDossierIdFromActionCode","actionCode","find","selector","items","docs","DOSSIER_IDENT","getDossierById","dossier","parseInt","res","couchDb","url_dossiers"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEAF,OAAO,CAACG,MAAR,CAAeF,WAAf;;AACA,MAAMG,cAAN,CAAqB;AACnBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACtB,SAAKC,EAAL,GAAU,IAAIP,OAAJ,CAAY,cAAZ,CAAV;AACA,QAAIQ,IAAI,GAAG;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,MAAM,EAAE,iBAHC;AAITC,MAAAA,YAAY,EAAE;AAAEC,QAAAA,cAAc,EAAE;AAAlB;AAJL,KAAX,CAFsB,CAQtB;;AACA,SAAKN,EAAL,CAAQO,WAAR,CAAoB;AAClBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,CAAC,eAAD;AAAV;AADW,KAApB;AAGA,SAAKT,EAAL,CAAQO,WAAR,CAAoB;AAClBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,CAAC,kBAAD;AAAV;AADW,KAApB;AAGD,GAhBkB,CAkBnB;;;AACAC,EAAAA,SAAS,CAACC,EAAD,EAAK;AACZ,SAAKX,EAAL,CACGY,OADH,CACW;AACPC,MAAAA,KAAK,EAAE,KADA;AAEPX,MAAAA,IAAI,EAAE;AAFC,KADX,EAKGY,EALH,CAKM,QALN,EAKgBH,EALhB;AAMD,GA1BkB,CA4BnB;;;AACAI,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKf,EAAL,CACJgB,OADI,CACI;AAAEC,MAAAA,YAAY,EAAE,IAAhB;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KADJ,EAEJC,IAFI,CAECC,KAAK,IACTA,KAAK,CAACC,IAAN,CACGC,GADH,CACOC,IAAI,IAAIA,IAAI,CAACC,GADpB,EAEGpB,MAFH,CAEUmB,IAAI,IAAI,EAAEA,IAAI,CAACE,GAAL,CAASC,KAAT,CAAe,GAAf,EAAoB,CAApB,KAA0B,SAA5B,CAFlB,CAHG,CAAP;AAOD;;AAEDC,EAAAA,gBAAgB,GAAG;AACjB,WAAO,KAAKZ,UAAL,GAAkBI,IAAlB,CAAuBS,KAAK,IACjCA,KAAK,CACFN,GADH,CACOC,IAAI,IAAIA,IAAI,CAACM,gBADpB,EAEGzB,MAFH,CAEU,CAAC0B,KAAD,EAAQtB,KAAR,EAAeuB,IAAf,KAAwBA,IAAI,CAACC,OAAL,CAAaF,KAAb,MAAwBtB,KAF1D,CADK,CAAP;AAKD;;AAEDyB,EAAAA,0BAA0B,CAACC,UAAD,EAAa;AACrC,WAAO,KAAKlC,EAAL,CACJmC,IADI,CACC;AACJC,MAAAA,QAAQ,EAAE;AACRP,QAAAA,gBAAgB,EAAEK;AADV;AADN,KADD,EAMJf,IANI,CAMCkB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAW,CAAX,EAAcC,aANxB,CAAP;AAOD;;AAEDC,EAAAA,cAAc,CAACC,OAAD,EAAU;AACtB,WAAO,KAAKzC,EAAL,CACJmC,IADI,CACC;AACJC,MAAAA,QAAQ,EAAE;AACRG,QAAAA,aAAa,EAAEG,QAAQ,CAACD,OAAD;AADf;AADN,KADD,EAMJtB,IANI,CAMCwB,GAAG,IAAIA,GAAG,CAACL,IAAJ,CAAS,CAAT,CANR,CAAP;AAOD;;AAjEkB;;AAoErB,eAAe,IAAIzC,cAAJ,CAAmBF,MAAM,CAACiD,OAAP,CAAeC,YAAlC,CAAf","sourcesContent":["import PouchDB from 'pouchdb';\nimport PouchDBFind from 'pouchdb-find';\nimport config from '../config';\n\nPouchDB.plugin(PouchDBFind);\nclass pouchDbService {\n  constructor(pouchDbUrl) {\n    this.db = new PouchDB('mes-dossiers');\n    var opts = {\n      live: true,\n      retry: true,\n      filter: 'filters/by_user',\n      query_params: { AGENT_DD_IDENT: 4447 }\n    };\n    // this.db.replicate.from(pouchDbUrl, opts);\n    this.db.createIndex({\n      index: { fields: ['DOSSIER_IDENT'] }\n    });\n    this.db.createIndex({\n      index: { fields: ['ACDG_CODE_ACTION'] }\n    });\n  }\n\n  //call the callback on db changes\n  onChanges(cb) {\n    this.db\n      .changes({\n        since: 'now',\n        live: true\n      })\n      .on('change', cb);\n  }\n\n  //getAllDocsOfTheDB\n  getAllDocs() {\n    return this.db\n      .allDocs({ include_docs: true, descending: true })\n      .then(table =>\n        table.rows\n          .map(item => item.doc)\n          .filter(item => !(item._id.split('/')[0] == '_design'))\n      );\n  }\n\n  getAllActionCode() {\n    return this.getAllDocs().then(array =>\n      array\n        .map(item => item.ACDG_CODE_ACTION)\n        .filter((value, index, self) => self.indexOf(value) === index)\n    );\n  }\n\n  getDossierIdFromActionCode(actionCode) {\n    return this.db\n      .find({\n        selector: {\n          ACDG_CODE_ACTION: actionCode\n        }\n      })\n      .then(items => items.docs[0].DOSSIER_IDENT);\n  }\n\n  getDossierById(dossier) {\n    return this.db\n      .find({\n        selector: {\n          DOSSIER_IDENT: parseInt(dossier)\n        }\n      })\n      .then(res => res.docs[0]);\n  }\n}\n\nexport default new pouchDbService(config.couchDb.url_dossiers);\n"]},"metadata":{},"sourceType":"module"}