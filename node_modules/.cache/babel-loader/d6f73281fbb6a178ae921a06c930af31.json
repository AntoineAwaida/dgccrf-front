{"ast":null,"code":"import _slicedToArray from \"/Users/antoine/Documents/DGCCRF/dgccrf-front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/trameCreation.container.js\";\nimport React from 'react';\nimport { Container, Button, Icon, Input, Responsive } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport { changeNameOfPage, changeBackUrl, changeActivePage } from '../../navbar/actions';\nimport { connect } from 'react-redux';\nimport TrameComponent from './trame';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: () => dispatch(changeNameOfPage('Création de trame')),\n    changeBackUrl: () => dispatch(changeBackUrl('/nouvelle-visite')),\n    changeActivePage: () => dispatch(changeActivePage('mesDossiers', '/creation-trame'))\n  };\n}\n\nclass TrameCreationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onDragEnd = result => {\n      const destination = result.destination,\n            source = result.source;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const res = Array.from(this.state.taskList);\n\n      const _res$splice = res.splice(result.source.index, 1),\n            _res$splice2 = _slicedToArray(_res$splice, 1),\n            removed = _res$splice2[0];\n\n      res.splice(result.destination.index, 0, removed);\n      this.setState({\n        taskList: res\n      });\n    };\n\n    this.state = {\n      taskList: [],\n      index: 0,\n      id: 0,\n      trameName: ''\n    };\n    this.validateName = this.validateName.bind(this);\n    this.changeType = this.changeType.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.changeNameOfPage();\n    this.props.changeBackUrl();\n    this.props.changeActivePage();\n  }\n\n  deleteTask(task) {\n    this.setState({\n      taskList: this.state.taskList.filter(t => {\n        return t != task;\n      })\n    });\n  }\n\n  validateName(task, name) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.title = name;\n      }\n\n      return t;\n    });\n    this.setState({\n      taskList\n    });\n  }\n\n  handleNameChange(e, data) {\n    this.setState({\n      trameName: data.value\n    });\n  }\n\n  handleTextChange(task, text) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.innerContent = text;\n      }\n\n      return t;\n    });\n    this.setState({\n      taskList\n    });\n  }\n\n  changeType(task, type) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.type = type;\n      }\n\n      return t;\n    });\n    this.setState({\n      taskList\n    });\n  }\n\n  addTask() {\n    //de 3 types: basic, text, ou document.\n    this.setState({\n      taskList: [...this.state.taskList, {\n        title: 'Nouvelle tâche' + this.state.index,\n        type: 'basic',\n        innerContent: '',\n        index: this.state.index,\n        id: this.state.id\n      }],\n      index: this.state.index + 1,\n      id: this.state.id + 1\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"hidescrollbar\",\n      style: {\n        display: 'flex',\n        height: '100%',\n        width: '100%',\n        backgroundColor: '#f2f2f2',\n        overflow: 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        justifyContent: 'center',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        overflow: 'hidden',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'fixed',\n        zIndex: 10,\n        width: '100%',\n        backgroundColor: '#f2f2f2',\n        display: 'flex',\n        flexDirection: 'row',\n        padding: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Responsive, {\n      minWidth: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 0.3\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: 150\n      },\n      placeholder: \"Nom de la trame...\",\n      value: this.state.trameName,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        marginLeft: 5\n      },\n      color: \"teal\",\n      icon: true,\n      onClick: () => this.addTask(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        flex: 0.3,\n        justifyContent: 'flex-end',\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"red\",\n      disabled: this.state.trameName.length === 0 || this.state.taskList.length === 0,\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"save\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        flex: 10,\n        overflowY: 'auto',\n        marginTop: 80,\n        width: '100%'\n      },\n      className: \"hidescrollbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(TrameComponent, {\n      validateName: this.validateName,\n      taskList: this.state.taskList,\n      changeType: this.changeType,\n      handleTextChange: this.handleTextChange,\n      deleteTask: this.deleteTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), provided.placeholder))))))));\n  }\n\n}\n\nTrameCreationComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TrameCreationComponent);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/trame/trameCreation.container.js"],"names":["React","Container","Button","Icon","Input","Responsive","PropTypes","changeNameOfPage","changeBackUrl","changeActivePage","connect","TrameComponent","DragDropContext","Droppable","mapStateToProps","mapDispatchToProps","dispatch","TrameCreationComponent","Component","constructor","props","onDragEnd","result","destination","source","droppableId","index","res","Array","from","state","taskList","splice","removed","setState","id","trameName","validateName","bind","changeType","handleTextChange","handleNameChange","deleteTask","componentDidMount","task","filter","t","name","title","e","data","value","text","innerContent","type","addTask","render","display","height","width","backgroundColor","overflow","justifyContent","textAlign","flexDirection","alignItems","position","zIndex","padding","flex","marginLeft","length","overflowY","marginTop","provided","innerRef","droppableProps","placeholder","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Button, Icon, Input, Responsive } from 'semantic-ui-react';\nimport { PropTypes } from 'prop-types';\nimport {\n  changeNameOfPage,\n  changeBackUrl,\n  changeActivePage\n} from '../../navbar/actions';\nimport { connect } from 'react-redux';\n\nimport TrameComponent from './trame';\n\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: () => dispatch(changeNameOfPage('Création de trame')),\n    changeBackUrl: () => dispatch(changeBackUrl('/nouvelle-visite')),\n    changeActivePage: () =>\n      dispatch(changeActivePage('mesDossiers', '/creation-trame'))\n  };\n}\n\nclass TrameCreationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: [],\n      index: 0,\n      id: 0,\n      trameName: ''\n    };\n    this.validateName = this.validateName.bind(this);\n    this.changeType = this.changeType.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n  }\n  componentDidMount() {\n    this.props.changeNameOfPage();\n    this.props.changeBackUrl();\n    this.props.changeActivePage();\n  }\n\n  deleteTask(task) {\n    this.setState({\n      taskList: this.state.taskList.filter(t => {\n        return t != task;\n      })\n    });\n  }\n\n  validateName(task, name) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.title = name;\n      }\n\n      return t;\n    });\n\n    this.setState({ taskList });\n  }\n\n  handleNameChange(e, data) {\n    this.setState({ trameName: data.value });\n  }\n\n  handleTextChange(task, text) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.innerContent = text;\n      }\n\n      return t;\n    });\n    this.setState({ taskList });\n  }\n\n  changeType(task, type) {\n    let taskList = this.state.taskList;\n    taskList = taskList.filter(t => {\n      if (t == task) {\n        t.type = type;\n      }\n\n      return t;\n    });\n\n    this.setState({ taskList });\n  }\n\n  addTask() {\n    //de 3 types: basic, text, ou document.\n    this.setState({\n      taskList: [\n        ...this.state.taskList,\n        {\n          title: 'Nouvelle tâche' + this.state.index,\n          type: 'basic',\n          innerContent: '',\n          index: this.state.index,\n          id: this.state.id\n        }\n      ],\n      index: this.state.index + 1,\n      id: this.state.id + 1\n    });\n  }\n\n  onDragEnd = result => {\n    const { destination, source } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const res = Array.from(this.state.taskList);\n\n    const [removed] = res.splice(result.source.index, 1);\n    res.splice(result.destination.index, 0, removed);\n\n    this.setState({ taskList: res });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"hidescrollbar\"\n        style={{\n          display: 'flex',\n          height: '100%',\n          width: '100%',\n\n          backgroundColor: '#f2f2f2',\n          overflow: 'hidden'\n        }}\n      >\n        <div\n          style={{\n            width: '100%',\n            justifyContent: 'center',\n            textAlign: 'center'\n          }}\n        >\n          <Container style={{ height: '100%' }}>\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                overflow: 'hidden',\n                height: '100%'\n              }}\n            >\n              <div\n                style={{\n                  position: 'fixed',\n                  zIndex: 10,\n                  width: '100%',\n                  backgroundColor: '#f2f2f2',\n                  display: 'flex',\n                  flexDirection: 'row',\n\n                  padding: 20\n                }}\n              >\n                <Responsive minWidth={400}>\n                  <div style={{ flex: 0.3 }}></div>\n                </Responsive>\n                <div style={{ flex: 1 }}>\n                  <Input\n                    style={{ width: 150 }}\n                    placeholder=\"Nom de la trame...\"\n                    value={this.state.trameName}\n                    onChange={this.handleNameChange}\n                  ></Input>\n                  <Button\n                    style={{ marginLeft: 5 }}\n                    color=\"teal\"\n                    icon\n                    onClick={() => this.addTask()}\n                  >\n                    <Icon name=\"plus\" color=\"white\"></Icon>\n                  </Button>\n                </div>\n                <div\n                  style={{\n                    flex: 0.3,\n                    justifyContent: 'flex-end',\n                    display: 'flex'\n                  }}\n                >\n                  <Button\n                    color=\"red\"\n                    disabled={\n                      this.state.trameName.length === 0 ||\n                      this.state.taskList.length === 0\n                    }\n                    icon\n                  >\n                    <Icon name=\"save\" color=\"white\"></Icon>\n                  </Button>\n                </div>\n\n                {/* <Tabs\n                  value={this.state.activeIndex}\n                  fullWidth\n                  onChange={this.handleChange}\n                >\n                  <Tab label=\"Avant\" />\n                  <Tab label=\"Pendant\" />\n                  <Tab label=\"Après\" />\n                </Tabs> */}\n              </div>\n              <div\n                style={{\n                  flex: 10,\n                  overflowY: 'auto',\n                  marginTop: 80,\n\n                  width: '100%'\n                }}\n                className=\"hidescrollbar\"\n              >\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                  <Droppable droppableId=\"droppable\">\n                    {provided => (\n                      <div ref={provided.innerRef} {...provided.droppableProps}>\n                        <TrameComponent\n                          validateName={this.validateName}\n                          taskList={this.state.taskList}\n                          changeType={this.changeType}\n                          handleTextChange={this.handleTextChange}\n                          deleteTask={this.deleteTask}\n                        />\n                        {provided.placeholder}\n                      </div>\n                    )}\n                  </Droppable>\n                </DragDropContext>\n              </div>\n            </div>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nTrameCreationComponent.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired,\n  changeActivePage: PropTypes.func.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrameCreationComponent);\n"]},"metadata":{},"sourceType":"module"}