{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/index.js\";\nimport React, { Component } from 'react';\nimport { Container, Grid, Button, Icon, List, Header } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport PouchDBServices from '../../services/index';\nimport MyActivityIndicator from '../../components/myActivityIndicator.component';\nexport default class Preferences extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      trames: [],\n      isLoading: true,\n      trameSelected: null\n    };\n  }\n\n  selectTrame(trame) {\n    this.setState({\n      trameSelected: trame\n    });\n  }\n\n  componentDidMount() {\n    PouchDBServices.services.trame.getAllDocs().then(res => {\n      this.setState({\n        trames: res,\n        isLoading: false\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, !this.state.isLoading ? React.createElement(Grid, {\n      style: {\n        height: '100%'\n      },\n      verticalAlign: \"middle\",\n      columns: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      computer: 6,\n      tablet: 8,\n      mobile: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      style: {\n        padding: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Button, {\n      as: Link,\n      to: '/authentification',\n      icon: true,\n      fluid: true,\n      color: \"red\",\n      size: \"massive\",\n      labelPosition: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"log out\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), \"Se d\\xE9connecter\")), React.createElement(Grid.Row, {\n      style: {\n        padding: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Button, {\n      as: Link,\n      to: '/nouvelle-trame',\n      icon: true,\n      fluid: true,\n      color: \"teal\",\n      size: \"massive\",\n      labelPosition: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), \"Cr\\xE9er un mod\\xE8le de trame\")), React.createElement(Grid.Row, {\n      style: {\n        padding: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Button, {\n      as: Link,\n      to: this.state.trameSelected && '/nouvelle-trame/' + this.state.trameSelected._id,\n      icon: true,\n      disabled: !this.state.trameSelected,\n      fluid: true,\n      color: \"blue\",\n      size: \"massive\",\n      labelPosition: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), \"Editer un mod\\xE8le de trame\"), React.createElement(List, {\n      divided: true,\n      relaxed: true,\n      verticalAlign: \"middle\",\n      style: {\n        border: '1px solid #2185d0',\n        borderTop: 0,\n        marginTop: 0,\n        maxHeight: 200,\n        overflow: 'auto',\n        borderBottomLeftRadius: 3,\n        borderBottomRightRadius: 3\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.trames.map((trame, i) => React.createElement(List.Item, {\n      onClick: () => this.selectTrame(trame),\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        padding: 15,\n        backgroundColor: this.state.trameSelected === trame && 'white'\n      },\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, trame.name)))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))) : React.createElement(MyActivityIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/preferences/index.js"],"names":["React","Component","Container","Grid","Button","Icon","List","Header","Link","PouchDBServices","MyActivityIndicator","Preferences","constructor","props","context","state","trames","isLoading","trameSelected","selectTrame","trame","setState","componentDidMount","services","getAllDocs","then","res","catch","e","console","log","render","width","height","padding","_id","border","borderTop","marginTop","maxHeight","overflow","borderBottomLeftRadius","borderBottomRightRadius","map","i","display","justifyContent","backgroundColor","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Grid, Button, Icon, List, Header } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nimport PouchDBServices from '../../services/index';\nimport MyActivityIndicator from '../../components/myActivityIndicator.component';\nexport default class Preferences extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      trames: [],\n      isLoading: true,\n      trameSelected: null\n    };\n  }\n\n  selectTrame(trame) {\n    this.setState({ trameSelected: trame });\n  }\n\n  componentDidMount() {\n    PouchDBServices.services.trame\n      .getAllDocs()\n      .then(res => {\n        this.setState({ trames: res, isLoading: false });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  render() {\n    return (\n      <Container style={{ width: '100%', height: '100%' }}>\n        {!this.state.isLoading ? (\n          <Grid\n            style={{ height: '100%' }}\n            verticalAlign=\"middle\"\n            columns=\"equal\"\n          >\n            <Grid.Row>\n              <Grid.Column></Grid.Column>\n              <Grid.Column computer={6} tablet={8} mobile={16}>\n                <Grid.Row style={{ padding: '20px' }}>\n                  <Button\n                    as={Link}\n                    to={'/authentification'}\n                    icon\n                    fluid\n                    color=\"red\"\n                    size=\"massive\"\n                    labelPosition=\"left\"\n                  >\n                    <Icon name=\"log out\" />\n                    Se déconnecter\n                  </Button>\n                </Grid.Row>\n                <Grid.Row style={{ padding: '20px' }}>\n                  <Button\n                    as={Link}\n                    to={'/nouvelle-trame'}\n                    icon\n                    fluid\n                    color=\"teal\"\n                    size=\"massive\"\n                    labelPosition=\"left\"\n                  >\n                    <Icon name=\"add\" />\n                    Créer un modèle de trame\n                  </Button>\n                </Grid.Row>\n                <Grid.Row style={{ padding: '20px' }}>\n                  <Button\n                    as={Link}\n                    to={\n                      this.state.trameSelected &&\n                      '/nouvelle-trame/' + this.state.trameSelected._id\n                    }\n                    icon\n                    disabled={!this.state.trameSelected}\n                    fluid\n                    color=\"blue\"\n                    size=\"massive\"\n                    labelPosition=\"left\"\n                  >\n                    <Icon name=\"edit\" />\n                    Editer un modèle de trame\n                  </Button>\n                  <List\n                    divided\n                    relaxed\n                    verticalAlign=\"middle\"\n                    style={{\n                      border: '1px solid #2185d0',\n                      borderTop: 0,\n                      marginTop: 0,\n                      maxHeight: 200,\n                      overflow: 'auto',\n                      borderBottomLeftRadius: 3,\n                      borderBottomRightRadius: 3\n                    }}\n                  >\n                    {this.state.trames.map((trame, i) => (\n                      <List.Item\n                        onClick={() => this.selectTrame(trame)}\n                        style={{\n                          display: 'flex',\n                          justifyContent: 'center',\n                          padding: 15,\n                          backgroundColor:\n                            this.state.trameSelected === trame && 'white'\n                        }}\n                        key={i}\n                      >\n                        <Header as=\"h5\">{trame.name}</Header>\n                      </List.Item>\n                    ))}\n                  </List>\n                </Grid.Row>\n              </Grid.Column>\n              <Grid.Column></Grid.Column>\n            </Grid.Row>\n          </Grid>\n        ) : (\n          <MyActivityIndicator />\n        )}\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}