{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport PouchDB from 'pouchdb';\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      user: '',\n      list: []\n    };\n    this.db = new PouchDB('my_database');\n    var remoteCouch = 'http://Admin:pass@127.0.0.1:5984/test';\n    this.db.changes({\n      since: 'now',\n      live: true\n    }).on('change', this.updateTodos.bind(this));\n    var opts = {\n      live: true,\n      filter: doc => this.checkShouldSync(doc)\n    };\n    this.db.replicate.to(remoteCouch, opts, console.log);\n    this.db.replicate.from(remoteCouch, opts, console.log);\n    this.updateTodos();\n    this.checkShouldSync = this.checkShouldSync.bind(this);\n  }\n\n  checkShouldSync(doc) {\n    console.log(doc.user === this.state.user);\n    return doc.user === this.state.user;\n  }\n\n  updateTodos() {\n    db.allDocs({\n      include_docs: true,\n      descending: true\n    }, (err, doc) => {\n      this.setState({\n        list: doc.rows.map(row => row.doc)\n      });\n    });\n  }\n\n  addTodo(text, user) {\n    var todo = {\n      _id: new Date().toISOString(),\n      text: text,\n      user: user\n    };\n    db.put(todo, function callback(err, result) {\n      if (!err) {\n        console.log('Successfully posted a todo!');\n      }\n    });\n  }\n\n  getTodos() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: e => this.setState({\n        user: e.target.value\n      }),\n      placeholder: \"User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: e => this.setState({\n        text: e.target.value\n      }),\n      placeholder: \"Text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.addTodo(this.state.text, this.state.user),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Ajouter\"), React.createElement(\"button\", {\n      onClick: () => this.getTodos(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"refresh\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, JSON.stringify(this.state.list)));\n  }\n\n}","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/App.js"],"names":["React","PouchDB","App","Component","constructor","props","state","text","user","list","db","remoteCouch","changes","since","live","on","updateTodos","bind","opts","filter","doc","checkShouldSync","replicate","to","console","log","from","allDocs","include_docs","descending","err","setState","rows","map","row","addTodo","todo","_id","Date","toISOString","put","callback","result","getTodos","render","e","target","value","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PouchDB from 'pouchdb';\n\n\n\n\nexport class App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      text : '',\n      user : '',\n      list:[]\n    }\n\n    this.db = new PouchDB('my_database');\n    var remoteCouch = 'http://Admin:pass@127.0.0.1:5984/test';\n\n    this.db.changes({\n      since: 'now',\n      live: true\n    }).on('change', this.updateTodos.bind(this));\n\n    var opts = {live: true, filter: (doc) =>this.checkShouldSync(doc) };\n    this.db.replicate.to(remoteCouch, opts, console.log);\n    this.db.replicate.from(remoteCouch, opts, console.log);\n    this.updateTodos();\n\n    this.checkShouldSync = this.checkShouldSync.bind(this);\n  }\n\n  checkShouldSync(doc){\n    console.log(doc.user === this.state.user)\n    return doc.user === this.state.user\n  }\n\n  updateTodos(){\n    db.allDocs({include_docs: true, descending: true}, (err, doc) => {\n      this.setState({list:doc.rows.map(row=>row.doc)});\n    });\n  }\n\n  addTodo(text,user) {\n    var todo = {\n      _id: new Date().toISOString(),\n      text: text,\n      user: user\n    };\n    db.put(todo, function callback(err, result) {\n      if (!err) {\n        console.log('Successfully posted a todo!');\n      }\n    });\n  }\n\n  getTodos(){\n\n  }\n  \n  render() {\n    return (\n      <div>\n        <input onChange = {(e)=>this.setState({user:e.target.value})} placeholder=\"User\"/> \n        <input onChange = {(e)=>this.setState({text:e.target.value})} placeholder=\"Text\"/> \n        <button onClick={()=>this.addTodo(this.state.text,this.state.user)}>Ajouter</button>\n        <button onClick={()=>this.getTodos()}>refresh</button>\n        <div>\n          {JSON.stringify(this.state.list)}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}