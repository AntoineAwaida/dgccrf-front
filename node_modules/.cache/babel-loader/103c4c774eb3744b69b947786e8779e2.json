{"ast":null,"code":"var _jsxFileName = \"/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/index.js\";\nimport React from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport InfosComponent from './infos.container';\nimport VisitesComponent from './visites.container';\nimport { PropTypes } from 'prop-types';\nimport { changeNameOfPage, changeBackUrl } from '../navbar/actions';\nimport { connect } from 'react-redux';\nimport { Grid, Container } from 'semantic-ui-react';\nimport { Tabs, Tab } from '@material-ui/core';\nimport './swipeable.css';\nimport dossierService from '../../services/dossier.service';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: newName => dispatch(changeNameOfPage(newName)),\n    changeBackUrl: newBackUrl => dispatch(changeBackUrl(newBackUrl))\n  };\n}\n\nclass MonDossier extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = (event, value) => {\n      this.setState({\n        activeIndex: value\n      });\n    };\n\n    this.handleChangeIndex = value => {\n      this.setState({\n        activeIndex: value\n      });\n    };\n\n    this.state = {\n      activeIndex: 0,\n      dossier: null\n    };\n  }\n\n  loadDossier(dossier) {\n    this.setState({\n      dossier: dossier\n    });\n  }\n\n  componentDidMount() {\n    this.props.changeNameOfPage('Dossier ' + this.props.match.params.id);\n    this.props.changeBackUrl('/mes-dossiers');\n    dossierService.getDossierById(this.props.match.params.id).then(res => this.loadDossier(res));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        width: '100%',\n        height: '100%',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        overflow: 'hidden',\n        height: '100%',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      centered: true,\n      style: {\n        height: '100%',\n        width: '100%',\n        flex: 1,\n        flexDirection: 'column',\n        flexWrap: 'nowrap',\n        overflow: 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: this.state.activeIndex,\n      fullWidth: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"Infos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Visites\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Documents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(Grid.Row, {\n      style: {\n        flex: 10,\n        overflowY: 'auto'\n      },\n      className: \"hidescrollbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%',\n        height: '100%',\n        justifyContent: 'center',\n        overflow: 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(SwipeableViews, {\n      style: {\n        height: '100%'\n      },\n      slideStyle: {\n        height: '100%'\n      },\n      slideClassName: \"hidescrollbar\",\n      index: this.state.activeIndex,\n      onChangeIndex: this.handleChangeIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(InfosComponent, {\n      dossier: this.state.dossier,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(VisitesComponent, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nMonDossier.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MonDossier);","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/containers/dossier/index.js"],"names":["React","SwipeableViews","InfosComponent","VisitesComponent","PropTypes","changeNameOfPage","changeBackUrl","connect","Grid","Container","Tabs","Tab","dossierService","mapStateToProps","mapDispatchToProps","dispatch","newName","newBackUrl","MonDossier","Component","constructor","props","context","handleChange","event","value","setState","activeIndex","handleChangeIndex","state","dossier","loadDossier","componentDidMount","match","params","id","getDossierById","then","res","render","flex","display","width","height","justifyContent","overflow","flexDirection","flexWrap","overflowY","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport InfosComponent from './infos.container';\nimport VisitesComponent from './visites.container';\nimport { PropTypes } from 'prop-types';\nimport { changeNameOfPage, changeBackUrl } from '../navbar/actions';\nimport { connect } from 'react-redux';\nimport { Grid, Container } from 'semantic-ui-react';\nimport { Tabs, Tab } from '@material-ui/core';\n\nimport './swipeable.css';\nimport dossierService from '../../services/dossier.service';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeNameOfPage: newName => dispatch(changeNameOfPage(newName)),\n    changeBackUrl: newBackUrl => dispatch(changeBackUrl(newBackUrl))\n  };\n}\n\nclass MonDossier extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      activeIndex: 0,\n      dossier: null\n    };\n  }\n\n  handleChange = (event, value) => {\n    this.setState({\n      activeIndex: value\n    });\n  };\n  handleChangeIndex = value => {\n    this.setState({\n      activeIndex: value\n    });\n  };\n\n  loadDossier(dossier) {\n    this.setState({ dossier: dossier });\n  }\n\n  componentDidMount() {\n    this.props.changeNameOfPage('Dossier ' + this.props.match.params.id);\n    this.props.changeBackUrl('/mes-dossiers');\n    dossierService\n      .getDossierById(this.props.match.params.id)\n      .then(res => this.loadDossier(res));\n  }\n  render() {\n    return (\n      <div\n        style={{\n          flex: 1,\n          display: 'flex',\n          width: '100%',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container\n          style={{\n            overflow: 'hidden',\n            height: '100%',\n            width: '100%'\n          }}\n        >\n          <Grid\n            centered\n            style={{\n              height: '100%',\n              width: '100%',\n              flex: 1,\n              flexDirection: 'column',\n              flexWrap: 'nowrap',\n              overflow: 'hidden'\n            }}\n          >\n            <Grid.Row style={{ flex: 1 }}>\n              <Tabs\n                value={this.state.activeIndex}\n                fullWidth\n                onChange={this.handleChange}\n              >\n                <Tab label=\"Infos\" />\n                <Tab label=\"Visites\" />\n                <Tab label=\"Documents\" />\n              </Tabs>\n            </Grid.Row>\n            <Grid.Row\n              style={{ flex: 10, overflowY: 'auto' }}\n              className=\"hidescrollbar\"\n            >\n              <Grid.Column width={16}>\n                <div\n                  style={{\n                    display: 'flex',\n                    width: '100%',\n                    height: '100%',\n                    justifyContent: 'center',\n\n                    overflow: 'hidden'\n                  }}\n                >\n                  <SwipeableViews\n                    style={{ height: '100%' }}\n                    slideStyle={{ height: '100%' }}\n                    slideClassName=\"hidescrollbar\"\n                    index={this.state.activeIndex}\n                    onChangeIndex={this.handleChangeIndex}\n                  >\n                    <InfosComponent dossier={this.state.dossier} />\n                    <VisitesComponent {...this.props} />\n                  </SwipeableViews>\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nMonDossier.propTypes = {\n  changeNameOfPage: PropTypes.func.isRequired,\n  changeBackUrl: PropTypes.func.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MonDossier);\n"]},"metadata":{},"sourceType":"module"}