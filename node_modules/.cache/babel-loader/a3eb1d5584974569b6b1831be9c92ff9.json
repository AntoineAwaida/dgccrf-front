{"ast":null,"code":"import PouchDB from 'pouchdb';\nimport PouchDBFind from 'pouchdb-find';\nimport config from '../../config';\nimport replicateFromSQL from '../replicationHandler';\nPouchDB.plugin(PouchDBFind);\n\nclass PouchDbService {\n  constructor(AGENT_DD_IDENT) {\n    this.resetDb = this.resetDb.bind(this);\n    this.initDb = this.initDb.bind(this);\n    this.onChanges = this.onChanges.bind(this);\n    this.changesCallbacks = [];\n    this.initDb(AGENT_DD_IDENT);\n  }\n\n  async initDb(AGENT_DD_IDENT) {\n    this.db = new PouchDB('mes-dossiers');\n    this.replication = replicateFromSQL(this.db, config.backend.base_url + '/fulldata/dossiers?idAgent=' + AGENT_DD_IDENT, 'dossier_date');\n    this.db.createIndex({\n      index: {\n        fields: ['DOSSIER_IDENT']\n      }\n    });\n    this.db.createIndex({\n      index: {\n        fields: ['ACDG_CODE_ACTION']\n      }\n    });\n    this.db.changes({\n      since: 0,\n      live: true\n    }).on('change', () => this.changesCallbacks.map(cb => cb()));\n  }\n\n  async resetDb(AGENT_DD_IDENT) {\n    this.replication.stopReplication();\n    await this.db.destroy();\n    await this.initDb(AGENT_DD_IDENT);\n  } //call the callback on db changes\n\n\n  onChanges(cb) {\n    this.changesCallbacks.push(cb);\n  }\n\n  compareDate(date1, date2) {\n    return date1.DOSSIER_DATE_LIMITE > date2.DOSSIER_DATE_LIMITE ? 1 : -1;\n  } //getAllDocsOfTheDB\n\n\n  getAllDocs() {\n    return this.db.allDocs({\n      include_docs: true,\n      descending: true\n    }).then(table => table.rows.map(item => item.doc).filter(item => !(item._id.split('/')[0] == '_design')).sort(this.compareDate));\n  }\n\n  getAllActionCode() {\n    return this.getAllDocs().then(array => array.map(item => item.ACDG_CODE_ACTION).filter((value, index, self) => self.indexOf(value) === index));\n  }\n\n  getDossierIdFromActionCode(actionCode) {\n    return this.db.find({\n      selector: {\n        ACDG_CODE_ACTION: actionCode\n      }\n    }).then(items => items.docs[0].DOSSIER_IDENT);\n  }\n\n  getDossierById(dossier) {\n    return this.db.find({\n      selector: {\n        DOSSIER_IDENT: parseInt(dossier)\n      }\n    }).then(res => res.docs[0]);\n  }\n\n}\n\nexport default PouchDbService;","map":{"version":3,"sources":["/Users/antoine/Documents/DGCCRF/dgccrf-front/src/services/subservices/dossier.service.js"],"names":["PouchDB","PouchDBFind","config","replicateFromSQL","plugin","PouchDbService","constructor","AGENT_DD_IDENT","resetDb","bind","initDb","onChanges","changesCallbacks","db","replication","backend","base_url","createIndex","index","fields","changes","since","live","on","map","cb","stopReplication","destroy","push","compareDate","date1","date2","DOSSIER_DATE_LIMITE","getAllDocs","allDocs","include_docs","descending","then","table","rows","item","doc","filter","_id","split","sort","getAllActionCode","array","ACDG_CODE_ACTION","value","self","indexOf","getDossierIdFromActionCode","actionCode","find","selector","items","docs","DOSSIER_IDENT","getDossierById","dossier","parseInt","res"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AAEAH,OAAO,CAACI,MAAR,CAAeH,WAAf;;AAEA,MAAMI,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAACC,cAAD,EAAiB;AACxB,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AAEA,SAAKG,gBAAL,GAAwB,EAAxB;AAEA,SAAKF,MAAL,CAAYH,cAAZ;AACH;;AAED,QAAMG,MAAN,CAAaH,cAAb,EAA6B;AACzB,SAAKM,EAAL,GAAU,IAAIb,OAAJ,CAAY,cAAZ,CAAV;AACA,SAAKc,WAAL,GAAmBX,gBAAgB,CAAC,KAAKU,EAAN,EAAUX,MAAM,CAACa,OAAP,CAAeC,QAAf,GAA0B,6BAA1B,GAA0DT,cAApE,EAAoF,cAApF,CAAnC;AAGA,SAAKM,EAAL,CAAQI,WAAR,CAAoB;AAChBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,CAAC,eAAD;AAAV;AADS,KAApB;AAGA,SAAKN,EAAL,CAAQI,WAAR,CAAoB;AAChBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,CAAC,kBAAD;AAAV;AADS,KAApB;AAIA,SAAKN,EAAL,CAAQO,OAAR,CAAgB;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,IAAI,EAAE;AAFM,KAAhB,EAGGC,EAHH,CAGM,QAHN,EAGgB,MAAM,KAAKX,gBAAL,CAAsBY,GAAtB,CAA0BC,EAAE,IAAIA,EAAE,EAAlC,CAHtB;AAIH;;AAED,QAAMjB,OAAN,CAAcD,cAAd,EAA8B;AAC1B,SAAKO,WAAL,CAAiBY,eAAjB;AACA,UAAM,KAAKb,EAAL,CAAQc,OAAR,EAAN;AACA,UAAM,KAAKjB,MAAL,CAAYH,cAAZ,CAAN;AACH,GAjCgB,CAmCjB;;;AACAI,EAAAA,SAAS,CAACc,EAAD,EAAK;AACV,SAAKb,gBAAL,CAAsBgB,IAAtB,CAA2BH,EAA3B;AACH;;AACDI,EAAAA,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAe;AACtB,WAAOD,KAAK,CAACE,mBAAN,GAA4BD,KAAK,CAACC,mBAAlC,GAAwD,CAAxD,GAA4D,CAAC,CAApE;AACH,GAzCgB,CA0CjB;;;AACAC,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKpB,EAAL,CACFqB,OADE,CACM;AAAEC,MAAAA,YAAY,EAAE,IAAhB;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KADN,EAEFC,IAFE,CAEGC,KAAK,IACPA,KAAK,CAACC,IAAN,CACKf,GADL,CACSgB,IAAI,IAAIA,IAAI,CAACC,GADtB,EAEKC,MAFL,CAEYF,IAAI,IAAI,EAAEA,IAAI,CAACG,GAAL,CAASC,KAAT,CAAe,GAAf,EAAoB,CAApB,KAA0B,SAA5B,CAFpB,EAGKC,IAHL,CAGU,KAAKhB,WAHf,CAHD,CAAP;AAQH;;AAEDiB,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAKb,UAAL,GAAkBI,IAAlB,CAAuBU,KAAK,IAC/BA,KAAK,CACAvB,GADL,CACSgB,IAAI,IAAIA,IAAI,CAACQ,gBADtB,EAEKN,MAFL,CAEY,CAACO,KAAD,EAAQ/B,KAAR,EAAegC,IAAf,KAAwBA,IAAI,CAACC,OAAL,CAAaF,KAAb,MAAwB/B,KAF5D,CADG,CAAP;AAKH;;AAEDkC,EAAAA,0BAA0B,CAACC,UAAD,EAAa;AACnC,WAAO,KAAKxC,EAAL,CACFyC,IADE,CACG;AACFC,MAAAA,QAAQ,EAAE;AACNP,QAAAA,gBAAgB,EAAEK;AADZ;AADR,KADH,EAMFhB,IANE,CAMGmB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAW,CAAX,EAAcC,aAN1B,CAAP;AAOH;;AAEDC,EAAAA,cAAc,CAACC,OAAD,EAAU;AACpB,WAAO,KAAK/C,EAAL,CACFyC,IADE,CACG;AACFC,MAAAA,QAAQ,EAAE;AACNG,QAAAA,aAAa,EAAEG,QAAQ,CAACD,OAAD;AADjB;AADR,KADH,EAMFvB,IANE,CAMGyB,GAAG,IAAIA,GAAG,CAACL,IAAJ,CAAS,CAAT,CANV,CAAP;AAOH;;AAhFgB;;AAmFrB,eAAepD,cAAf","sourcesContent":["import PouchDB from 'pouchdb';\nimport PouchDBFind from 'pouchdb-find';\nimport config from '../../config';\nimport replicateFromSQL from '../replicationHandler';\n\nPouchDB.plugin(PouchDBFind);\n\nclass PouchDbService {\n    constructor(AGENT_DD_IDENT) {\n        this.resetDb = this.resetDb.bind(this);\n        this.initDb = this.initDb.bind(this);\n        this.onChanges = this.onChanges.bind(this);\n\n        this.changesCallbacks = [];\n\n        this.initDb(AGENT_DD_IDENT);\n    }\n\n    async initDb(AGENT_DD_IDENT) {\n        this.db = new PouchDB('mes-dossiers');\n        this.replication = replicateFromSQL(this.db, config.backend.base_url + '/fulldata/dossiers?idAgent=' + AGENT_DD_IDENT, 'dossier_date');\n\n\n        this.db.createIndex({\n            index: { fields: ['DOSSIER_IDENT'] }\n        });\n        this.db.createIndex({\n            index: { fields: ['ACDG_CODE_ACTION'] }\n        });\n\n        this.db.changes({\n            since: 0,\n            live: true\n        }).on('change', () => this.changesCallbacks.map(cb => cb()));\n    }\n\n    async resetDb(AGENT_DD_IDENT) {\n        this.replication.stopReplication();\n        await this.db.destroy();\n        await this.initDb(AGENT_DD_IDENT);\n    }\n\n    //call the callback on db changes\n    onChanges(cb) {\n        this.changesCallbacks.push(cb);\n    }\n    compareDate(date1, date2) {\n        return date1.DOSSIER_DATE_LIMITE > date2.DOSSIER_DATE_LIMITE ? 1 : -1\n    }\n    //getAllDocsOfTheDB\n    getAllDocs() {\n        return this.db\n            .allDocs({ include_docs: true, descending: true })\n            .then(table =>\n                table.rows\n                    .map(item => item.doc)\n                    .filter(item => !(item._id.split('/')[0] == '_design'))\n                    .sort(this.compareDate)\n            );\n    }\n\n    getAllActionCode() {\n        return this.getAllDocs().then(array =>\n            array\n                .map(item => item.ACDG_CODE_ACTION)\n                .filter((value, index, self) => self.indexOf(value) === index)\n        );\n    }\n\n    getDossierIdFromActionCode(actionCode) {\n        return this.db\n            .find({\n                selector: {\n                    ACDG_CODE_ACTION: actionCode\n                }\n            })\n            .then(items => items.docs[0].DOSSIER_IDENT);\n    }\n\n    getDossierById(dossier) {\n        return this.db\n            .find({\n                selector: {\n                    DOSSIER_IDENT: parseInt(dossier)\n                }\n            })\n            .then(res => res.docs[0]);\n    }\n}\n\nexport default PouchDbService;\n"]},"metadata":{},"sourceType":"module"}